import{_ as p,C as h,c as r,o as k,j as i,a as e,aA as n,G as t,w as l}from"./chunks/framework.DotEHpbr.js";const b=JSON.parse('{"title":"Mean","description":"","frontmatter":{},"headers":[],"relativePath":"api/07_Moments/02_SimpleExpectedReturns.md","filePath":"api/07_Moments/02_SimpleExpectedReturns.md","lastUpdated":null}'),d={name:"api/07_Moments/02_SimpleExpectedReturns.md"},o={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""};function g(c,s,u,y,m,F){const a=h("Badge");return k(),r("div",null,[s[8]||(s[8]=i("h1",{id:"Mean",tabindex:"-1"},[e("Mean "),i("a",{class:"header-anchor",href:"#Mean","aria-label":'Permalink to "Mean {#Mean}"'},"​")],-1)),i("details",o,[i("summary",null,[s[0]||(s[0]=i("a",{id:"PortfolioOptimisers.SimpleExpectedReturns",href:"#PortfolioOptimisers.SimpleExpectedReturns"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.SimpleExpectedReturns")],-1)),s[1]||(s[1]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SimpleExpectedReturns{T1} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractExpectedReturnsEstimator</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>A simple expected returns estimator for PortfolioOptimisers.jl, representing the sample mean with optional observation weights.</p><p><code>SimpleExpectedReturns</code> is the standard estimator for computing expected returns as the (possibly weighted) mean of asset returns. It supports both unweighted and weighted mean estimation by storing an optional weights vector.</p><p><strong>Fields</strong></p><ul><li><code>w</code>: Optional weights for each observation. If <code>nothing</code>, the unweighted mean is computed.</li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleExpectedReturns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractWeights}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> If </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`w`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> is provided, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`!isempty(w)`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR21/api/07_Moments/01_Base_Moments#PortfolioOptimisers.AbstractExpectedReturnsEstimator"><code>AbstractExpectedReturnsEstimator</code></a></p></li><li><p><a href="https://juliastats.org/StatsBase.jl/stable/weights/" target="_blank" rel="noreferrer"><code>StatsBase.AbstractWeights</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR21/api/07_Moments/02_SimpleExpectedReturns#Statistics.mean-Tuple{SimpleExpectedReturns, AbstractMatrix}"><code>mean(me::SimpleExpectedReturns, X::AbstractMatrix; dims::Int = 1, kwargs...)</code></a></p></li></ul>',12)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9ed3322eec9af766b8e03a576a6dbf517cc67eec/src/08_Moments/02_SimpleExpectedReturns.jl#L1-L33",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",E,[i("summary",null,[s[4]||(s[4]=i("a",{id:"Statistics.mean-Tuple{SimpleExpectedReturns, AbstractMatrix}",href:"#Statistics.mean-Tuple{SimpleExpectedReturns, AbstractMatrix}"},[i("span",{class:"jlbinding"},"Statistics.mean")],-1)),s[5]||(s[5]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[7]||(s[7]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(me</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleExpectedReturns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the mean of asset returns using a <a href="/PortfolioOptimisers.jl/previews/PR21/api/07_Moments/02_SimpleExpectedReturns#PortfolioOptimisers.SimpleExpectedReturns"><code>SimpleExpectedReturns</code></a> estimator.</p><p>This method computes the expected returns as the sample mean of the input data <code>X</code>, optionally using observation weights stored in the estimator. If no weights are provided, the unweighted mean is computed.</p><p><strong>Arguments</strong></p><ul><li><p><code>me</code>: The expected returns estimator.</p></li><li><p><code>X</code>: Data array of asset returns (observations × assets).</p></li><li><p><code>dims</code>: Dimension along which to compute the mean.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to <a href="https://juliastats.org/StatsBase.jl/stable/scalarstats/#Statistics.mean" target="_blank" rel="noreferrer"><code>Statistics.mean</code></a>.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>mu::Vector{&lt;:Real}</code>: The expected returns vector.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StatsBase</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.03</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.04</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SimpleExpectedReturns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SimpleExpectedReturns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ser, X)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.02</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0.03</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Weights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> serw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SimpleExpectedReturns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> w)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SimpleExpectedReturns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StatsBase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Weights{Float64, Float64, Vector{Float64}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(serw, X)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.026</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0.036</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR21/api/07_Moments/02_SimpleExpectedReturns#PortfolioOptimisers.SimpleExpectedReturns"><code>SimpleExpectedReturns</code></a></p></li><li><p><a href="https://juliastats.org/StatsBase.jl/stable/scalarstats/#Statistics.mean" target="_blank" rel="noreferrer"><code>Statistics.mean</code></a></p></li></ul>`,11)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9ed3322eec9af766b8e03a576a6dbf517cc67eec/src/08_Moments/02_SimpleExpectedReturns.jl#L46-L96",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const f=p(d,[["render",g]]);export{b as __pageData,f as default};
