import{_ as l,C as o,c as p,o as d,j as s,a as e,aA as n,G as a,w as r}from"./chunks/framework.Bf1PV6LJ.js";const C=JSON.parse('{"title":"Delta Uncertainty Sets","description":"","frontmatter":{},"headers":[],"relativePath":"api/14_UncertaintySets/02_DeltaUncertaintySet.md","filePath":"api/14_UncertaintySets/02_DeltaUncertaintySet.md","lastUpdated":null}'),h={name:"api/14_UncertaintySets/02_DeltaUncertaintySet.md"},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""};function y(m,i,E,f,_,F){const t=o("Badge");return d(),p("div",null,[i[16]||(i[16]=s("h1",{id:"Delta-Uncertainty-Sets",tabindex:"-1"},[e("Delta Uncertainty Sets "),s("a",{class:"header-anchor",href:"#Delta-Uncertainty-Sets","aria-label":'Permalink to "Delta Uncertainty Sets {#Delta-Uncertainty-Sets}"'},"â€‹")],-1)),s("details",c,[s("summary",null,[i[0]||(i[0]=s("a",{id:"PortfolioOptimisers.DeltaUncertaintySet",href:"#PortfolioOptimisers.DeltaUncertaintySet"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.DeltaUncertaintySet")],-1)),i[1]||(i[1]=e()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[3]||(i[3]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DeltaUncertaintySet{T1, T2, T3} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractUncertaintySetEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dmu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dsigma</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Estimator for box uncertainty sets using delta bounds on mean and covariance statistics in portfolio optimisation.</p><p><strong>Fields</strong></p><ul><li><p><code>pe</code>: Prior estimator used to compute mean and covariance statistics.</p></li><li><p><code>dmu</code>: Delta bound for expected returns (mean).</p></li><li><p><code>dsigma</code>: Delta bound for covariance.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeltaUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; pe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPriorEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EmpiricalPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), dmu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    dsigma</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><ul><li><p><code>dmu &gt;= 0</code>.</p></li><li><p><code>dsigma &gt;= 0</code>.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DeltaUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DeltaUncertaintySet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pe     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EmpiricalPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dmu    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dsigma </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySet"><code>BoxUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.AbstractUncertaintySetEstimator"><code>AbstractUncertaintySetEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/13_Prior/01_BasePrior#PortfolioOptimisers.AbstractPriorEstimator"><code>AbstractPriorEstimator</code></a></p></li></ul>`,13)),a(t,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...i[2]||(i[2]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/82dd5257cd1ac611fab347583c7f2680a6c385c6/src/15_UncertaintySets/02_DeltaUncertaintySets.jl#L1-L43",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",k,[s("summary",null,[i[4]||(i[4]=s("a",{id:"PortfolioOptimisers.ucs",href:"#PortfolioOptimisers.ucs"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.ucs")],-1)),i[5]||(i[5]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[7]||(i[7]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeltaUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs box uncertainty sets for mean and covariance statistics using delta bounds from a prior estimator.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Delta uncertainty set estimator. Provides delta bounds and prior estimator.</p></li><li><p><code>X</code>: Data matrix (e.g., returns).</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics (default: 1).</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>(mu_ucs::BoxUncertaintySet, sigma_ucs::BoxUncertaintySet)</code>: Expected returns and covariance uncertainty sets.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Constructs mean uncertainty set with lower bound at zero and upper bound at <code>2 * dmu * abs.(pr.mu)</code>.</p></li><li><p>Constructs covariance uncertainty set with bounds at <code>pr.sigma Â± d_sigma</code>, where <code>d_sigma = dsigma * abs.(pr.sigma)</code>.</p></li><li><p>Returns both sets as a tuple.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/02_DeltaUncertaintySet#PortfolioOptimisers.DeltaUncertaintySet"><code>DeltaUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySet"><code>BoxUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.mu_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>mu_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.sigma_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>sigma_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...i[6]||(i[6]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/82dd5257cd1ac611fab347583c7f2680a6c385c6/src/15_UncertaintySets/02_DeltaUncertaintySets.jl#L58-L89",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",u,[s("summary",null,[i[8]||(i[8]=s("a",{id:"PortfolioOptimisers.mu_ucs",href:"#PortfolioOptimisers.mu_ucs"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.mu_ucs")],-1)),i[9]||(i[9]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[11]||(i[11]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mu_ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeltaUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs a box uncertainty set for expected returns (mean) using delta bounds from a prior estimator.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Delta uncertainty set estimator. Provides delta bounds and prior estimator.</p></li><li><p><code>X</code>: Data matrix (e.g., returns).</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator (default: <code>nothing</code>).</p></li><li><p><code>dims</code>: Dimension along which to compute statistics (default: <code>1</code>).</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>mu_ucs::BoxUncertaintySet</code>: Expected returns uncertainty set.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Constructs mean uncertainty set with lower bound at zero and upper bound at <code>2 * dmu * abs.(pr.mu)</code>.</p></li><li><p>Ignores additional arguments and keyword arguments except those passed to the prior estimator.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/02_DeltaUncertaintySet#PortfolioOptimisers.DeltaUncertaintySet"><code>DeltaUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySet"><code>BoxUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.ucs-Tuple{Union{Nothing, Tuple{var&quot;#s49&quot;, var&quot;#s48&quot;} where {var&quot;#s49&quot;&lt;:(Union{Nothing, var&quot;#s47&quot;} where var&quot;#s47&quot;&lt;:PortfolioOptimisers.AbstractUncertaintySetResult), var&quot;#s48&quot;&lt;:(Union{Nothing, var&quot;#s46&quot;} where var&quot;#s46&quot;&lt;:PortfolioOptimisers.AbstractUncertaintySetResult)}}, Vararg{Any}}"><code>ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.sigma_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>sigma_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...i[10]||(i[10]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/82dd5257cd1ac611fab347583c7f2680a6c385c6/src/15_UncertaintySets/02_DeltaUncertaintySets.jl#L98-L128",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",g,[s("summary",null,[i[12]||(i[12]=s("a",{id:"PortfolioOptimisers.sigma_ucs",href:"#PortfolioOptimisers.sigma_ucs"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.sigma_ucs")],-1)),i[13]||(i[13]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[15]||(i[15]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sigma_ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DeltaUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs a box uncertainty set for covariance using delta bounds from a prior estimator.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Delta uncertainty set estimator. Provides delta bounds and prior estimator.</p></li><li><p><code>X</code>: Data matrix (e.g., returns).</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator (default: <code>nothing</code>).</p></li><li><p><code>dims</code>: Dimension along which to compute statistics (default: <code>1</code>).</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>sigma_ucs::BoxUncertaintySet</code>: Covariance uncertainty set.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Constructs covariance uncertainty set with lower bound at <code>pr.sigma - d_sigma</code> and upper bound at <code>pr.sigma + d_sigma</code>, where <code>d_sigma = dsigma * abs.(pr.sigma)</code>.</p></li><li><p>Ignores additional arguments and keyword arguments except those passed to the prior estimator.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/02_DeltaUncertaintySet#PortfolioOptimisers.DeltaUncertaintySet"><code>DeltaUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySet"><code>BoxUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.ucs-Tuple{Union{Nothing, Tuple{var&quot;#s49&quot;, var&quot;#s48&quot;} where {var&quot;#s49&quot;&lt;:(Union{Nothing, var&quot;#s47&quot;} where var&quot;#s47&quot;&lt;:PortfolioOptimisers.AbstractUncertaintySetResult), var&quot;#s48&quot;&lt;:(Union{Nothing, var&quot;#s46&quot;} where var&quot;#s46&quot;&lt;:PortfolioOptimisers.AbstractUncertaintySetResult)}}, Vararg{Any}}"><code>ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR23/api/14_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.mu_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>mu_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:r(()=>[...i[14]||(i[14]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/82dd5257cd1ac611fab347583c7f2680a6c385c6/src/15_UncertaintySets/02_DeltaUncertaintySets.jl#L135-L165",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const U=l(h,[["render",y]]);export{C as __pageData,U as default};
