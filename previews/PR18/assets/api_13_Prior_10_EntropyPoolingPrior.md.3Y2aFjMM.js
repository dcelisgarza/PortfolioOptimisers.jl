import{_ as o,C as r,c as e,o as h,j as s,a as l,aA as p,G as a,w as n}from"./chunks/framework.LXV_MLlu.js";const S=JSON.parse('{"title":"Entropy Pooling","description":"","frontmatter":{},"headers":[],"relativePath":"api/13_Prior/10_EntropyPoolingPrior.md","filePath":"api/13_Prior/10_EntropyPoolingPrior.md","lastUpdated":null}'),k={name:"api/13_Prior/10_EntropyPoolingPrior.md"},g={class:"jldocstring custom-block",open:""},d={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""};function D(j,i,w,B,T,R){const t=r("Badge");return h(),e("div",null,[i[71]||(i[71]=s("h1",{id:"Entropy-Pooling",tabindex:"-1"},[l("Entropy Pooling "),s("a",{class:"header-anchor",href:"#Entropy-Pooling","aria-label":'Permalink to "Entropy Pooling {#Entropy-Pooling}"'},"â€‹")],-1)),s("details",g,[s("summary",null,[i[0]||(i[0]=s("a",{id:"PortfolioOptimisers.H0_EntropyPooling",href:"#PortfolioOptimisers.H0_EntropyPooling"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.H0_EntropyPooling")],-1)),i[1]||(i[1]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[3]||(i[3]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> H0_EntropyPooling </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEntropyPoolingAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>One-shot entropy pooling. It sets and optimises all the constraints simultaneously. This introduces bias in the posterior probabilities, but is faster.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingAlgorithm"><code>AbstractEntropyPoolingAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.H1_EntropyPooling"><code>H1_EntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.H2_EntropyPooling"><code>H2_EntropyPooling</code></a></p></li></ul>',4)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[2]||(i[2]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L35-L47",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",d,[s("summary",null,[i[4]||(i[4]=s("a",{id:"PortfolioOptimisers.H1_EntropyPooling",href:"#PortfolioOptimisers.H1_EntropyPooling"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.H1_EntropyPooling")],-1)),i[5]||(i[5]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[7]||(i[7]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> H1_EntropyPooling </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEntropyPoolingAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Uses the initial probabilities to optimise the posterior probabilities at every step. This reduces bias in the posterior probabilities, but is slower.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingAlgorithm"><code>AbstractEntropyPoolingAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.H0_EntropyPooling"><code>H0_EntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.H2_EntropyPooling"><code>H2_EntropyPooling</code></a></p></li></ul>',4)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[6]||(i[6]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L49-L61",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",E,[s("summary",null,[i[8]||(i[8]=s("a",{id:"PortfolioOptimisers.H2_EntropyPooling",href:"#PortfolioOptimisers.H2_EntropyPooling"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.H2_EntropyPooling")],-1)),i[9]||(i[9]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[11]||(i[11]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> H2_EntropyPooling </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEntropyPoolingAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Uses the previous step&#39;s probabilities to optimise the next step&#39;s probabilities. This is faster but may introduce bias.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingAlgorithm"><code>AbstractEntropyPoolingAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.H0_EntropyPooling"><code>H0_EntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.H1_EntropyPooling"><code>H1_EntropyPooling</code></a></p></li></ul>',4)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[10]||(i[10]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L63-L75",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",y,[s("summary",null,[i[12]||(i[12]=s("a",{id:"PortfolioOptimisers.LogEntropyPooling",href:"#PortfolioOptimisers.LogEntropyPooling"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.LogEntropyPooling")],-1)),i[13]||(i[13]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[15]||(i[15]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LogEntropyPooling </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEntropyPoolingOptAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Logarithmic entropy pooling optimisation algorithm.</p><p><code>LogEntropyPooling</code> is a concrete subtype of <a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingOptAlgorithm"><code>AbstractEntropyPoolingOptAlgorithm</code></a> representing the logarithmic entropy pooling optimisation algorithm. This algorithm solves for posterior probabilities by minimising the Kullback-Leibler divergence between the prior and posterior weights, subject to moment and view constraints, using a logarithmic objective.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingOptAlgorithm"><code>AbstractEntropyPoolingOptAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.ExpEntropyPooling"><code>ExpEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.OptimEntropyPooling"><code>OptimEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.JuMPEntropyPooling"><code>JuMPEntropyPooling</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[14]||(i[14]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L95-L110",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",c,[s("summary",null,[i[16]||(i[16]=s("a",{id:"PortfolioOptimisers.ExpEntropyPooling",href:"#PortfolioOptimisers.ExpEntropyPooling"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.ExpEntropyPooling")],-1)),i[17]||(i[17]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[19]||(i[19]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ExpEntropyPooling </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEntropyPoolingOptAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Exponential entropy pooling optimisation algorithm.</p><p><code>ExpEntropyPooling</code> is a concrete subtype of <a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingOptAlgorithm"><code>AbstractEntropyPoolingOptAlgorithm</code></a> representing the exponential entropy pooling optimisation algorithm. This algorithm solves for posterior probabilities by minimising the exponential divergence between the prior and posterior weights, subject to moment and view constraints, using an exponential objective.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingOptAlgorithm"><code>AbstractEntropyPoolingOptAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.LogEntropyPooling"><code>LogEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.OptimEntropyPooling"><code>OptimEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.JuMPEntropyPooling"><code>JuMPEntropyPooling</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[18]||(i[18]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L112-L127",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",P,[s("summary",null,[i[20]||(i[20]=s("a",{id:"PortfolioOptimisers.CVaREntropyPooling",href:"#PortfolioOptimisers.CVaREntropyPooling"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.CVaREntropyPooling")],-1)),i[21]||(i[21]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[23]||(i[23]=p(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CVaREntropyPooling{T1, T2} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEntropyPoolingOptimiser</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Conditional Value-at-Risk (CVaR) entropy pooling optimiser.</p><p><code>CVaREntropyPooling</code> is a concrete subtype of <a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingOptimiser"><code>AbstractEntropyPoolingOptimiser</code></a> that uses root-finding algorithms from <a href="https://github.com/JuliaMath/Roots.jl" target="_blank" rel="noreferrer"><code>Roots.jl</code></a> to solve entropy pooling problems with CVaR (Conditional Value-at-Risk) view constraints. This optimiser is designed for scenarios where CVaR views are specified and requires robust numerical methods to find the solution.</p><p><strong>Fields</strong></p><ul><li><p><code>args</code>: Tuple of arguments passed to the root-finding algorithm (e.g., <code>Roots.Brent()</code>).</p></li><li><p><code>kwargs</code>: Named tuple of keyword arguments for the root-finding algorithm.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CVaREntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Roots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Brent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),), kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (;))</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CVaREntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CVaREntropyPooling</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Tuple{Roots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Brent}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Roots</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Brent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  kwargs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingOptimiser"><code>AbstractEntropyPoolingOptimiser</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.OptimEntropyPooling"><code>OptimEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.JuMPEntropyPooling"><code>JuMPEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.EntropyPoolingPrior"><code>EntropyPoolingPrior</code></a></p></li><li><p><a href="https://github.com/JuliaMath/Roots.jl" target="_blank" rel="noreferrer"><code>Roots.jl</code></a></p></li></ul>`,12)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[22]||(i[22]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L186-L227",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",F,[s("summary",null,[i[24]||(i[24]=s("a",{id:"PortfolioOptimisers.OptimEntropyPooling",href:"#PortfolioOptimisers.OptimEntropyPooling"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.OptimEntropyPooling")],-1)),i[25]||(i[25]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[27]||(i[27]=p(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OptimEntropyPooling{T1, T2, T3, T4, T5} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEntropyPoolingOptimiser</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sc1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sc2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Optim.jl-based entropy pooling optimiser.</p><p><code>OptimEntropyPooling</code> is a concrete subtype of <a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingOptimiser"><code>AbstractEntropyPoolingOptimiser</code></a> that uses <a href="https://github.com/JuliaNLSolvers/Optim.jl" target="_blank" rel="noreferrer"><code>Optim.jl</code></a> to solve entropy pooling problems. This optimiser supports both logarithmic and exponential entropy pooling objectives, and allows for flexible configuration of solver arguments, scaling parameters, and algorithm selection.</p><p><strong>Fields</strong></p><ul><li><p><code>args</code>: Tuple of arguments passed to the <a href="https://github.com/JuliaNLSolvers/Optim.jl" target="_blank" rel="noreferrer"><code>Optim.jl</code></a> solver.</p></li><li><p><code>kwargs</code>: Named tuple of keyword arguments for the <a href="https://github.com/JuliaNLSolvers/Optim.jl" target="_blank" rel="noreferrer"><code>Optim.jl</code></a> solver.</p></li><li><p><code>sc1</code>: Scaling parameter for the objective function.</p></li><li><p><code>sc2</code>: Slack parameter for relaxing fixed equality constraint penalties so that they can be satisfied more easily.</p></li><li><p><code>alg</code>: Entropy pooling optimisation algorithm.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OptimEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (), kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (;), sc1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    sc2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1e3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractEntropyPoolingOptAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ExpEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><ul><li><p><code>sc1 &gt;= 0</code></p></li><li><p><code>sc2 &gt;= 0</code></p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> OptimEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OptimEntropyPooling</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Tuple{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  kwargs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     sc1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     sc2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ExpEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingOptimiser"><code>AbstractEntropyPoolingOptimiser</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.LogEntropyPooling"><code>LogEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.ExpEntropyPooling"><code>ExpEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.JuMPEntropyPooling"><code>JuMPEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.CVaREntropyPooling"><code>CVaREntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.EntropyPoolingPrior"><code>EntropyPoolingPrior</code></a></p></li><li><p><a href="https://github.com/JuliaNLSolvers/Optim.jl" target="_blank" rel="noreferrer"><code>Optim.jl</code></a></p></li></ul>`,14)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[26]||(i[26]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L238-L297",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",m,[s("summary",null,[i[28]||(i[28]=s("a",{id:"PortfolioOptimisers.JuMPEntropyPooling",href:"#PortfolioOptimisers.JuMPEntropyPooling"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.JuMPEntropyPooling")],-1)),i[29]||(i[29]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[31]||(i[31]=p(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JuMPEntropyPooling{T1, T2, T3, T4, T5} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEntropyPoolingOptimiser</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    slv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sc1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sc2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    so</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>JuMP.jl-based entropy pooling optimiser.</p><p><code>JuMPEntropyPooling</code> is a concrete subtype of <a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingOptimiser"><code>AbstractEntropyPoolingOptimiser</code></a> that uses <a href="https://github.com/jump-dev/JuMP.jl" target="_blank" rel="noreferrer">JuMP.jl</a> to solve entropy pooling problems. This optimiser supports both logarithmic and exponential entropy pooling objectives, and allows for flexible configuration of solver arguments, scaling parameters, and algorithm selection.</p><p><strong>Fields</strong></p><ul><li><p><code>slv</code>: Solver object or vector of solvers for JuMP.jl.</p></li><li><p><code>sc1</code>: Scaling parameter for the objective function.</p></li><li><p><code>sc2</code>: Scaling parameter for constraint penalties.</p></li><li><p><code>so</code>: Scaling parameter for the objective expression.</p></li><li><p><code>alg</code>: Entropy pooling optimisation algorithm (<code>LogEntropyPooling</code> or <code>ExpEntropyPooling</code>).</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JuMPEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; slv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{&lt;:Solver, &lt;:AbstractVector{&lt;:Solver}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sc1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                   sc2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1e5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, so</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                   alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractEntropyPoolingOptAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ExpEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><ul><li><p>If <code>slv</code> is a vector, it must be non-empty.</p></li><li><p><code>sc1 &gt;= 0</code></p></li><li><p><code>sc2 &gt;= 0</code></p></li><li><p><code>so &gt;= 0</code></p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JuMPEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; slv </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Solver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :fake_solver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, solver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :MySolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JuMPEntropyPooling</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  slv </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Solver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Symbol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :fake_solver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        solver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Symbol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :MySolver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      settings </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     check_sol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   add_bridges </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  sc1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  sc2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100000.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   so </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ExpEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingOptimiser"><code>AbstractEntropyPoolingOptimiser</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.LogEntropyPooling"><code>LogEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.ExpEntropyPooling"><code>ExpEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.OptimEntropyPooling"><code>OptimEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.CVaREntropyPooling"><code>CVaREntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.EntropyPoolingPrior"><code>EntropyPoolingPrior</code></a></p></li><li><p><a href="https://github.com/jump-dev/JuMP.jl" target="_blank" rel="noreferrer">JuMP.jl</a></p></li></ul>`,14)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[30]||(i[30]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L319-L385",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",u,[s("summary",null,[i[32]||(i[32]=s("a",{id:"PortfolioOptimisers.EntropyPoolingPrior",href:"#PortfolioOptimisers.EntropyPoolingPrior"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.EntropyPoolingPrior")],-1)),i[33]||(i[33]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[35]||(i[35]=p(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EntropyPoolingPrior{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                           T16} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractLowOrderPriorEstimator_AF</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mu_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    var_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cvar_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sigma_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sk_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kt_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T7</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rho_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    var_alpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T9</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cvar_alpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T11</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ds_opt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T12</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dm_opt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T13</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    opt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T14</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T15</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T16</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Entropy pooling prior estimator for asset returns.</p><p><code>EntropyPoolingPrior</code> is a low order prior estimator that computes the mean and covariance of asset returns using entropy pooling. It supports moment and view constraints (mean, variance, CVaR, covariance, skewness, kurtosis, correlation), flexible confidence specification, and composable optimisation algorithms. The estimator integrates asset sets, view constraints, and multiple entropy pooling algorithms (Optim.jl, JuMP.jl, CVaR root-finding), and allows for custom prior weights and solver configuration.</p><p><strong>Fields</strong></p><ul><li><p><code>pe</code>: Prior estimator for asset returns.</p></li><li><p><code>mu_views</code>: Mean view constraints.</p></li><li><p><code>sigma_views</code>: Variance view constraints.</p></li><li><p><code>cvar_views</code>: CVaR view constraints.</p></li><li><p><code>sigma_views</code>: Covariance view constraints.</p></li><li><p><code>sk_views</code>: Skewness view constraints.</p></li><li><p><code>kt_views</code>: Kurtosis view constraints.</p></li><li><p><code>rho_views</code>: Correlation view constraints.</p></li><li><p><code>var_alpha</code>: Confidence level for VaR (Value at Risk) views.</p></li><li><p><code>cvar_alpha</code>: Confidence level for CVaR (Conditional Value at Risk) views.</p></li><li><p><code>sets</code>: Asset sets.</p></li><li><p><code>ds_opt</code>: CVaR entropy pooling optimiser.</p></li><li><p><code>dm_opt</code>: Optim.jl-based entropy pooling optimiser.</p></li><li><p><code>opt</code>: Main entropy pooling optimiser.</p></li><li><p><code>w</code>: Prior weights.</p></li><li><p><code>alg</code>: Entropy pooling algorithm.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EntropyPoolingPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; pe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLowOrderPriorEstimator_A_F_AF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EmpiricalPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    mu_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:LinearConstraintEstimator}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    var_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:LinearConstraintEstimator}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    cvar_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:LinearConstraintEstimator}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    sigma_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:LinearConstraintEstimator}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    sk_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:LinearConstraintEstimator}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    kt_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:LinearConstraintEstimator}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    rho_views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:LinearConstraintEstimator}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    var_alpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cvar_alpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AssetSets}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    ds_opt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:CVaREntropyPooling}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    dm_opt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:OptimEntropyPooling}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    opt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{&lt;:OptimEntropyPooling, &lt;:JuMPEntropyPooling}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> OptimEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, AbstractVector}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractEntropyPoolingAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> H1_EntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><ul><li><p>If any view constraint is provided, <code>sets</code> must not be <code>nothing</code>.</p></li><li><p><code>0 &lt; var_alpha &lt; 1</code></p></li><li><p><code>0 &lt; cvar_alpha &lt; 1</code></p></li><li><p>If <code>w</code> is provided, it must be non-empty and match the number of observations.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EntropyPoolingPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; sets </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;nx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nx&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                           mu_views </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LinearConstraintEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                                val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A == 0.03&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                                       &quot;B + C == 0.04&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EntropyPoolingPrior</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           pe </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EmpiricalPrior</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ce </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisersCovariance</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   ce </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Covariance</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    me </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SimpleExpectedReturns</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ce </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeneralWeightedCovariance</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   ce </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StatsBase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SimpleCovariance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StatsBase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleCovariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Full</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   mp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DefaultMatrixProcessing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       pdm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Posdef</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UnionAll</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NearestCorrelationMatrix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Newton</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   denoise </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    detone </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        me </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SimpleExpectedReturns</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   horizon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     mu_views </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LinearConstraintEstimator</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{String}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A == 0.03&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B + C == 0.04&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    var_views </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   cvar_views </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  sigma_views </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     sk_views </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     kt_views </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rho_views </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    var_alpha </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   cvar_alpha </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         sets </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AssetSets</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;nx&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   dict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Dict{String, Vector{String}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nx&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       ds_opt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       dm_opt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          opt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OptimEntropyPooling</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     args </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Tuple{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   kwargs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      sc1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      sc2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">              |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ExpEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> H1_EntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_AF"><code>AbstractLowOrderPriorEstimator_AF</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A_F_AF"><code>AbstractLowOrderPriorEstimator_A_F_AF</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/02_EmpiricalPrior#PortfolioOptimisers.EmpiricalPrior"><code>EmpiricalPrior</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.LinearConstraintEstimator"><code>LinearConstraintEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.CVaREntropyPooling"><code>CVaREntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.OptimEntropyPooling"><code>OptimEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.OptimEntropyPooling"><code>OptimEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.JuMPEntropyPooling"><code>JuMPEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingAlgorithm"><code>AbstractEntropyPoolingAlgorithm</code></a></p></li></ul>`,14)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[34]||(i[34]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L411-L549",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",f,[s("summary",null,[i[36]||(i[36]=s("a",{id:"PortfolioOptimisers.AbstractEntropyPoolingOptimiser",href:"#PortfolioOptimisers.AbstractEntropyPoolingOptimiser"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractEntropyPoolingOptimiser")],-1)),i[37]||(i[37]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[39]||(i[39]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractEntropyPoolingOptimiser </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for entropy pooling optimisers.</p><p><code>AbstractEntropyPoolingOptimiser</code> is the base type for all optimisers that compute entropy pooling weights subject to moment and view constraints. All concrete entropy pooling optimisers should subtype this type to ensure a consistent interface for entropy pooling routines and integration with portfolio optimisation workflows.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingAlgorithm"><code>AbstractEntropyPoolingAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.EntropyPoolingPrior"><code>EntropyPoolingPrior</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.OptimEntropyPooling"><code>OptimEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.JuMPEntropyPooling"><code>JuMPEntropyPooling</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[38]||(i[38]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L1-L16",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",C,[s("summary",null,[i[40]||(i[40]=s("a",{id:"PortfolioOptimisers.AbstractEntropyPoolingAlgorithm",href:"#PortfolioOptimisers.AbstractEntropyPoolingAlgorithm"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractEntropyPoolingAlgorithm")],-1)),i[41]||(i[41]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[43]||(i[43]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractEntropyPoolingAlgorithm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for entropy pooling algorithms.</p><p><code>AbstractEntropyPoolingAlgorithm</code> is the base type for all algorithms used in entropy pooling optimisation routines. All concrete entropy pooling algorithms should subtype this type to ensure a consistent interface for entropy pooling methods and integration with portfolio optimisation workflows.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingOptimiser"><code>AbstractEntropyPoolingOptimiser</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.LogEntropyPooling"><code>LogEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.ExpEntropyPooling"><code>ExpEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.EntropyPoolingPrior"><code>EntropyPoolingPrior</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[42]||(i[42]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L18-L33",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",b,[s("summary",null,[i[44]||(i[44]=s("a",{id:"PortfolioOptimisers.AbstractEntropyPoolingOptAlgorithm",href:"#PortfolioOptimisers.AbstractEntropyPoolingOptAlgorithm"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractEntropyPoolingOptAlgorithm")],-1)),i[45]||(i[45]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[47]||(i[47]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractEntropyPoolingOptAlgorithm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for entropy pooling optimisation algorithms.</p><p><code>AbstractEntropyPoolingOptAlgorithm</code> is the base type for all optimisation algorithms used in entropy pooling routines. All concrete entropy pooling optimisation algorithms should subtype this type to ensure a consistent interface for entropy pooling optimisation and integration with portfolio optimisation workflows.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.AbstractEntropyPoolingAlgorithm"><code>AbstractEntropyPoolingAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.LogEntropyPooling"><code>LogEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.ExpEntropyPooling"><code>ExpEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.OptimEntropyPooling"><code>OptimEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.JuMPEntropyPooling"><code>JuMPEntropyPooling</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[46]||(i[46]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L77-L93",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",A,[s("summary",null,[i[48]||(i[48]=s("a",{id:"PortfolioOptimisers.replace_prior_views",href:"#PortfolioOptimisers.replace_prior_views"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.replace_prior_views")],-1)),i[49]||(i[49]=l()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[53]||(i[53]=p(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">replace_prior_views</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ParsingResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPriorResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; alpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Real}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    strict</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Replace prior references in view parsing results with their corresponding prior values.</p><p><code>replace_prior_views</code> scans a parsed view constraint <a href="/PortfolioOptimisers.jl/previews/PR18/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.ParsingResult"><code>ParsingResult</code></a> for references to prior values (e.g., <code>prior(A)</code>), and replaces them with the actual prior value from the provided prior result object. This ensures that prior-based terms in view constraints are treated as constants and not as variables in the optimisation. If an asset referenced in a prior is not found in the asset set, a warning is issued (or an error if <code>strict=true</code>). If all variables in the view are prior references, an error is thrown.</p><p><strong>Arguments</strong></p><ul><li><p><code>res</code>: Parsed view constraint containing variables and coefficients.</p></li><li><p><code>pr</code>: Prior result object containing prior values (mean, variance, etc.).</p></li><li><p><code>sets</code>: Asset set mapping asset names to indices.</p></li><li><p><code>key</code>: Moment type key (<code>:mu</code>, <code>:var</code>, <code>:cvar</code>, etc.).</p></li><li><p><code>alpha</code>: Optional confidence level for VaR/CVaR views.</p></li><li><p><code>strict</code>: If <code>true</code>, throw errors for missing assets; otherwise, issue warnings.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>res::ParsingResult</code>: Updated parsing result with prior references replaced by their values.</li></ul><p><strong>Details</strong></p><ul><li><p>Prior references are matched using the pattern <code>prior(&lt;asset&gt;)</code>.</p></li><li><p>The right-hand side of the constraint is adjusted by subtracting the prior value times its coefficient.</p></li><li><p>Variables corresponding to prior references are removed from the constraint.</p></li><li><p>Throws an error if no non-prior variables remain.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.ParsingResult"><code>ParsingResult</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/01_BasePrior#PortfolioOptimisers.LowOrderPrior"><code>LowOrderPrior</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/01_BasePrior#PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorEstimator, ReturnsResult}"><code>prior</code></a></p></li></ul>`,11)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[50]||(i[50]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L693-L730",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),i[54]||(i[54]=s("p",null,"broadcasted version of replace_prior_views for vectors of parsing results (multiple views).",-1)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[51]||(i[51]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L768-L770",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[52]||(i[52]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L1259",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",_,[s("summary",null,[i[55]||(i[55]=s("a",{id:"PortfolioOptimisers.get_epw",href:"#PortfolioOptimisers.get_epw"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.get_epw")],-1)),i[56]||(i[56]=l()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[58]||(i[58]=p(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_epw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{&lt;:H0_EntropyPooling, &lt;:H1_EntropyPooling}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, w0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractWeights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        wi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractWeights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Select entropy pooling weights according to the specified algorithm.</p><p><code>get_epw</code> returns the appropriate weights for entropy pooling based on the chosen algorithm. For <code>H1_EntropyPooling</code>, it returns the initial prior weights <code>w0</code>. For <code>H2_EntropyPooling</code>, it returns the updated weights <code>wi</code>. This function is used internally to manage the flow of weights in multi-stage entropy pooling routines.</p><p><strong>Arguments</strong></p><ul><li><p><code>alg</code>: Entropy pooling algorithm .</p></li><li><p><code>w0</code>: Initial prior weights.</p></li><li><p><code>wi</code>: Updated weights from previous step.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>w::AbstractWeights</code>: Selected weights for the current entropy pooling step.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StatsBase</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> w0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pweights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pweights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_epw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">H1_EntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), w0, wi)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element ProbabilityWeights{Float64, Float64, Vector{Float64}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.25</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.25</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.25</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.25</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_epw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">H2_EntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), w0, wi)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element ProbabilityWeights{Float64, Float64, Vector{Float64}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.3</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.4</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.H0_EntropyPooling"><code>H0_EntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.H1_EntropyPooling"><code>H1_EntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.H2_EntropyPooling"><code>H2_EntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.EntropyPoolingPrior"><code>EntropyPoolingPrior</code></a></p></li></ul>`,11)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[57]||(i[57]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L129-L179",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",v,[s("summary",null,[i[59]||(i[59]=s("a",{id:"PortfolioOptimisers.add_ep_constraint!",href:"#PortfolioOptimisers.add_ep_constraint!"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.add_ep_constraint!")],-1)),i[60]||(i[60]=l()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[62]||(i[62]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_ep_constraint!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(epc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lhs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rhs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Add an entropy pooling view constraint to the constraint dictionary.</p><p><code>add_ep_constraint!</code> normalises and adds a constraint to the entropy pooling constraint dictionary <code>epc</code>. If a constraint with the same key already exists, it concatenates the new constraint to the existing one. This function is used internally to build the set of linear and nonlinear constraints for entropy pooling optimisation.</p><p><strong>Arguments</strong></p><ul><li><p><code>epc</code>: Dictionary of entropy pooling constraints, mapping keys to <code>(lhs, rhs)</code> pairs.</p></li><li><p><code>lhs</code>: Left-hand side constraint matrix.</p></li><li><p><code>rhs</code>: Right-hand side constraint vector.</p></li><li><p><code>key</code>: Constraint type key (<code>:eq</code>, <code>:ineq</code>, <code>:feq</code>, <code>:cvar_eq</code>).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>nothing</code>: The function mutates <code>epc</code> in-place.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.entropy_pooling"><code>entropy_pooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.EntropyPoolingPrior"><code>EntropyPoolingPrior</code></a></p></li></ul>',9)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[61]||(i[61]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L656-L680",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",O,[s("summary",null,[i[63]||(i[63]=s("a",{id:"PortfolioOptimisers.entropy_pooling",href:"#PortfolioOptimisers.entropy_pooling"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.entropy_pooling")],-1)),i[64]||(i[64]=l()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[68]||(i[68]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">entropy_pooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, epc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, opt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OptimEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Solve the dual of the exponential entropy pooling formulation using Optim.jl.</p><p><code>entropy_pooling</code> computes posterior probabilities by minimising the exponential divergence between prior and posterior weights, subject to moment and view constraints. The optimisation is performed using <a href="https://github.com/JuliaNLSolvers/Optim.jl" target="_blank" rel="noreferrer"><code>Optim.jl</code></a>, supporting box constraints and slack variables for relaxed equality constraints. This method is used internally by <a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.EntropyPoolingPrior"><code>EntropyPoolingPrior</code></a> when the optimiser is an <a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.OptimEntropyPooling"><code>OptimEntropyPooling</code></a>.</p><p><strong>Arguments</strong></p><ul><li><p><code>w</code>: Prior weights (length = number of observations).</p></li><li><p><code>epc</code>: Dictionary of entropy pooling constraints, mapping keys to <code>(lhs, rhs)</code> pairs.</p></li><li><p>`opt: Optim.jl-based entropy pooling optimiser with exponential objective.</p><ul><li><p><code>::OptimEntropyPooling{&lt;:Any, &lt;:Any, &lt;:Any, &lt;:Any, &lt;:ExpEntropyPooling}</code>: use the exponential formulation.</p></li><li><p><code>::OptimEntropyPooling{&lt;:Any, &lt;:Any, &lt;:Any, &lt;:Any, &lt;:LogEntropyPooling}</code>: use the logarithmic formulation.</p></li></ul></li></ul><p><strong>Returns</strong></p><ul><li><code>pw::ProbabilityWeights</code>: Posterior probability weights satisfying the constraints.</li></ul><p><strong>Details</strong></p><ul><li><p>Constructs the constraint matrix and bounds from <code>epc</code>.</p></li><li><p>Relaxes fixed equality constraints via slack variables to make the problem more tractable.</p></li><li><p>Throws an error if optimisation fails.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.OptimEntropyPooling"><code>OptimEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.ExpEntropyPooling"><code>ExpEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.EntropyPoolingPrior"><code>EntropyPoolingPrior</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.JuMPEntropyPooling"><code>JuMPEntropyPooling</code></a></p></li></ul>',11)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[65]||(i[65]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L854-L889",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),i[69]||(i[69]=p('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">entropy_pooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, epc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, opt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JuMPEntropyPooling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Solve the primal of the exponential entropy pooling formulation using JuMP.jl.</p><p><code>entropy_pooling</code> computes posterior probabilities by minimising the exponential divergence between prior and posterior weights, subject to moment and view constraints. The optimisation is performed using <a href="https://github.com/jump-dev/JuMP.jl" target="_blank" rel="noreferrer"><code>JuMP.jl</code></a>, supporting relative entropy cones and slack variables for relaxed equality constraints. This method is used internally by <a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.EntropyPoolingPrior"><code>EntropyPoolingPrior</code></a> when the optimiser is a <a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.JuMPEntropyPooling"><code>JuMPEntropyPooling</code></a>.</p><p><strong>Arguments</strong></p><ul><li><p><code>w</code>: Prior weights (length = number of observations).</p></li><li><p><code>epc</code>: Dictionary of entropy pooling constraints, mapping keys to <code>(lhs, rhs)</code> pairs.</p></li><li><p><code>opt</code>: JuMP.jl-based entropy pooling optimiser with exponential objective.</p><ul><li><p><code>::JuMPEntropyPooling{&lt;:Any, &lt;:Any, &lt;:Any, &lt;:Any, &lt;:ExpEntropyPooling}</code>: use the exponential formulation.</p></li><li><p><code>::JuMPEntropyPooling{&lt;:Any, &lt;:Any, &lt;:Any, &lt;:Any, &lt;:LogEntropyPooling}</code>: use the logarithmic formulation.</p></li></ul></li></ul><p><strong>Returns</strong></p><ul><li><code>pw::ProbabilityWeights</code>: Posterior probability weights satisfying the constraints.</li></ul><p><strong>Details</strong></p><ul><li><p>Constructs the JuMP model with exponential objective and constraints from <code>epc</code>.</p></li><li><p>Relaxes fixed equality constraints by adding norm one cone bounded slack variables to make the problem more tractable.</p></li><li><p>Throws an error if optimisation fails.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.JuMPEntropyPooling"><code>JuMPEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.ExpEntropyPooling"><code>ExpEntropyPooling</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.EntropyPoolingPrior"><code>EntropyPoolingPrior</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/10_EntropyPoolingPrior#PortfolioOptimisers.OptimEntropyPooling"><code>OptimEntropyPooling</code></a></p></li></ul>',11)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[66]||(i[66]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L999-L1034",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),i[70]||(i[70]=s("p",null,"Solve the primal of the entropy pooling logarithmic formulation using JuMP.jl.",-1)),a(t,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[67]||(i[67]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/8bec1615ef617fa1784500416d84112a3f97ab44/src/13_Prior/10_EntropyPoolingPrior.jl#L1083-L1085",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const L=o(k,[["render",D]]);export{S as __pageData,L as default};
