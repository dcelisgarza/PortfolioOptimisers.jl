import{_ as l,C as o,c as p,o as h,j as s,a as t,aA as r,G as e,w as n}from"./chunks/framework.LXV_MLlu.js";const F=JSON.parse('{"title":"Black Litterman Prior","description":"","frontmatter":{},"headers":[],"relativePath":"api/13_Prior/06_BlackLittermanPrior.md","filePath":"api/13_Prior/06_BlackLittermanPrior.md","lastUpdated":null}'),k={name:"api/13_Prior/06_BlackLittermanPrior.md"},d={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""};function g(m,i,E,P,f,y){const a=o("Badge");return h(),p("div",null,[i[8]||(i[8]=s("h1",{id:"Black-Litterman-Prior",tabindex:"-1"},[t("Black Litterman Prior "),s("a",{class:"header-anchor",href:"#Black-Litterman-Prior","aria-label":'Permalink to "Black Litterman Prior {#Black-Litterman-Prior}"'},"â€‹")],-1)),s("details",d,[s("summary",null,[i[0]||(i[0]=s("a",{id:"PortfolioOptimisers.BlackLittermanPrior",href:"#PortfolioOptimisers.BlackLittermanPrior"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.BlackLittermanPrior")],-1)),i[1]||(i[1]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[3]||(i[3]=r(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BlackLittermanPrior{T1, T2, T3, T4, T5, T6, T7} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractLowOrderPriorEstimator_AF</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    views_conf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tau</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T7</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Black-Litterman prior estimator for asset returns.</p><p><code>BlackLittermanPrior</code> is a low order prior estimator that computes the mean and covariance of asset returns using the Black-Litterman model. It combines a prior estimator, matrix post-processing, user or algorithmic views, asset sets, view confidences, risk-free rate, and a blending parameter <code>tau</code>. The estimator supports both direct and constraint-based views, and allows for flexible confidence specification and matrix processing.</p><p><strong>Fields</strong></p><ul><li><p><code>pe</code>: Prior estimator.</p></li><li><p><code>mp</code>: Matrix post-processing estimator.</p></li><li><p><code>views</code>: Views estimator or views object.</p></li><li><p><code>sets</code>: Asset sets.</p></li><li><p><code>views_conf</code>: View confidence(s).</p></li><li><p><code>rf</code>: Risk-free rate.</p></li><li><p><code>tau</code>: Blending parameter.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BlackLittermanPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    pe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLowOrderPriorEstimator_A_F_AF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EmpiricalPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                                               me </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EquilibriumExpectedReturns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    mp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrixProcessingEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DefaultMatrixProcessing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    views</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{&lt;:LinearConstraintEstimator, &lt;:BlackLittermanViews}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AssetSets}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    views_conf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Real, &lt;:AbstractVector{&lt;:Real}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    rf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tau</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Real}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><ul><li><p>If <code>views</code> is a <a href="/PortfolioOptimisers.jl/previews/PR18/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.LinearConstraintEstimator"><code>LinearConstraintEstimator</code></a>, <code>!isnothing(sets)</code>.</p></li><li><p>If <code>views_conf</code> is not <code>nothing</code>, <code>views_conf</code> is validated with <a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/05_BlackLittermanViewsGeneration#PortfolioOptimisers.assert_bl_views_conf"><code>assert_bl_views_conf</code></a>.</p></li><li><p>If <code>tau</code> is not <code>nothing</code>, <code>tau &gt; 0</code>.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_AF"><code>AbstractLowOrderPriorEstimator_AF</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/02_EmpiricalPrior#PortfolioOptimisers.EmpiricalPrior"><code>EmpiricalPrior</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/05_BlackLittermanViewsGeneration#PortfolioOptimisers.BlackLittermanViews"><code>BlackLittermanViews</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/01_BasePrior#PortfolioOptimisers.LowOrderPrior"><code>LowOrderPrior</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/01_BasePrior#PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorEstimator, ReturnsResult}"><code>prior</code></a></p></li></ul>`,12)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[2]||(i[2]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e9922aad3478bfcea263fd8f31b3510a00c6d3a2/src/13_Prior/6_BlackLittermanPrior.jl#L1-L57",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",c,[s("summary",null,[i[4]||(i[4]=s("a",{id:"PortfolioOptimisers.calc_omega",href:"#PortfolioOptimisers.calc_omega"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.calc_omega")],-1)),i[5]||(i[5]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[7]||(i[7]=r(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">calc_omega</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(views_conf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Real, &lt;:AbstractVector{&lt;:Real}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           sigma</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the Black-Litterman view uncertainty matrix <code>Î©</code>.</p><p>This method constructs the view uncertainty matrix <code>Î©</code> for the Black-Litterman model when no explicit view confidences are provided (<code>views_conf = nothing</code>). The uncertainty for each view is set to the variance of the projected prior covariance, i.e., <code>Î© = diag(P * Î£ * P&#39;)</code>, where <code>P</code> is the view matrix and <code>Î£</code> is the prior covariance matrix.</p><p><strong>Arguments</strong></p><ul><li><p><code>views_conf</code>:</p><ul><li><p><code>::Nothing</code>: Indicates no view confidence is specified, <code>Diagonal(P * sigma * transpose(P))</code>.</p></li><li><p><code>::Real</code>: Scalar confidence level applied uniformly to all views, <code>(1/v - 1) * Diagonal(P * sigma * transpose(P))</code>, where <code>v</code> is the view confidence level.</p></li><li><p><code>::AbstractVector{&lt;:Real}</code>: Vector of confidence levels for each view, <code>(1 ./ v - 1) * Diag(P * Î£ * P&#39;)</code>.</p></li></ul></li><li><p><code>P::AbstractMatrix</code>: The view matrix (views Ã— assets).</p></li><li><p><code>sigma::AbstractMatrix</code>: The prior covariance matrix (assets Ã— assets).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>omega::Diagonal</code>: Diagonal matrix of view uncertainties.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/06_BlackLittermanPrior#PortfolioOptimisers.BlackLittermanPrior"><code>BlackLittermanPrior</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/13_Prior/06_BlackLittermanPrior#PortfolioOptimisers.calc_omega"><code>calc_omega</code></a></p></li></ul>`,9)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...i[6]||(i[6]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e9922aad3478bfcea263fd8f31b3510a00c6d3a2/src/13_Prior/6_BlackLittermanPrior.jl#L110-L139",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const _=l(k,[["render",g]]);export{F as __pageData,_ as default};
