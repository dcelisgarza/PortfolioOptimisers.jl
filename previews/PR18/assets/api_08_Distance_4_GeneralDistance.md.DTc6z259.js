import{_ as p,C as d,c as o,o as r,j as i,a as e,aA as l,G as t,w as n}from"./chunks/framework.LXV_MLlu.js";const j=JSON.parse('{"title":"General Distance","description":"","frontmatter":{},"headers":[],"relativePath":"api/08_Distance/4_GeneralDistance.md","filePath":"api/08_Distance/4_GeneralDistance.md","lastUpdated":null}'),h={name:"api/08_Distance/4_GeneralDistance.md"},c={class:"jldocstring custom-block",open:""},T={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},m={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-3.714ex"},xmlns:"http://www.w3.org/2000/svg",width:"31.323ex",height:"8.56ex",role:"img",focusable:"false",viewBox:"0 -2141.8 13844.6 3783.6","aria-hidden":"true"},Q={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},k={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.667ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.127ex",height:"2.237ex",role:"img",focusable:"false",viewBox:"0 -694 940.3 989","aria-hidden":"true"},g={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},D={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.023ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.176ex",height:"1.593ex",role:"img",focusable:"false",viewBox:"0 -694 520 704","aria-hidden":"true"},u={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},f={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.439ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.138ex",height:"1.439ex",role:"img",focusable:"false",viewBox:"0 -442 503 636","aria-hidden":"true"},y={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},E={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.023ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.061ex",height:"1.023ex",role:"img",focusable:"false",viewBox:"0 -442 469 452","aria-hidden":"true"},C={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""};function P(F,s,A,H,V,L){const a=d("Badge");return r(),o("div",null,[s[44]||(s[44]=i("h1",{id:"General-Distance",tabindex:"-1"},[e("General Distance "),i("a",{class:"header-anchor",href:"#General-Distance","aria-label":'Permalink to "General Distance {#General-Distance}"'},"â€‹")],-1)),i("details",c,[i("summary",null,[s[0]||(s[0]=i("a",{id:"PortfolioOptimisers.GeneralDistance",href:"#PortfolioOptimisers.GeneralDistance"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.GeneralDistance")],-1)),s[1]||(s[1]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[18]||(s[18]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeneralDistance{T1, T2} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDistanceEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    power</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Generalised distance estimator for portfolio optimization.</p>`,2)),i("mjx-container",T,[(r(),o("svg",m,[...s[2]||(s[2]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,1352.2)"><g data-mml-node="mtd"><g data-mml-node="msub"><g data-mml-node="mi"></g><g data-mml-node="TeXAtom" transform="translate(33,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="msub" transform="translate(420.3,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(623,0) scale(1.414)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(859.2,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z" style="stroke-width:3;"></path></g></g></g></g><g data-mml-node="mtd" transform="translate(1922.1,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1333.6,0)"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2024.8,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(2525,0)"><g data-mml-node="mrow"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(623,0) scale(1.414)"><g data-mml-node="mspace"></g></g><g data-mml-node="mi" transform="translate(859.2,0)"><path data-c="1D457" d="M297 596Q297 627 318 644T361 661Q378 661 389 651T403 623Q403 595 384 576T340 557Q322 557 310 567T297 596ZM288 376Q288 405 262 405Q240 405 220 393T185 362T161 325T144 293L137 279Q135 278 121 278H107Q101 284 101 286T105 299Q126 348 164 391T252 441Q253 441 260 441T272 442Q296 441 316 432Q341 418 354 401T367 348V332L318 133Q267 -67 264 -75Q246 -125 194 -164T75 -204Q25 -204 7 -183T-12 -137Q-12 -110 7 -91T53 -71Q70 -71 82 -81T95 -112Q95 -148 63 -167Q69 -168 77 -168Q111 -168 139 -140T182 -74L193 -32Q204 11 219 72T251 197T278 308T289 365Q289 372 288 376Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(1890.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g><g data-mml-node="TeXAtom" transform="translate(2312.9,477.1) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g></g></g></g></g><g data-mml-node="mtr" transform="translate(0,-692.3)"><g data-mml-node="mtd" transform="translate(1453.1,0)"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mtd" transform="translate(1922.1,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mrow" transform="translate(1333.6,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7B" d="M618 -943L612 -949H582L568 -943Q472 -903 411 -841T332 -703Q327 -682 327 -653T325 -350Q324 -28 323 -18Q317 24 301 61T264 124T221 171T179 205T147 225T132 234Q130 238 130 250Q130 255 130 258T131 264T132 267T134 269T139 272T144 275Q207 308 256 367Q310 436 323 519Q324 529 325 851Q326 1124 326 1154T332 1205Q369 1358 566 1443L582 1450H612L618 1444V1429Q618 1413 616 1411L608 1406Q599 1402 585 1393T552 1372T515 1343T479 1305T449 1257T429 1200Q425 1180 425 1152T423 851Q422 579 422 549T416 498Q407 459 388 424T346 364T297 318T250 284T214 264T197 254L188 251L205 242Q290 200 345 138T416 3Q421 -18 421 -48T423 -349Q423 -397 423 -472Q424 -677 428 -694Q429 -697 429 -699Q434 -722 443 -743T465 -782T491 -816T519 -845T548 -868T574 -886T595 -899T610 -908L616 -910Q618 -912 618 -928V-943Z" style="stroke-width:3;"></path></g><g data-mml-node="mtable" transform="translate(750,0)"><g data-mml-node="mtr" transform="translate(0,600)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(500,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mn" transform="translate(1000,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mtd" transform="translate(2500,0)"><g data-mml-node="mtext"><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" style="stroke-width:3;"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(278,0)" style="stroke-width:3;"></path><path data-c="A0" d="" transform="translate(584,0)" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(834,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mspace" transform="translate(1337,0)"></g><g data-mml-node="mi" transform="translate(2170.7,0)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" style="stroke-width:3;"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(833,0)" style="stroke-width:3;"></path><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" transform="translate(1333,0)" style="stroke-width:3;"></path></g><g data-mml-node="mstyle" transform="translate(4059.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mstyle" transform="translate(4226.7,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mn" transform="translate(4560.3,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5338.1,0)"><path data-c="2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(6393.9,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mtr" transform="translate(0,-600)"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mtd" transform="translate(2500,0)"><g data-mml-node="mtext"><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" style="stroke-width:3;"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(500,0)" style="stroke-width:3;"></path><path data-c="68" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(889,0)" style="stroke-width:3;"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1445,0)" style="stroke-width:3;"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1889,0)" style="stroke-width:3;"></path><path data-c="77" d="M90 368Q84 378 76 380T40 385H18V431H24L43 430Q62 430 84 429T116 428Q206 428 221 431H229V385H215Q177 383 177 368Q177 367 221 239L265 113L339 328L333 345Q323 374 316 379Q308 384 278 385H258V431H264Q270 428 348 428Q439 428 454 431H461V385H452Q404 385 404 369Q404 366 418 324T449 234T481 143L496 100L537 219Q579 341 579 347Q579 363 564 373T530 385H522V431H529Q541 428 624 428Q692 428 698 431H703V385H697Q696 385 691 385T682 384Q635 377 619 334L559 161Q546 124 528 71Q508 12 503 1T487 -11H479Q460 -11 456 -4Q455 -3 407 133L361 267Q359 263 266 -4Q261 -11 243 -11H238Q225 -11 220 -3L90 368Z" transform="translate(2281,0)" style="stroke-width:3;"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(3003,0)" style="stroke-width:3;"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(3281,0)" style="stroke-width:3;"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(3675,0)" style="stroke-width:3;"></path></g></g></g></g><g data-mml-node="mo" transform="translate(10143.9,0) translate(0 250)"></g></g><g data-mml-node="mstyle" transform="translate(11477.4,0)"><g data-mml-node="mspace"></g></g><g data-mml-node="mo" transform="translate(11644.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g></g></g></g></g></g>',1)])])),s[3]||(s[3]=i("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[i("mtable",{displaystyle:"true",columnalign:"right left",columnspacing:"0em",rowspacing:"3pt"},[i("mtr",null,[i("mtd",null,[i("msub",null,[i("mi"),i("mrow",{"data-mjx-texclass":"ORD"},[i("mi",null,"g")])]),i("msub",null,[i("mi",null,"d"),i("mrow",{"data-mjx-texclass":"ORD"},[i("mi",null,"i"),i("mo",null,","),i("mstyle",{scriptlevel:"0"},[i("mspace",{width:"0.167em"})]),i("mi",null,"j")])])]),i("mtd",null,[i("mi"),i("mo",null,"="),i("mi",null,"s"),i("mo",null,"â‹…"),i("msup",null,[i("mrow",{"data-mjx-texclass":"INNER"},[i("mo",{"data-mjx-texclass":"OPEN"},"("),i("msub",null,[i("mi",null,"d"),i("mrow",{"data-mjx-texclass":"ORD"},[i("mi",null,"i"),i("mo",null,","),i("mstyle",{scriptlevel:"0"},[i("mspace",{width:"0.167em"})]),i("mi",null,"j")])]),i("mo",{"data-mjx-texclass":"CLOSE"},")")]),i("mrow",{"data-mjx-texclass":"ORD"},[i("mi",null,"p")])])])]),i("mtr",null,[i("mtd",null,[i("mi",null,"s")]),i("mtd",null,[i("mi"),i("mo",null,"="),i("mrow",{"data-mjx-texclass":"INNER"},[i("mo",{"data-mjx-texclass":"OPEN"},"{"),i("mtable",{columnalign:"left left",columnspacing:"1em",rowspacing:".2em"},[i("mtr",null,[i("mtd",null,[i("mn",null,"1"),i("mrow",{"data-mjx-texclass":"ORD"},[i("mo",null,"/")]),i("mn",null,"2")]),i("mtd",null,[i("mtext",null,"ifÂ "),i("mi",null,"p"),i("mspace",{width:"0.667em"}),i("mi",null,"mod"),i("mstyle",{scriptlevel:"0"},[i("mspace",{width:"0.167em"})]),i("mstyle",{scriptlevel:"0"},[i("mspace",{width:"0.167em"})]),i("mn",null,"2"),i("mo",null,"â‰ "),i("mn",null,"0")])]),i("mtr",null,[i("mtd",null,[i("mn",null,"1")]),i("mtd",null,[i("mtext",null,"otherwise")])])]),i("mo",{"data-mjx-texclass":"CLOSE",fence:"true",stretchy:"true",symmetric:"true"})]),i("mstyle",{scriptlevel:"0"},[i("mspace",{width:"0.167em"})]),i("mo",null,",")])])])])],-1))]),i("p",null,[s[12]||(s[12]=e("where ",-1)),i("mjx-container",Q,[(r(),o("svg",k,[...s[4]||(s[4]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"></g><g data-mml-node="TeXAtom" transform="translate(33,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mi" transform="translate(420.3,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g></g></g>',1)])])),s[5]||(s[5]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("msub",null,[i("mi"),i("mrow",{"data-mjx-texclass":"ORD"},[i("mi",null,"g")])]),i("mi",null,"d")])],-1))]),s[13]||(s[13]=e(" is the generalised distance, ",-1)),i("mjx-container",g,[(r(),o("svg",D,[...s[6]||(s[6]=[i("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[i("g",{"data-mml-node":"math"},[i("g",{"data-mml-node":"mi"},[i("path",{"data-c":"1D451",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z",style:{"stroke-width":"3"}})])])],-1)])])),s[7]||(s[7]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mi",null,"d")])],-1))]),s[14]||(s[14]=e(" is the base distance computed using the specified distance algorithm, ",-1)),i("mjx-container",u,[(r(),o("svg",f,[...s[8]||(s[8]=[i("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[i("g",{"data-mml-node":"math"},[i("g",{"data-mml-node":"mi"},[i("path",{"data-c":"1D45D",d:"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z",style:{"stroke-width":"3"}})])])],-1)])])),s[9]||(s[9]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mi",null,"p")])],-1))]),s[15]||(s[15]=e(" is the integer power, ",-1)),i("mjx-container",y,[(r(),o("svg",E,[...s[10]||(s[10]=[i("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[i("g",{"data-mml-node":"math"},[i("g",{"data-mml-node":"mi"},[i("path",{"data-c":"1D460",d:"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z",style:{"stroke-width":"3"}})])])],-1)])])),s[11]||(s[11]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mi",null,"s")])],-1))]),s[16]||(s[16]=e(" is a scaling factor, and each subscript denotes an asset.",-1))]),s[19]||(s[19]=l(`<p><strong>Fields</strong></p><ul><li><p><code>power</code>: The integer power to which the base correlation or distance matrix is raised.</p></li><li><p><code>alg</code>: The base distance algorithm.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeneralDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; power</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDistanceAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SimpleDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><ul><li><code>power &gt;= 1</code>.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeneralDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GeneralDistance</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  power </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SimpleDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/2_Distance#PortfolioOptimisers.distance-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>distance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/2_Distance#PortfolioOptimisers.cor_and_dist-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>cor_and_dist</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleDistance"><code>SimpleDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleAbsoluteDistance"><code>SimpleAbsoluteDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CorrelationDistance"><code>CorrelationDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.VariationInfoDistance"><code>VariationInfoDistance</code></a></p></li></ul>`,11)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[17]||(s[17]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/0b7aeafabdbfc77341e79ba60ec6114fa877e50c/src/8_Distance/4_GeneralDistance.jl#L1-L59",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",C,[i("summary",null,[s[20]||(s[20]=i("a",{id:"PortfolioOptimisers.distance-Tuple{GeneralDistance{<:Any, <:SimpleDistance}, CovarianceEstimator, AbstractMatrix}",href:"#PortfolioOptimisers.distance-Tuple{GeneralDistance{<:Any, <:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.distance")],-1)),s[21]||(s[21]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[23]||(s[23]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeneralDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                             &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleAbsoluteDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                     &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CorrelationDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                     &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CanonicalDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         ce</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">StatsBase.CovarianceEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This method computes the generalised correlation matrix using the provided covariance estimator <code>ce</code> and data matrix <code>X</code>, which is used to compute the distance matrix based on the specified distance algorithm in <code>de</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>de</code>: General distance estimator.</p><ul><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:SimpleDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleDistance"><code>SimpleDistance</code></a> algorithm.</p></li><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:SimpleAbsoluteDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleAbsoluteDistance"><code>SimpleAbsoluteDistance</code></a> algorithm.</p></li><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:LogDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a> algorithm.</p></li><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:CorrelationDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CorrelationDistance"><code>CorrelationDistance</code></a> algorithm.</p></li><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:CanonicalDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a> algorithm.</p></li></ul></li><li><p><code>ce</code>: Covariance estimator.</p></li><li><p><code>X</code>: Data matrix (observations Ã— features).</p></li><li><p><code>dims</code>: Dimension along which to compute the correlation.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the correlation computation.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>dist::Matrix{&lt;:Real}</code>: Matrix of distances of distances.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/4_GeneralDistance#PortfolioOptimisers.GeneralDistance"><code>GeneralDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleDistance"><code>SimpleDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleAbsoluteDistance"><code>SimpleAbsoluteDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CorrelationDistance"><code>CorrelationDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/2_Distance#PortfolioOptimisers.cor_and_dist-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>cor_and_dist</code></a></p></li></ul>`,8)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[22]||(s[22]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/0b7aeafabdbfc77341e79ba60ec6114fa877e50c/src/8_Distance/4_GeneralDistance.jl#L73-L112",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",_,[i("summary",null,[s[24]||(s[24]=i("a",{id:"PortfolioOptimisers.distance-Tuple{GeneralDistance{<:Any, <:LogDistance}, Union{LTDCovariance, PortfolioOptimisersCovariance{<:LTDCovariance}}, AbstractMatrix}",href:"#PortfolioOptimisers.distance-Tuple{GeneralDistance{<:Any, <:LogDistance}, Union{LTDCovariance, PortfolioOptimisersCovariance{<:LTDCovariance}}, AbstractMatrix}"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.distance")],-1)),s[25]||(s[25]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[27]||(s[27]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeneralDistance{&lt;:Any, &lt;:LogDistance}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         ce</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LTDCovariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PortfolioOptimisersCovariance{&lt;:LTDCovariance, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the log-distance matrix from a Lower Tail Dependence (LTD) covariance estimator and data matrix.</p><p><strong>Arguments</strong></p><ul><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:LogDistance}</code>: General distance estimator with <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a> algorithm.</p></li><li><p><code>ce</code>: LTD covariance estimator or a PortfolioOptimisersCovariance wrapping an LTD estimator.</p></li><li><p><code>X</code>: Data matrix (observations Ã— features).</p></li><li><p><code>dims</code>: Dimension along which to compute the correlation.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the correlation computation.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>dist::Matrix{&lt;:Real}</code>: Matrix of pairwise log-distances.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/4_GeneralDistance#PortfolioOptimisers.GeneralDistance"><code>GeneralDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/2_Distance#PortfolioOptimisers.cor_and_dist-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>cor_and_dist</code></a></p></li></ul>`,8)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[26]||(s[26]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/0b7aeafabdbfc77341e79ba60ec6114fa877e50c/src/8_Distance/4_GeneralDistance.jl#L147-L174",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",x,[i("summary",null,[s[28]||(s[28]=i("a",{id:"PortfolioOptimisers.distance-Tuple{GeneralDistance{<:Any, <:CanonicalDistance}, MutualInfoCovariance, AbstractMatrix}",href:"#PortfolioOptimisers.distance-Tuple{GeneralDistance{<:Any, <:CanonicalDistance}, MutualInfoCovariance, AbstractMatrix}"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.distance")],-1)),s[29]||(s[29]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[31]||(s[31]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeneralDistance{&lt;:Any, &lt;:CanonicalDistance}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         ce</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MutualInfoCovariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PortfolioOptimisersCovariance{&lt;:MutualInfoCovariance, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LTDCovariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PortfolioOptimisersCovariance{&lt;:LTDCovariance, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DistanceCovariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PortfolioOptimisersCovariance{&lt;:DistanceCovariance, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the canonical distance matrix using the covariance estimator and data matrix. The method selects the appropriate distance algorithm based on the type of covariance estimator provided (see <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a>).</p><p><strong>Arguments</strong></p><ul><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:CanonicalDistance}</code>: General distance estimator using the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a> algorithm.</p></li><li><p><code>ce::MutualInfoCovariance</code>: Mutual information covariance estimator.</p></li><li><p><code>X</code>: Data matrix (observations Ã— features).</p></li><li><p><code>dims</code>: Dimension along which to compute the distance.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>dist::Matrix{&lt;:Real}</code>: Matrix of pairwise canonical distances.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/4_GeneralDistance#PortfolioOptimisers.GeneralDistance"><code>GeneralDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/07_Moments/11_MutualInfoCovariance#PortfolioOptimisers.MutualInfoCovariance"><code>MutualInfoCovariance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/07_Moments/08_LTDCovariance#PortfolioOptimisers.LTDCovariance"><code>LTDCovariance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/07_Moments/07_DistanceCovariance#PortfolioOptimisers.DistanceCovariance"><code>DistanceCovariance</code></a></p></li></ul>`,8)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[30]||(s[30]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/0b7aeafabdbfc77341e79ba60ec6114fa877e50c/src/8_Distance/4_GeneralDistance.jl#L183-L215",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",w,[i("summary",null,[s[32]||(s[32]=i("a",{id:"PortfolioOptimisers.distance-Tuple{GeneralDistance{<:Any, <:VariationInfoDistance}, Any, AbstractMatrix}",href:"#PortfolioOptimisers.distance-Tuple{GeneralDistance{<:Any, <:VariationInfoDistance}, Any, AbstractMatrix}"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.distance")],-1)),s[33]||(s[33]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[35]||(s[35]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeneralDistance{&lt;:Any, &lt;:VariationInfoDistance}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the variation of information (VI) distance matrix from a data matrix.</p><p><strong>Arguments</strong></p><ul><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:VariationInfoDistance}</code>: General distance estimator with <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.VariationInfoDistance"><code>VariationInfoDistance</code></a> algorithm.</p></li><li><p><code>::Any</code>: Placeholder for compatibility, ignored.</p></li><li><p><code>X</code>: Data matrix (observations Ã— features).</p></li><li><p><code>dims</code>: Dimension along which to compute the distance. If <code>2</code>, the data is transposed.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments, ignored.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>dist::Matrix{&lt;:Real}</code>: Matrix of pairwise variation of information distances.</li></ul><p><strong>Details</strong></p><ul><li><p>The number of bins and normalisation are taken from the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.VariationInfoDistance"><code>VariationInfoDistance</code></a> algorithm fields.</p></li><li><p>If <code>dims == 2</code>, the data matrix is transposed before computation.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/4_GeneralDistance#PortfolioOptimisers.GeneralDistance"><code>GeneralDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.VariationInfoDistance"><code>VariationInfoDistance</code></a></p></li></ul>`,10)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[34]||(s[34]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/0b7aeafabdbfc77341e79ba60ec6114fa877e50c/src/8_Distance/4_GeneralDistance.jl#L246-L275",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",b,[i("summary",null,[s[36]||(s[36]=i("a",{id:"PortfolioOptimisers.distance-Tuple{GeneralDistance{<:Any, <:SimpleDistance}, AbstractMatrix, Vararg{Any}}",href:"#PortfolioOptimisers.distance-Tuple{GeneralDistance{<:Any, <:SimpleDistance}, AbstractMatrix, Vararg{Any}}"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.distance")],-1)),s[37]||(s[37]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[39]||(s[39]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeneralDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                             &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleAbsoluteDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                     &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CorrelationDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                     &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CanonicalDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}}, rho</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the general distance matrix from a correlation or covariance matrix.</p><p>If the input <code>rho</code> is a covariance matrix, it is converted to a correlation matrix which is used to compute the distance matrix using the specified distance algorithm in <code>de</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>de</code>: General distance estimator.</p><ul><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:SimpleDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleDistance"><code>SimpleDistance</code></a> algorithm.</p></li><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:SimpleAbsoluteDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleAbsoluteDistance"><code>SimpleAbsoluteDistance</code></a> algorithm.</p></li><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:LogDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a> algorithm.</p></li><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:CorrelationDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CorrelationDistance"><code>CorrelationDistance</code></a> algorithm.</p></li><li><p><code>de::GeneralDistance{&lt;:Any, &lt;:CanonicalDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a> algorithm.</p></li></ul></li><li><p><code>rho</code>: Correlation or covariance matrix.</p></li><li><p><code>args...</code>: Additional arguments (ignored).</p></li><li><p><code>kwargs...</code>: Additional keyword arguments.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>dist::Matrix{&lt;:Real}</code>: Matrix of pairwise Euclidean distances.</li></ul><p><strong>Details</strong></p><ul><li>If <code>rho</code> is a covariance matrix, it is converted to a correlation matrix using <code>StatsBase.cov2cor</code>.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/4_GeneralDistance#PortfolioOptimisers.GeneralDistance"><code>GeneralDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleDistance"><code>SimpleDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleAbsoluteDistance"><code>SimpleAbsoluteDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CorrelationDistance"><code>CorrelationDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/2_Distance#PortfolioOptimisers.cor_and_dist-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>cor_and_dist</code></a></p></li></ul>`,11)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[38]||(s[38]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/0b7aeafabdbfc77341e79ba60ec6114fa877e50c/src/8_Distance/4_GeneralDistance.jl#L285-L329",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",v,[i("summary",null,[s[40]||(s[40]=i("a",{id:"PortfolioOptimisers.cor_and_dist-Tuple{GeneralDistance{<:Any, <:SimpleDistance}, CovarianceEstimator, AbstractMatrix}",href:"#PortfolioOptimisers.cor_and_dist-Tuple{GeneralDistance{<:Any, <:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.cor_and_dist")],-1)),s[41]||(s[41]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[43]||(s[43]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cor_and_dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeneralDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ce</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">StatsBase.CovarianceEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">             dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute and return the correlation and distance matrices. The distance matrix depends on the combination of distance and covariance estimators (see <a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/2_Distance#PortfolioOptimisers.distance-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>distance</code></a>).</p><p><strong>Arguments</strong></p><ul><li><p><code>de</code>: General distance estimator.</p></li><li><p><code>ce</code>: Covariance estimator.</p></li><li><p><code>X</code>: Data matrix (observations Ã— features).</p></li><li><p><code>dims</code>: Dimension along which to compute the correlation.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the correlation computation.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>(rho::Matrix{&lt;:Real}, dist::Matrix{&lt;:Real})</code>: Tuple of correlation matrix and distance matrix.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/4_GeneralDistance#PortfolioOptimisers.GeneralDistance"><code>GeneralDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR18/api/08_Distance/2_Distance#PortfolioOptimisers.distance-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>distance</code></a></p></li></ul>`,8)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[42]||(s[42]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/0b7aeafabdbfc77341e79ba60ec6114fa877e50c/src/8_Distance/4_GeneralDistance.jl#L382-L406",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const M=p(h,[["render",P]]);export{j as __pageData,M as default};
