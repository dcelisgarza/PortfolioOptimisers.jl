import{_ as p,C as o,c as r,o as h,j as i,a as n,aA as e,G as a,w as l}from"./chunks/framework.D7WzDyXM.js";const P=JSON.parse('{"title":"JuMP Model Optimisation","description":"","frontmatter":{},"headers":[],"relativePath":"api/10_JuMPModelOptimisation.md","filePath":"api/10_JuMPModelOptimisation.md","lastUpdated":null}'),k={name:"api/10_JuMPModelOptimisation.md"},d={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""};function y(m,s,b,F,f,C){const t=o("Badge");return h(),r("div",null,[s[24]||(s[24]=i("h1",{id:"JuMP-Model-Optimisation",tabindex:"-1"},[n("JuMP Model Optimisation "),i("a",{class:"header-anchor",href:"#JuMP-Model-Optimisation","aria-label":'Permalink to "JuMP Model Optimisation {#JuMP-Model-Optimisation}"'},"​")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"PortfolioOptimisers.Solver",href:"#PortfolioOptimisers.Solver"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.Solver")],-1)),s[1]||(s[1]=n()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Solver{T1, T2, T3, T4, T5} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    solver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    settings</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    check_sol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    add_bridges</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Container for configuring a JuMP solver and its settings.</p><p>The <code>Solver</code> struct encapsulates all information needed to set up and run a JuMP optimisation, including the solver backend, solver-specific settings, solution checks, and bridge options.</p><p><strong>Fields</strong></p><ul><li><p><code>name</code>: Symbol or string identifier for the solver.</p></li><li><p><code>solver</code>: The <code>optimizer_factory</code> in <a href="https://jump.dev/JuMP.jl/stable/api/JuMP/#JuMP.set_optimizer" target="_blank" rel="noreferrer"><code>set_optimizer</code></a>.</p></li><li><p><code>settings</code>: Solver-specific settings used in <a href="https://jump.dev/JuMP.jl/stable/api/JuMP/#JuMP.set_attribute" target="_blank" rel="noreferrer"><code>set_attribute</code></a>.</p></li><li><p><code>check_sol</code>: Named tuple of solution for keyword arguments in <a href="https://jump.dev/JuMP.jl/stable/api/JuMP/#JuMP.assert_is_solved_and_feasible" target="_blank" rel="noreferrer"><code>assert_is_solved_and_feasible</code></a>.</p></li><li><p><code>add_bridges</code>: The <code>add_bridges</code> keyword argument in <a href="https://jump.dev/JuMP.jl/stable/api/JuMP/#JuMP.set_optimizer" target="_blank" rel="noreferrer"><code>set_optimizer</code></a>.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Solver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Symbol, &lt;:AbstractString}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, solver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       settings</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractDict, &lt;:Pair, &lt;:AbstractVector{&lt;:Pair}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       check_sol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (;), add_bridges</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><ul><li><code>settings</code>: <ul><li><code>Union{&lt;:AbstractDict, &lt;:AbstractVector}</code>: <code>!isempty(settings)</code>.</li></ul></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Solver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Solver</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         name ┼ String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       solver ┼ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     settings ┼ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    check_sol ┼ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  add_bridges ┴ Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><a href="/PortfolioOptimisers.jl/previews/PR31/api/10_JuMPModelOptimisation#PortfolioOptimisers.optimise_JuMP_model!"><code>optimise_JuMP_model!</code></a></li></ul>`,14)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/cc0eaac64ca975f319306b81f4400027fe2e00b7/src/10_JuMPModelOptimisation.jl#L13-L63",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",g,[i("summary",null,[s[4]||(s[4]=i("a",{id:"PortfolioOptimisers.JuMPResult",href:"#PortfolioOptimisers.JuMPResult"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.JuMPResult")],-1)),s[5]||(s[5]=n()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JuMPResult{T1, T2} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractJuMPResult</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    trials</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    success</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Result type for JuMP model optimisation.</p><p>The <code>JuMPResult</code> struct records the outcome of a JuMP optimisation, including trial errors and success status.</p><p><strong>Fields</strong></p><ul><li><p><code>trials</code>: Dictionary of solver trials and errors.</p></li><li><p><code>success</code>: Boolean indicating whether optimisation succeeded.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JuMPResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; trials</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, success</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JuMPResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; trials </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:HiGHS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:optimize!</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)), success </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JuMPResult</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   trials ┼ Dict{Symbol, Dict{Symbol, String}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:HiGHS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:optimize!</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  success ┴ Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><a href="/PortfolioOptimisers.jl/previews/PR31/api/10_JuMPModelOptimisation#PortfolioOptimisers.optimise_JuMP_model!"><code>optimise_JuMP_model!</code></a></li></ul>`,12)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/cc0eaac64ca975f319306b81f4400027fe2e00b7/src/10_JuMPModelOptimisation.jl#L86-L119",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",u,[i("summary",null,[s[8]||(s[8]=i("a",{id:"PortfolioOptimisers.AbstractJuMPResult",href:"#PortfolioOptimisers.AbstractJuMPResult"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractJuMPResult")],-1)),s[9]||(s[9]=n()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractJuMPResult </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractResult</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for all JuMP-based optimisation result types in PortfolioOptimisers.jl.</p><p>All concrete types representing the result of a JuMP model optimisation should subtype <code>AbstractJuMPResult</code>. This enables a consistent interface for handling solver results throughout the package.</p><p><strong>Related</strong></p><ul><li><a href="/PortfolioOptimisers.jl/previews/PR31/api/10_JuMPModelOptimisation#PortfolioOptimisers.JuMPResult"><code>JuMPResult</code></a></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/cc0eaac64ca975f319306b81f4400027fe2e00b7/src/10_JuMPModelOptimisation.jl#L1-L11",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",c,[i("summary",null,[s[12]||(s[12]=i("a",{id:"PortfolioOptimisers.set_solver_attributes",href:"#PortfolioOptimisers.set_solver_attributes"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.set_solver_attributes")],-1)),s[13]||(s[13]=n()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[17]||(s[17]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_solver_attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set solver attributes for a JuMP model.</p><p>This is a generic fallback that does nothing if no model or settings are provided.</p><p><strong>Arguments</strong></p><ul><li><code>args...</code>: Arguments (ignored).</li></ul><p><strong>Returns</strong></p><ul><li><code>nothing</code></li></ul>',7)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[14]||(s[14]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/cc0eaac64ca975f319306b81f4400027fe2e00b7/src/10_JuMPModelOptimisation.jl#L133-L147",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[18]||(s[18]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_solver_attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JuMP.Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      settings</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{&lt;:AbstractDict, &lt;:AbstractVector{&lt;:Pair}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set multiple solver attributes on a JuMP model.</p><p>Iterates over the provided settings and applies each as a solver attribute.</p><p><strong>Arguments</strong></p><ul><li><p><code>model</code>: JuMP model.</p></li><li><p><code>settings</code>: Dictionary or vector of pairs of solver settings.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>nothing</code></li></ul>`,7)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[15]||(s[15]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/cc0eaac64ca975f319306b81f4400027fe2e00b7/src/10_JuMPModelOptimisation.jl#L151-L167",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[19]||(s[19]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_solver_attributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JuMP.Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, settings</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Set a single solver attribute on a JuMP model.</p><p><strong>Arguments</strong></p><ul><li><p><code>model</code>: JuMP model.</p></li><li><p><code>settings</code>: Pair of attribute name and value.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>nothing</code></li></ul>',6)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[16]||(s[16]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/cc0eaac64ca975f319306b81f4400027fe2e00b7/src/10_JuMPModelOptimisation.jl#L175-L188",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",E,[i("summary",null,[s[20]||(s[20]=i("a",{id:"PortfolioOptimisers.optimise_JuMP_model!",href:"#PortfolioOptimisers.optimise_JuMP_model!"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.optimise_JuMP_model!")],-1)),s[21]||(s[21]=n()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[23]||(s[23]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">optimise_JuMP_model!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JuMP.Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, slv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{&lt;:Solver, &lt;:AbstractVector{&lt;:Solver}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Attempt to optimise a JuMP model using one or more configured solvers.</p><p>Tries each solver in order, applying settings and checking for solution feasibility. Returns a <code>JuMPResult</code> with trial errors and success status.</p><p><strong>Arguments</strong></p><ul><li><p><code>model</code>: JuMP model to optimise.</p></li><li><p><code>slv</code>: Single <code>Solver</code> or vector of <code>Solver</code> objects.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>JuMPResult</code>: Result object containing trial errors and success flag.</li></ul><p><strong>Details</strong></p><ul><li><p>For each solver, sets the optimizer and attributes, runs <code>JuMP.optimize!</code>, and checks solution feasibility.</p></li><li><p>If a solver fails, records the error and tries the next.</p></li><li><p>Stops at the first successful solution.</p></li></ul>',9)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[22]||(s[22]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/cc0eaac64ca975f319306b81f4400027fe2e00b7/src/10_JuMPModelOptimisation.jl#L193-L214",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const v=p(k,[["render",y]]);export{P as __pageData,v as default};
