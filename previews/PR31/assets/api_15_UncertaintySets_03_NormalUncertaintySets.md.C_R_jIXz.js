import{_ as p,C as r,c as h,o,j as s,a as e,aA as n,G as a,w as l}from"./chunks/framework.D7WzDyXM.js";const x=JSON.parse('{"title":"Normal Uncertainty Sets","description":"","frontmatter":{},"headers":[],"relativePath":"api/15_UncertaintySets/03_NormalUncertaintySets.md","filePath":"api/15_UncertaintySets/03_NormalUncertaintySets.md","lastUpdated":null}'),k={name:"api/15_UncertaintySets/03_NormalUncertaintySets.md"},d={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""};function P(D,i,b,B,v,O){const t=r("Badge");return o(),h("div",null,[i[56]||(i[56]=s("h1",{id:"Normal-Uncertainty-Sets",tabindex:"-1"},[e("Normal Uncertainty Sets "),s("a",{class:"header-anchor",href:"#Normal-Uncertainty-Sets","aria-label":'Permalink to "Normal Uncertainty Sets {#Normal-Uncertainty-Sets}"'},"​")],-1)),s("details",d,[s("summary",null,[i[0]||(i[0]=s("a",{id:"PortfolioOptimisers.NormalUncertaintySet",href:"#PortfolioOptimisers.NormalUncertaintySet"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.NormalUncertaintySet")],-1)),i[1]||(i[1]=e()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[3]||(i[3]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NormalUncertaintySet{T1, T2, T3, T4, T5, T6} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractUncertaintySetEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n_sim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    seed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T6</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Estimator for box or ellipse uncertainty sets under the assumption of normally distributed returns in portfolio optimisation.</p><p><strong>Fields</strong></p><ul><li><p><code>pe</code>: Prior estimator used to compute mean and covariance statistics.</p></li><li><p><code>alg</code>: Uncertainty set algorithm (box or ellipse).</p></li><li><p><code>n_sim</code>: Number of simulations for uncertainty set estimation.</p></li><li><p><code>q</code>: Quantile or confidence level for uncertainty set bounds.</p></li><li><p><code>rng</code>: Random number generator for simulation.</p></li><li><p><code>seed</code>: Optional random seed for reproducibility.</p></li></ul><p><strong>Constructors</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; pe</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPriorEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EmpiricalPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                     alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractUncertaintySetAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BoxUncertaintySetAlgorithm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                     n_sim</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3_000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                     rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRNG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Random</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">default_rng</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                     seed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Integer}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><ul><li><p><code>n_sim &gt; 0</code>.</p></li><li><p><code>0 &lt; q &lt; 1</code>.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NormalUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NormalUncertaintySet</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     pe ┼ EmpiricalPrior</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │        ce ┼ PortfolioOptimisersCovariance</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │   ce ┼ Covariance</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │      │    me ┼ SimpleExpectedReturns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │      │       │   w ┴ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │      │    ce ┼ GeneralCovariance</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │      │       │   ce ┼ StatsBase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SimpleCovariance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StatsBase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleCovariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │      │       │    w ┴ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │      │   alg ┴ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Full</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │   mp ┼ DefaultMatrixProcessing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │      │       pdm ┼ Posdef</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │      │           │   alg ┴ UnionAll</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NearestCorrelationMatrix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Newton</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │      │   denoise ┼ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │      │    detone ┼ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │      │       alg ┴ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │        me ┼ SimpleExpectedReturns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │           │   w ┴ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        │   horizon ┴ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alg ┼ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BoxUncertaintySetAlgorithm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  n_sim ┼ Int64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      q ┼ Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rng ┼ Random</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TaskLocalRNG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Random</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TaskLocalRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   seed ┴ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySet"><code>BoxUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySet"><code>EllipseUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.AbstractUncertaintySetEstimator"><code>AbstractUncertaintySetEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySetAlgorithm"><code>BoxUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySetAlgorithm"><code>EllipseUncertaintySetAlgorithm</code></a></p></li></ul>`,13)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[2]||(i[2]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L1-L74",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",c,[s("summary",null,[i[4]||(i[4]=s("a",{id:"PortfolioOptimisers.ucs",href:"#PortfolioOptimisers.ucs"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.ucs")],-1)),i[5]||(i[5]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[7]||(i[7]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet{&lt;:Any, &lt;:BoxUncertaintySetAlgorithm, &lt;:Any, &lt;:Any, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs box uncertainty sets for mean and covariance statistics under the assumption of normally distributed returns.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>(mu_ucs::BoxUncertaintySet, sigma_ucs::BoxUncertaintySet)</code>: Expected returns and covariance uncertainty sets.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Simulates covariance matrices using the Wishart distribution.</p></li><li><p>Calculates lower and upper bounds for covariance using quantiles of simulated values.</p></li><li><p>Calculates upper bound for mean using the normal quantile and simulated covariance.</p></li><li><p>Returns both sets as a tuple.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySetAlgorithm"><code>BoxUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySet"><code>BoxUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.mu_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>mu_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.sigma_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>sigma_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[6]||(i[6]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L155-L189",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",g,[s("summary",null,[i[8]||(i[8]=s("a",{id:"PortfolioOptimisers.ucs-2",href:"#PortfolioOptimisers.ucs-2"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.ucs")],-1)),i[9]||(i[9]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[11]||(i[11]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                             &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipseUncertaintySetAlgorithm{&lt;:NormalKUncertaintyAlgorithm, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                             &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs ellipse uncertainty sets for expected returns and covariance statistics under the assumption of normally distributed returns.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>(mu_ucs::EllipseUncertaintySet, sigma_ucs::EllipseUncertaintySet)</code>: Expected returns and covariance uncertainty sets.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Simulates mean and covariance using multivariate normal and Wishart distributions.</p></li><li><p>Constructs commutation matrix for covariance vectorization.</p></li><li><p>Calculates scaling parameters for mean and covariance using the specified ellipse algorithm.</p></li><li><p>Returns both sets as a tuple.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySetAlgorithm"><code>EllipseUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySet"><code>EllipseUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.k_ucs"><code>k_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.mu_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>mu_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.sigma_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>sigma_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[10]||(i[10]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L324-L361",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",y,[s("summary",null,[i[12]||(i[12]=s("a",{id:"PortfolioOptimisers.ucs-3",href:"#PortfolioOptimisers.ucs-3"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.ucs")],-1)),i[13]||(i[13]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[15]||(i[15]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                             &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipseUncertaintySetAlgorithm{&lt;:ChiSqKUncertaintyAlgorithm, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                             &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs ellipse uncertainty sets for expected returns and covariance statistics using the chi-squared scaling algorithm under the assumption of normally distributed returns.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>(mu_ucs::EllipseUncertaintySet, sigma_ucs::EllipseUncertaintySet)</code>: Expected returns and covariance uncertainty sets.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Constructs commutation matrix for covariance vectorization.</p></li><li><p>Calculates scaling parameters for mean and covariance using the chi-squared scaling algorithm.</p></li><li><p>Applies diagonal processing if specified in the algorithm.</p></li><li><p>Returns both sets as a tuple.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySetAlgorithm"><code>EllipseUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySet"><code>EllipseUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.ChiSqKUncertaintyAlgorithm"><code>ChiSqKUncertaintyAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.k_ucs"><code>k_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.mu_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>mu_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.sigma_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>sigma_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[14]||(i[14]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L396-L434",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",E,[s("summary",null,[i[16]||(i[16]=s("a",{id:"PortfolioOptimisers.ucs-4",href:"#PortfolioOptimisers.ucs-4"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.ucs")],-1)),i[17]||(i[17]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[19]||(i[19]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipseUncertaintySetAlgorithm{&lt;:Any, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                             &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs ellipse uncertainty sets for expected returns and covariance statistics under the assumption of normally distributed returns, using a generic ellipse algorithm.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>(mu_ucs::EllipseUncertaintySet, sigma_ucs::EllipseUncertaintySet)</code>: Expected returns and covariance uncertainty sets.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Constructs commutation matrix for covariance vectorization.</p></li><li><p>Calculates scaling parameters for mean and covariance using the provided ellipse algorithm.</p></li><li><p>Applies diagonal processing if specified in the algorithm.</p></li><li><p>Returns both sets as a tuple.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySetAlgorithm"><code>EllipseUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySet"><code>EllipseUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.k_ucs"><code>k_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.mu_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>mu_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.sigma_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>sigma_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[18]||(i[18]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L459-L494",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",u,[s("summary",null,[i[20]||(i[20]=s("a",{id:"PortfolioOptimisers.mu_ucs",href:"#PortfolioOptimisers.mu_ucs"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.mu_ucs")],-1)),i[21]||(i[21]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[23]||(i[23]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mu_ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet{&lt;:Any, &lt;:BoxUncertaintySetAlgorithm, &lt;:Any, &lt;:Any, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs a box uncertainty set for expected returns under the assumption of normally distributed returns.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>mu_ucs::BoxUncertaintySet</code>: Expected returns uncertainty set.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Calculates the upper bound for mean using the normal quantile and simulated covariance.</p></li><li><p>Sets the lower bound for mean to zero.</p></li><li><p>Ignores additional arguments and keyword arguments except those passed to the prior estimator.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySetAlgorithm"><code>BoxUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySet"><code>BoxUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.ucs-Tuple{Union{Nothing, Tuple{var&quot;#s47&quot;, var&quot;#s46&quot;} where {var&quot;#s47&quot;&lt;:(Union{Nothing, var&quot;#s45&quot;} where var&quot;#s45&quot;&lt;:PortfolioOptimisers.AbstractUncertaintySetResult), var&quot;#s46&quot;&lt;:(Union{Nothing, var&quot;#s44&quot;} where var&quot;#s44&quot;&lt;:PortfolioOptimisers.AbstractUncertaintySetResult)}}, Vararg{Any}}"><code>ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.sigma_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>sigma_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[22]||(i[22]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L219-L252",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",m,[s("summary",null,[i[24]||(i[24]=s("a",{id:"PortfolioOptimisers.mu_ucs-2",href:"#PortfolioOptimisers.mu_ucs-2"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.mu_ucs")],-1)),i[25]||(i[25]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[27]||(i[27]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mu_ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipseUncertaintySetAlgorithm{&lt;:NormalKUncertaintyAlgorithm, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs an ellipse uncertainty set for expected returns under the assumption of normally distributed returns, using a normal scaling algorithm.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>mu_ucs::EllipseUncertaintySet</code>: Expected returns uncertainty set.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Simulates mean vectors using the multivariate normal distribution.</p></li><li><p>Applies diagonal processing to the covariance if specified in the algorithm.</p></li><li><p>Calculates the scaling parameter for the ellipse using the normal scaling algorithm.</p></li><li><p>Returns an ellipse uncertainty set for the mean.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySetAlgorithm"><code>EllipseUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySet"><code>EllipseUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.k_ucs"><code>k_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.sigma_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>sigma_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[26]||(i[26]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L517-L553",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",F,[s("summary",null,[i[28]||(i[28]=s("a",{id:"PortfolioOptimisers.mu_ucs-3",href:"#PortfolioOptimisers.mu_ucs-3"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.mu_ucs")],-1)),i[29]||(i[29]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[31]||(i[31]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mu_ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipseUncertaintySetAlgorithm{&lt;:ChiSqKUncertaintyAlgorithm, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs an ellipse uncertainty set for expected returns under the assumption of normally distributed returns, using a chi-squared scaling algorithm.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>mu_ucs::EllipseUncertaintySet</code>: Expected returns uncertainty set.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Processes the covariance matrix for positive definiteness.</p></li><li><p>Applies diagonal processing to the covariance if specified in the algorithm.</p></li><li><p>Calculates the scaling parameter for the ellipse using the chi-squared scaling algorithm.</p></li><li><p>Returns an ellipse uncertainty set for the mean.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySetAlgorithm"><code>EllipseUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySet"><code>EllipseUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.ChiSqKUncertaintyAlgorithm"><code>ChiSqKUncertaintyAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.k_ucs"><code>k_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.sigma_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>sigma_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[30]||(i[30]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L575-L612",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",f,[s("summary",null,[i[32]||(i[32]=s("a",{id:"PortfolioOptimisers.mu_ucs-4",href:"#PortfolioOptimisers.mu_ucs-4"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.mu_ucs")],-1)),i[33]||(i[33]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[35]||(i[35]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mu_ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipseUncertaintySetAlgorithm{&lt;:ChiSqKUncertaintyAlgorithm, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs an ellipse uncertainty set for expected returns under the assumption of normally distributed returns, using a chi-squared scaling algorithm.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>mu_ucs::EllipseUncertaintySet</code>: Expected returns uncertainty set.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Processes the covariance matrix for positive definiteness.</p></li><li><p>Applies diagonal processing to the covariance if specified in the algorithm.</p></li><li><p>Calculates the scaling parameter for the ellipse using the chi-squared scaling algorithm.</p></li><li><p>Returns an ellipse uncertainty set for the mean.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySetAlgorithm"><code>EllipseUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySet"><code>EllipseUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.ChiSqKUncertaintyAlgorithm"><code>ChiSqKUncertaintyAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.k_ucs"><code>k_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.sigma_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>sigma_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[34]||(i[34]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L630-L667",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",C,[s("summary",null,[i[36]||(i[36]=s("a",{id:"PortfolioOptimisers.sigma_ucs",href:"#PortfolioOptimisers.sigma_ucs"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.sigma_ucs")],-1)),i[37]||(i[37]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[39]||(i[39]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sigma_ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet{&lt;:Any, &lt;:BoxUncertaintySetAlgorithm, &lt;:Any, &lt;:Any, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs a box uncertainty set for covariance under the assumption of normally distributed returns.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>sigma_ucs::BoxUncertaintySet</code>: Covariance uncertainty set.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Simulates covariance matrices using the Wishart distribution.</p></li><li><p>Calculates lower and upper bounds for covariance using quantiles of simulated values.</p></li><li><p>Ensures positive definiteness of the bounds.</p></li><li><p>Ignores additional arguments and keyword arguments except those passed to the prior estimator.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySetAlgorithm"><code>BoxUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.BoxUncertaintySet"><code>BoxUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.ucs-Tuple{Union{Nothing, Tuple{var&quot;#s47&quot;, var&quot;#s46&quot;} where {var&quot;#s47&quot;&lt;:(Union{Nothing, var&quot;#s45&quot;} where var&quot;#s45&quot;&lt;:PortfolioOptimisers.AbstractUncertaintySetResult), var&quot;#s46&quot;&lt;:(Union{Nothing, var&quot;#s44&quot;} where var&quot;#s44&quot;&lt;:PortfolioOptimisers.AbstractUncertaintySetResult)}}, Vararg{Any}}"><code>ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.mu_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>mu_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[38]||(i[38]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L263-L297",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",A,[s("summary",null,[i[40]||(i[40]=s("a",{id:"PortfolioOptimisers.sigma_ucs-2",href:"#PortfolioOptimisers.sigma_ucs-2"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.sigma_ucs")],-1)),i[41]||(i[41]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[43]||(i[43]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sigma_ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipseUncertaintySetAlgorithm{&lt;:NormalKUncertaintyAlgorithm, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs an ellipse uncertainty set for covariance under the assumption of normally distributed returns, using a normal scaling algorithm.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>sigma_ucs::EllipseUncertaintySet</code>: Covariance uncertainty set.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Simulates covariance matrices using the Wishart distribution.</p></li><li><p>Constructs commutation matrix for covariance vectorization.</p></li><li><p>Calculates the scaling parameter for the ellipse using the normal scaling algorithm.</p></li><li><p>Applies diagonal processing to the covariance if specified in the algorithm.</p></li><li><p>Returns an ellipse uncertainty set for covariance.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySetAlgorithm"><code>EllipseUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySet"><code>EllipseUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.k_ucs"><code>k_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.mu_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>mu_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[42]||(i[42]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L684-L721",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",_,[s("summary",null,[i[44]||(i[44]=s("a",{id:"PortfolioOptimisers.sigma_ucs-3",href:"#PortfolioOptimisers.sigma_ucs-3"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.sigma_ucs")],-1)),i[45]||(i[45]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[47]||(i[47]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sigma_ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipseUncertaintySetAlgorithm{&lt;:ChiSqKUncertaintyAlgorithm, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs an ellipse uncertainty set for covariance under the assumption of normally distributed returns, using a chi-squared scaling algorithm.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>sigma_ucs::EllipseUncertaintySet</code>: Covariance uncertainty set.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Processes the covariance matrix for positive definiteness.</p></li><li><p>Constructs commutation matrix for covariance vectorization.</p></li><li><p>Calculates the scaling parameter for the ellipse using the chi-squared scaling algorithm.</p></li><li><p>Applies diagonal processing to the covariance if specified in the algorithm.</p></li><li><p>Returns an ellipse uncertainty set for covariance.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySetAlgorithm"><code>EllipseUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySet"><code>EllipseUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.ChiSqKUncertaintyAlgorithm"><code>ChiSqKUncertaintyAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.k_ucs"><code>k_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.mu_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>mu_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[46]||(i[46]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L751-L789",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",S,[s("summary",null,[i[48]||(i[48]=s("a",{id:"PortfolioOptimisers.sigma_ucs-4",href:"#PortfolioOptimisers.sigma_ucs-4"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.sigma_ucs")],-1)),i[49]||(i[49]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[51]||(i[51]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sigma_ucs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NormalUncertaintySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EllipseUncertaintySetAlgorithm{&lt;:Any, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs an ellipse uncertainty set for covariance under the assumption of normally distributed returns, using a generic ellipse algorithm.</p><p><strong>Arguments</strong></p><ul><li><p><code>ue</code>: Normal uncertainty set estimator.</p></li><li><p><code>X</code>: Data matrix.</p></li><li><p><code>F</code>: Optional factor matrix. Used by the prior estimator.</p></li><li><p><code>dims</code>: Dimension along which to compute statistics.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the prior estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>sigma_ucs::EllipseUncertaintySet</code>: Covariance uncertainty set.</li></ul><p><strong>Details</strong></p><ul><li><p>Computes prior statistics using the provided prior estimator.</p></li><li><p>Processes the covariance matrix for positive definiteness.</p></li><li><p>Constructs commutation matrix for covariance vectorization.</p></li><li><p>Calculates the scaling parameter for the ellipse using the provided ellipse algorithm.</p></li><li><p>Applies diagonal processing to the covariance if specified in the algorithm.</p></li><li><p>Returns an ellipse uncertainty set for covariance.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/03_NormalUncertaintySets#PortfolioOptimisers.NormalUncertaintySet"><code>NormalUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySetAlgorithm"><code>EllipseUncertaintySetAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.EllipseUncertaintySet"><code>EllipseUncertaintySet</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.k_ucs"><code>k_ucs</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR31/api/15_UncertaintySets/01_Base_UncertaintySets#PortfolioOptimisers.mu_ucs-Tuple{Union{Nothing, PortfolioOptimisers.AbstractUncertaintySetResult}, Vararg{Any}}"><code>mu_ucs</code></a></p></li></ul>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[50]||(i[50]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L810-L846",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",U,[s("summary",null,[i[52]||(i[52]=s("a",{id:"PortfolioOptimisers.commutation_matrix",href:"#PortfolioOptimisers.commutation_matrix"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.commutation_matrix")],-1)),i[53]||(i[53]=e()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[55]||(i[55]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">commutation_matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs the commutation matrix for a given matrix.</p><p><strong>Arguments</strong></p><ul><li><code>X</code>: Input matrix. Used to determine the dimensions of the commutation matrix.</li></ul><p><strong>Returns</strong></p><ul><li><code>cX::SparseArrays.SparseMatrixCSC{&lt;:Real, &lt;:Integer}</code>: Returns a sparse commutation matrix of size <code>(m*n, m*n)</code> where <code>m, n = size(X)</code>.</li></ul><p><strong>Details</strong></p><ul><li><p>The commutation matrix is used to vectorize and permute matrix elements.</p></li><li><p>It is constructed by reshaping and transposing the indices of the input matrix.</p></li><li><p>The output is a sparse matrix for efficiency.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">commutation_matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SparseArrays</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SparseMatrixCSC{Float64, Int64} with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stored entries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">commutation_matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SparseArrays</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SparseMatrixCSC{Float64, Int64} with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stored entries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">commutation_matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SparseArrays</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SparseMatrixCSC{Float64, Int64} with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stored entries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ⋅</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.0</span></span></code></pre></div>`,10)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[54]||(i[54]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/03ed4fed278e2f685e264efb52839940f0fc8a7e/src/15_UncertaintySets/03_NormalUncertaintySets.jl#L99-L146",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const N=p(k,[["render",P]]);export{x as __pageData,N as default};
