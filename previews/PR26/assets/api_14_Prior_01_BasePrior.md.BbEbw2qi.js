import{_ as o,C as p,c as n,o as h,j as i,a as r,aA as e,G as a,w as l}from"./chunks/framework.De8WfqNi.js";const R=JSON.parse('{"title":"Base Prior","description":"","frontmatter":{},"headers":[],"relativePath":"api/14_Prior/01_BasePrior.md","filePath":"api/14_Prior/01_BasePrior.md","lastUpdated":null}'),k={name:"api/14_Prior/01_BasePrior.md"},d={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""};function w(B,s,j,T,D,v){const t=p("Badge");return h(),n("div",null,[s[60]||(s[60]=i("h1",{id:"Base-Prior",tabindex:"-1"},[r("Base Prior "),i("a",{class:"header-anchor",href:"#Base-Prior","aria-label":'Permalink to "Base Prior {#Base-Prior}"'},"â€‹")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"PortfolioOptimisers.LowOrderPrior",href:"#PortfolioOptimisers.LowOrderPrior"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.LowOrderPrior")],-1)),s[1]||(s[1]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LowOrderPrior{T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       AbstractPriorResult</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sigma</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ens</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kld</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T7</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T9</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    f_mu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    f_sigma</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T11</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    f_w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T12</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Container type for low order prior results in PortfolioOptimisers.jl.</p><p><code>LowOrderPrior</code> stores the output of low order prior estimation routines, including asset returns, mean vector, covariance matrix, Cholesky factor, weights, entropy, Kullback-Leibler divergence, outlier weights, regression results, and optional factor moments. It is used throughout the package to represent validated prior information for portfolio optimisation and analytics.</p><p><strong>Fields</strong></p><ul><li><p><code>X</code>: Asset returns matrix.</p></li><li><p><code>mu</code>: Mean vector.</p></li><li><p><code>sigma</code>: Covariance matrix.</p></li><li><p><code>chol</code>: Cholesky factorisation of the factor-adjusted covariance matrix. Factor models sparsify the covariance matrix, so using their smaller, sparser Cholesky factor makes for more numerically stable and efficient optimisations.</p></li><li><p><code>w</code>: Asset weights.</p></li><li><p><code>ens</code>: Effective number of scenarios.</p></li><li><p><code>kld</code>: Kullback-Leibler divergence.</p></li><li><p><code>ow</code>: Opinion pooling weights.</p></li><li><p><code>rr</code>: Regression result.</p></li><li><p><code>f_mu</code>: Factor mean vector.</p></li><li><p><code>f_sigma</code>: Factor covariance matrix.</p></li><li><p><code>f_w</code>: Factor weights.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LowOrderPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sigma</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              chol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractWeights}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              ens</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Real}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              kld</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Real, &lt;:AbstractVector{&lt;:Real}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              ow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractVector}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              rr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Regression}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              f_mu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractVector}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              f_sigma</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              f_w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractVector}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><ul><li><p><code>X</code>, <code>mu</code>, and <code>sigma</code> must be non-empty.</p></li><li><p><code>size(sigma, 1) == size(sigma, 2)</code>.</p></li><li><p><code>size(X, 2) == length(mu) == size(sigma, 1)</code>.</p></li><li><p>If <code>w</code> is provided, <code>!isempty(w)</code> and <code>length(w) == size(X, 1)</code>.</p></li><li><p>If <code>kld</code> is an <code>AbstractVector</code>, <code>!isempty(kld)</code>.</p></li><li><p>If <code>ow</code> is provided, <code>!isempty(ow)</code>.</p></li><li><p>If any of <code>rr</code>, <code>f_mu</code>, or <code>f_sigma</code> are provided, all must be provided and non-empty, <code>size(rr.M, 2) == length(f_mu) == size(f_sigma, 1)</code>, and <code>size(rr.M, 1) == length(mu)</code>.</p></li><li><p>If <code>f_sigma</code> is provided, it must be square and <code>size(f_sigma, 1) == size(rr.M, 2)</code>.</p></li><li><p>If <code>chol</code> is provided, <code>!isempty(chol)</code> and <code>length(mu) == size(chol, 2)</code>.</p></li><li><p>If <code>f_w</code> is provided, <code>!isempty(f_w)</code> and <code>length(f_w) == size(X, 1)</code>.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LowOrderPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.03</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.04</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], mu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                     sigma </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0001</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0002</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0002</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0003</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LowOrderPrior</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Ã—</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Float64}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       mu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sigma </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Ã—</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Float64}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     chol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ens </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      kld </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       ow </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       rr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     f_mu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  f_sigma </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      f_w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractPriorResult"><code>AbstractPriorResult</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorEstimator, ReturnsResult}"><code>prior</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.HighOrderPrior"><code>HighOrderPrior</code></a></p></li></ul>`,14)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L390-L479",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",c,[i("summary",null,[s[4]||(s[4]=i("a",{id:"PortfolioOptimisers.HighOrderPrior",href:"#PortfolioOptimisers.HighOrderPrior"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.HighOrderPrior")],-1)),s[5]||(s[5]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HighOrderPrior{T1, T2, T3, T4, T5, T6, T7} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractPriorResult</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    L2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    S2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    skmp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T7</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Container type for high order prior results in PortfolioOptimisers.jl.</p><p><code>HighOrderPrior</code> stores the output of high order prior estimation routines, including low order prior results, cokurtosis tensor, elimination and summation matrices, coskewness tensor, quadratic skewness matrix, and matrix processing estimator. It is used throughout the package to represent validated prior information for portfolio optimisation and analytics involving higher moments.</p><p><strong>Fields</strong></p><ul><li><p><code>pr</code>: Prior result for low order moments.</p></li><li><p><code>kt</code>: Cokurtosis tensor.</p></li><li><p><code>L2</code>: Elimination matrix.</p></li><li><p><code>S2</code>: Summation matrix.</p></li><li><p><code>sk</code>: Coskewness tensor.</p></li><li><p><code>V</code>: Negative quadratic skewness matrix.</p></li><li><p><code>skmp</code>: Matrix processing estimator for post-processing quadratic skewness.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HighOrderPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; pr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPriorResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               L2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               S2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               sk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               skmp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrixProcessingEstimator}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DefaultMatrixProcessing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><p>Defining <code>N = length(pr.mu)</code>.</p><ul><li><p>If any of <code>kt</code>, <code>L2</code>, or <code>S2</code> are provided, all must be provided, non-empty, and <code>size(kt) == (N^2, N^2)</code>, <code>size(L2) == size(S2) == (div(N * (N + 1), 2), N^2)</code>.</p></li><li><p>If <code>sk</code> or <code>V</code> are provided, both must be provided, non-empty, and <code>size(sk) == (N, N^2)</code>, <code>size(V) == (N, N)</code>.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> HighOrderPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      pr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LowOrderPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.03</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.04</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], mu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                         sigma </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0001</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0002</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0002</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0003</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), kt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      L2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">elimination_matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      S2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">summation_matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), sk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HighOrderPrior</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LowOrderPrior</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Ã—</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Float64}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     sigma </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Ã—</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Float64}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      chol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       ens </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       kld </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ow </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        rr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      f_mu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   f_sigma </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       f_w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Ã—</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Float64}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    L2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Ã—</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SparseArrays</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SparseMatrixCSC{Int64, Int64}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    S2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Ã—</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SparseArrays</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SparseMatrixCSC{Int64, Int64}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Ã—</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Float64}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Ã—</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Float64}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  skmp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractPriorResult"><code>AbstractPriorResult</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.LowOrderPrior"><code>LowOrderPrior</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/04_HighOrderPrior#PortfolioOptimisers.HighOrderPriorEstimator"><code>HighOrderPriorEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorEstimator, ReturnsResult}"><code>prior</code></a></p></li></ul>`,15)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L560-L640",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",g,[i("summary",null,[s[8]||(s[8]=i("a",{id:"PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorEstimator, ReturnsResult}",href:"#PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorEstimator, ReturnsResult}"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.prior")],-1)),s[9]||(s[9]=r()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPriorEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ReturnsResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute prior information from asset and/or factor returns using a prior estimator.</p><p><code>prior</code> applies the specified prior estimator to a <code>ReturnsResult</code> object, extracting asset and factor returns and passing them, along with any additional information, to the estimator. Returns a prior result containing computed moments and other prior information for use in portfolio optimisation workflows.</p><p><strong>Arguments</strong></p><ul><li><p><code>pr</code>: Prior estimator.</p></li><li><p><code>rd</code>: Asset and/or factor returns result.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>pr::AbstractPriorResult</code>: Result object containing computed prior information.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractPriorEstimator"><code>AbstractPriorEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/03_Preprocessing#PortfolioOptimisers.ReturnsResult"><code>ReturnsResult</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractPriorResult"><code>AbstractPriorResult</code></a></p></li></ul>',9)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L155-L177",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",E,[i("summary",null,[s[12]||(s[12]=i("a",{id:"PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorResult, Vararg{Any}}",href:"#PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorResult, Vararg{Any}}"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.prior")],-1)),s[13]||(s[13]=r()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[15]||(s[15]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPriorResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Propagate or pass through prior result objects.</p><p><code>prior</code> returns the input prior result object unchanged. This method is used to propagate already constructed prior results or enable uniform interface handling in workflows that accept either estimators or results.</p><p><strong>Arguments</strong></p><ul><li><p><code>pr</code>: Prior result object.</p></li><li><p><code>args...</code>: Additional positional arguments (ignored).</p></li><li><p><code>kwargs...</code>: Additional keyword arguments (ignored).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>pr::AbstractPriorResult</code>: The input prior result object, unchanged.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractPriorResult"><code>AbstractPriorResult</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorEstimator, ReturnsResult}"><code>prior</code></a></p></li></ul>',9)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[14]||(s[14]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L181-L202",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",y,[i("summary",null,[s[16]||(s[16]=i("a",{id:"PortfolioOptimisers.clusterise-Tuple{ClusteringEstimator, PortfolioOptimisers.AbstractPriorResult}",href:"#PortfolioOptimisers.clusterise-Tuple{ClusteringEstimator, PortfolioOptimisers.AbstractPriorResult}"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.clusterise")],-1)),s[17]||(s[17]=r()),a(t,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[19]||(s[19]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">clusterise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClusteringEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPriorResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Clusterise asset or factor returns from a prior result using a clustering estimator.</p><p><code>clusterise</code> applies the specified clustering estimator to the asset returns matrix contained in the prior result object, producing a clustering result for use in phylogeny analysis, constraint generation, or portfolio construction.</p><p><strong>Arguments</strong></p><ul><li><p><code>cle</code>: Clustering estimator.</p></li><li><p><code>pr</code>: Prior result object.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the clustering estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>clr::AbstractClusteringResult</code>: Result object containing clustering information.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/12_Phylogeny/2_Clustering#PortfolioOptimisers.ClusteringEstimator"><code>ClusteringEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractPriorResult"><code>AbstractPriorResult</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/12_Phylogeny/2_Clustering#PortfolioOptimisers.clusterise-Tuple{PortfolioOptimisers.AbstractClusteringResult, Vararg{Any}}"><code>clusterise</code></a></p></li></ul>',9)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[18]||(s[18]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L209-L231",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",m,[i("summary",null,[s[20]||(s[20]=i("a",{id:"PortfolioOptimisers.AbstractPriorEstimator",href:"#PortfolioOptimisers.AbstractPriorEstimator"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractPriorEstimator")],-1)),s[21]||(s[21]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[23]||(s[23]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractPriorEstimator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for all prior estimators.</p><p><code>AbstractPriorEstimator</code> is the base type for all estimators that compute prior information from asset and/or factor returns. All concrete prior estimators should subtype this type to ensure a consistent interface for prior computation and integration with portfolio optimisation workflows.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator"><code>AbstractLowOrderPriorEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractHighOrderPriorEstimator"><code>AbstractHighOrderPriorEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorEstimator, ReturnsResult}"><code>prior</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[22]||(s[22]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L1-L13",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",u,[i("summary",null,[s[24]||(s[24]=i("a",{id:"PortfolioOptimisers.AbstractLowOrderPriorEstimator",href:"#PortfolioOptimisers.AbstractLowOrderPriorEstimator"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractLowOrderPriorEstimator")],-1)),s[25]||(s[25]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[27]||(s[27]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractLowOrderPriorEstimator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractPriorEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for low order prior estimators.</p><p><code>AbstractLowOrderPriorEstimator</code> is the base type for estimators that compute low order moments (mean and covariance) from asset and/or factor returns. All concrete low order prior estimators should subtype this type for consistent moment estimation and integration.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractPriorEstimator"><code>AbstractPriorEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A"><code>AbstractLowOrderPriorEstimator_A</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_F"><code>AbstractLowOrderPriorEstimator_F</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_AF"><code>AbstractLowOrderPriorEstimator_AF</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[26]||(s[26]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L15-L28",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",P,[i("summary",null,[s[28]||(s[28]=i("a",{id:"PortfolioOptimisers.AbstractLowOrderPriorEstimator_A",href:"#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractLowOrderPriorEstimator_A")],-1)),s[29]||(s[29]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[31]||(s[31]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractLowOrderPriorEstimator_A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractLowOrderPriorEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Low order prior estimator using only asset returns.</p><p><code>AbstractLowOrderPriorEstimator_A</code> is the base type for estimators that compute low order moments (mean and covariance) using only asset returns data. All concrete asset-only prior estimators should subtype this type.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator"><code>AbstractLowOrderPriorEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_F"><code>AbstractLowOrderPriorEstimator_F</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_AF"><code>AbstractLowOrderPriorEstimator_AF</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[30]||(s[30]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L30-L42",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",F,[i("summary",null,[s[32]||(s[32]=i("a",{id:"PortfolioOptimisers.AbstractLowOrderPriorEstimator_F",href:"#PortfolioOptimisers.AbstractLowOrderPriorEstimator_F"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractLowOrderPriorEstimator_F")],-1)),s[33]||(s[33]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[35]||(s[35]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractLowOrderPriorEstimator_F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractLowOrderPriorEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Low order prior estimator using factor returns.</p><p><code>AbstractLowOrderPriorEstimator_F</code> is the base type for estimators that compute low order moments (mean and covariance) requiring the use of both asset and factor returns data. All concrete factor-adjusted prior estimators should subtype this type.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator"><code>AbstractLowOrderPriorEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A"><code>AbstractLowOrderPriorEstimator_A</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_AF"><code>AbstractLowOrderPriorEstimator_AF</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[34]||(s[34]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L44-L56",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",f,[i("summary",null,[s[36]||(s[36]=i("a",{id:"PortfolioOptimisers.AbstractLowOrderPriorEstimator_AF",href:"#PortfolioOptimisers.AbstractLowOrderPriorEstimator_AF"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractLowOrderPriorEstimator_AF")],-1)),s[37]||(s[37]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[39]||(s[39]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractLowOrderPriorEstimator_AF </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractLowOrderPriorEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Low order prior estimator using both asset and factor returns.</p><p><code>AbstractLowOrderPriorEstimator_AF</code> is the base type for estimators that compute low order moments (mean and covariance) using both asset and optionally factor returns data. All concrete prior estimators which may optionally use factor returns should subtype this type.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator"><code>AbstractLowOrderPriorEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A"><code>AbstractLowOrderPriorEstimator_A</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_F"><code>AbstractLowOrderPriorEstimator_F</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[38]||(s[38]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L58-L70",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",A,[i("summary",null,[s[40]||(s[40]=i("a",{id:"PortfolioOptimisers.AbstractLowOrderPriorEstimator_A_AF",href:"#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A_AF"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractLowOrderPriorEstimator_A_AF")],-1)),s[41]||(s[41]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[43]||(s[43]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractLowOrderPriorEstimator_A_AF </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Union{AbstractLowOrderPriorEstimator_A,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                  AbstractLowOrderPriorEstimator_AF}</span></span></code></pre></div><p>Union type for asset-only and asset-and-factor low order prior estimators.</p><p><code>AbstractLowOrderPriorEstimator_A_AF</code> is a union type that allows dispatch on both asset-only and asset-and-factor prior estimators. This is useful for generic algorithms that operate on estimators using asset returns, with or without factor returns.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A"><code>AbstractLowOrderPriorEstimator_A</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_AF"><code>AbstractLowOrderPriorEstimator_AF</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_F_AF"><code>AbstractLowOrderPriorEstimator_F_AF</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A_F_AF"><code>AbstractLowOrderPriorEstimator_A_F_AF</code></a></p></li></ul>`,5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[42]||(s[42]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L72-L86",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",b,[i("summary",null,[s[44]||(s[44]=i("a",{id:"PortfolioOptimisers.AbstractLowOrderPriorEstimator_F_AF",href:"#PortfolioOptimisers.AbstractLowOrderPriorEstimator_F_AF"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractLowOrderPriorEstimator_F_AF")],-1)),s[45]||(s[45]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[47]||(s[47]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractLowOrderPriorEstimator_F_AF </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Union{AbstractLowOrderPriorEstimator_F,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                              AbstractLowOrderPriorEstimator_AF}</span></span></code></pre></div><p>Union type for factor-only and asset-and-factor low order prior estimators.</p><p><code>AbstractLowOrderPriorEstimator_F_AF</code> is a union type that allows dispatch on both factor-only and asset-and-factor prior estimators. This is useful for generic algorithms that operate on estimators using factor returns, with or without asset returns.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_F"><code>AbstractLowOrderPriorEstimator_F</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_AF"><code>AbstractLowOrderPriorEstimator_AF</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A_AF"><code>AbstractLowOrderPriorEstimator_A_AF</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A_F_AF"><code>AbstractLowOrderPriorEstimator_A_F_AF</code></a></p></li></ul>`,5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[46]||(s[46]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L89-L104",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",_,[i("summary",null,[s[48]||(s[48]=i("a",{id:"PortfolioOptimisers.AbstractLowOrderPriorEstimator_A_F_AF",href:"#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A_F_AF"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractLowOrderPriorEstimator_A_F_AF")],-1)),s[49]||(s[49]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[51]||(s[51]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractLowOrderPriorEstimator_A_F_AF </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Union{AbstractLowOrderPriorEstimator_A,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                    AbstractLowOrderPriorEstimator_F,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                    AbstractLowOrderPriorEstimator_AF}</span></span></code></pre></div><p>Union type for asset-only, factor-only, and asset-and-factor low order prior estimators.</p><p><code>AbstractLowOrderPriorEstimator_A_F_AF</code> is a union type that allows dispatch on asset-only, factor-only, and asset-and-factor prior estimators. This is useful for generic algorithms that operate on estimators using any combination of asset and factor returns.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A"><code>AbstractLowOrderPriorEstimator_A</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_F"><code>AbstractLowOrderPriorEstimator_F</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_AF"><code>AbstractLowOrderPriorEstimator_AF</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_A_AF"><code>AbstractLowOrderPriorEstimator_A_AF</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator_F_AF"><code>AbstractLowOrderPriorEstimator_F_AF</code></a></p></li></ul>`,5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[50]||(s[50]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L107-L123",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",C,[i("summary",null,[s[52]||(s[52]=i("a",{id:"PortfolioOptimisers.AbstractHighOrderPriorEstimator",href:"#PortfolioOptimisers.AbstractHighOrderPriorEstimator"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractHighOrderPriorEstimator")],-1)),s[53]||(s[53]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[55]||(s[55]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractHighOrderPriorEstimator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractPriorEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for high order prior estimators.</p><p><code>AbstractHighOrderPriorEstimator</code> is the base type for estimators that compute high order moments (such as coskewness and cokurtosis) from asset and/or factor returns. All concrete high order prior estimators should subtype this type to ensure a consistent interface for higher moment estimation and integration with portfolio optimisation workflows.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractPriorEstimator"><code>AbstractPriorEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractLowOrderPriorEstimator"><code>AbstractLowOrderPriorEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorEstimator, ReturnsResult}"><code>prior</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[54]||(s[54]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L127-L139",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",O,[i("summary",null,[s[56]||(s[56]=i("a",{id:"PortfolioOptimisers.AbstractPriorResult",href:"#PortfolioOptimisers.AbstractPriorResult"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractPriorResult")],-1)),s[57]||(s[57]=r()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[59]||(s[59]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractPriorResult </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractResult</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for all prior result types.</p><p><code>AbstractPriorResult</code> is the base type for all result objects produced by prior estimators, containing computed prior information such as moments, asset returns, and factor returns. All concrete prior result types should subtype this to ensure a consistent interface for integration with portfolio optimisation workflows.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.AbstractPriorEstimator"><code>AbstractPriorEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/14_Prior/01_BasePrior#PortfolioOptimisers.prior-Tuple{PortfolioOptimisers.AbstractPriorEstimator, ReturnsResult}"><code>prior</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/01_Base#PortfolioOptimisers.AbstractResult"><code>AbstractResult</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[58]||(s[58]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/6dc4c8996f1b7f83da13f72152c30dad4c06ad7d/src/14_Prior/01_Base_Prior.jl#L141-L153",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const x=o(k,[["render",w]]);export{R as __pageData,x as default};
