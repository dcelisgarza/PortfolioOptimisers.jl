import{_ as o,C as n,c as p,o as d,j as i,a,aA as r,G as t,w as l}from"./chunks/framework.De8WfqNi.js";const N=JSON.parse('{"title":"Regression","description":"","frontmatter":{},"headers":[],"relativePath":"api/09_Moments/18_Base_Regression.md","filePath":"api/09_Moments/18_Base_Regression.md","lastUpdated":null}'),h={name:"api/09_Moments/18_Base_Regression.md"},k={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""};function S(D,s,x,I,L,V){const e=n("Badge");return d(),p("div",null,[s[90]||(s[90]=i("h1",{id:"Regression",tabindex:"-1"},[a("Regression "),i("a",{class:"header-anchor",href:"#Regression","aria-label":'Permalink to "Regression {#Regression}"'},"​")],-1)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"PortfolioOptimisers.LinearModel",href:"#PortfolioOptimisers.LinearModel"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.LinearModel")],-1)),s[1]||(s[1]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=r(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LinearModel{T1} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractRegressionTarget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Regression target type for standard linear models in PortfolioOptimisers.jl.</p><p><code>LinearModel</code> is used to specify a standard linear regression target (i.e., ordinary least squares) when constructing regression estimators. It encapsulates keyword arguments for configuring the underlying linear model fitting routine, enabling flexible extension and dispatch within the regression estimation framework.</p><p><strong>Fields</strong></p><ul><li><code>kwargs</code>: Keyword arguments to be passed to the linear model fitting routine (e.g., options for the solver or regularisation).</li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LinearModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (;))</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LinearModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">LinearModel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  kwargs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionTarget"><code>AbstractRegressionTarget</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.GeneralisedLinearModel"><code>GeneralisedLinearModel</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#StatsAPI.fit-Tuple{LinearModel, AbstractMatrix, AbstractVector}"><code>StatsAPI.fit(::LinearModel, ::AbstractMatrix, ::AbstractVector)</code></a></p></li></ul>`,12)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L86-L118",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",g,[i("summary",null,[s[4]||(s[4]=i("a",{id:"StatsAPI.fit-Tuple{LinearModel, AbstractMatrix, AbstractVector}",href:"#StatsAPI.fit-Tuple{LinearModel, AbstractMatrix, AbstractVector}"},[i("span",{class:"jlbinding"},"StatsAPI.fit")],-1)),s[5]||(s[5]=a()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[7]||(s[7]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">StatsAPI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LinearModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Fit a standard linear regression model using a <a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.LinearModel"><code>LinearModel</code></a> regression target.</p><p>This method dispatches to <code>StatsAPI.fit</code> with the <code>GLM.LinearModel</code> type, passing the design matrix <code>X</code>, response vector <code>y</code>, and any keyword arguments stored in <code>target.kwargs</code>. It enables flexible configuration of the underlying linear model fitting routine within the PortfolioOptimisers.jl regression estimation framework.</p><p><strong>Arguments</strong></p><ul><li><p><code>target</code>: Regression target specifying model options.</p></li><li><p><code>X</code>: The design matrix (observations × features).</p></li><li><p><code>y</code>: The response vector.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>GLM.LinearModel</code>: A fitted linear model object from the GLM.jl package.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.LinearModel"><code>LinearModel</code></a></p></li><li><p><a href="https://juliastats.org/GLM.jl/stable/api/#GLM.LinearModel" target="_blank" rel="noreferrer"><code>GLM.LinearModel</code></a></p></li></ul>',9)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L128-L149",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",c,[i("summary",null,[s[8]||(s[8]=i("a",{id:"PortfolioOptimisers.GeneralisedLinearModel",href:"#PortfolioOptimisers.GeneralisedLinearModel"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.GeneralisedLinearModel")],-1)),s[9]||(s[9]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=r(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeneralisedLinearModel{T1, T2} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractRegressionTarget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Regression target type for generalised linear models (GLMs) in PortfolioOptimisers.jl.</p><p><code>GeneralisedLinearModel</code> is used to specify a generalised linear regression target (e.g., logistic, Poisson, etc.) when constructing regression estimators. It encapsulates positional and keyword arguments for configuring the underlying GLM fitting routine, enabling flexible extension and dispatch within the regression estimation framework.</p><p><strong>Fields</strong></p><ul><li><p><code>args</code>: Positional arguments to be passed to the GLM fitting routine (e.g., distribution and link).</p></li><li><p><code>kwargs</code>: Keyword arguments for the GLM fitting routine (e.g., solver options, regularisation).</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeneralisedLinearModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),), kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (;))</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeneralisedLinearModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GeneralisedLinearModel</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Tuple{Distributions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Normal{Float64}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Distributions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal{Float64}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(μ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, σ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  kwargs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionTarget"><code>AbstractRegressionTarget</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.LinearModel"><code>LinearModel</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#StatsAPI.fit-Tuple{GeneralisedLinearModel, AbstractMatrix, AbstractVector}"><code>StatsAPI.fit(::GeneralisedLinearModel, ::AbstractMatrix, ::AbstractVector)</code></a></p></li></ul>`,12)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L153-L188",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",u,[i("summary",null,[s[12]||(s[12]=i("a",{id:"StatsAPI.fit-Tuple{GeneralisedLinearModel, AbstractMatrix, AbstractVector}",href:"#StatsAPI.fit-Tuple{GeneralisedLinearModel, AbstractMatrix, AbstractVector}"},[i("span",{class:"jlbinding"},"StatsAPI.fit")],-1)),s[13]||(s[13]=a()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[15]||(s[15]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">StatsAPI</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GeneralisedLinearModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Fit a generalised linear regression model using a <a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.GeneralisedLinearModel"><code>GeneralisedLinearModel</code></a> regression target.</p><p>This method dispatches to <code>StatsAPI.fit</code> with the <code>GLM.GeneralizedLinearModel</code> type, passing the design matrix <code>X</code>, response vector <code>y</code>, any positional arguments in <code>target.args</code>, and any keyword arguments in <code>target.kwargs</code>. This enables flexible configuration of the underlying GLM fitting routine within the PortfolioOptimisers.jl regression estimation framework.</p><p><strong>Arguments</strong></p><ul><li><p><code>target</code>: A <a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.GeneralisedLinearModel"><code>GeneralisedLinearModel</code></a> regression target specifying model options.</p></li><li><p><code>X</code>: The design matrix (observations × features).</p></li><li><p><code>y</code>: The response vector.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>GLM.GeneralizedLinearModel</code>: A fitted generalised linear model object from the GLM.jl package.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.GeneralisedLinearModel"><code>GeneralisedLinearModel</code></a></p></li><li><p><a href="https://juliastats.org/GLM.jl/stable/examples/#Probit-regression" target="_blank" rel="noreferrer"><code>GLM.GeneralizedLinearModel</code></a></p></li></ul>',9)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[14]||(s[14]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L199-L220",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",m,[i("summary",null,[s[16]||(s[16]=i("a",{id:"PortfolioOptimisers.AIC",href:"#PortfolioOptimisers.AIC"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AIC")],-1)),s[17]||(s[17]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[19]||(s[19]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AIC </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractMinValStepwiseRegressionCriterion</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Akaike Information Criterion (AIC) for stepwise regression in PortfolioOptimisers.jl.</p><p><code>AIC</code> is a minimisation-based criterion used to evaluate model quality in stepwise regression algorithms. Lower values indicate better model fit, penalising model complexity to avoid overfitting.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractMinValStepwiseRegressionCriterion"><code>AbstractMinValStepwiseRegressionCriterion</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AICC"><code>AICC</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.BIC"><code>BIC</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.regression_criterion_func"><code>regression_criterion_func(::AIC)</code></a></p></li></ul>',5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[18]||(s[18]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L257-L270",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",y,[i("summary",null,[s[20]||(s[20]=i("a",{id:"PortfolioOptimisers.AICC",href:"#PortfolioOptimisers.AICC"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AICC")],-1)),s[21]||(s[21]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[23]||(s[23]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AICC </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractMinValStepwiseRegressionCriterion</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Corrected Akaike Information Criterion (AICC) for stepwise regression in PortfolioOptimisers.jl.</p><p><code>AICC</code> is a minimisation-based criterion similar to AIC, but includes a correction for small sample sizes. Lower values indicate better model fit, balancing fit and complexity.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractMinValStepwiseRegressionCriterion"><code>AbstractMinValStepwiseRegressionCriterion</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AIC"><code>AIC</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.BIC"><code>BIC</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.regression_criterion_func"><code>regression_criterion_func(::AICC)</code></a></p></li></ul>',5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[22]||(s[22]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L272-L285",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",b,[i("summary",null,[s[24]||(s[24]=i("a",{id:"PortfolioOptimisers.BIC",href:"#PortfolioOptimisers.BIC"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.BIC")],-1)),s[25]||(s[25]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[27]||(s[27]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BIC </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractMinValStepwiseRegressionCriterion</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Bayesian Information Criterion (BIC) for stepwise regression in PortfolioOptimisers.jl.</p><p><code>BIC</code> is a minimisation-based criterion used to evaluate model quality in stepwise regression algorithms. It penalises model complexity more strongly than AIC. Lower values indicate better model fit.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractMinValStepwiseRegressionCriterion"><code>AbstractMinValStepwiseRegressionCriterion</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AIC"><code>AIC</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AICC"><code>AICC</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.regression_criterion_func"><code>regression_criterion_func(::BIC)</code></a></p></li></ul>',5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[26]||(s[26]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L287-L300",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",E,[i("summary",null,[s[28]||(s[28]=i("a",{id:"PortfolioOptimisers.RSquared",href:"#PortfolioOptimisers.RSquared"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.RSquared")],-1)),s[29]||(s[29]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[31]||(s[31]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSquared </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractMaxValStepwiseRegressionCriteria</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Coefficient of determination (R²) for stepwise regression in PortfolioOptimisers.jl.</p><p><code>RSquared</code> is a maximisation-based criterion used to evaluate model quality in stepwise regression algorithms. Higher values indicate better model fit, representing the proportion of variance explained by the model.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractMaxValStepwiseRegressionCriteria"><code>AbstractMaxValStepwiseRegressionCriteria</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AdjustedRSquared"><code>AdjustedRSquared</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.regression_criterion_func"><code>regression_criterion_func(::RSquared)</code></a></p></li></ul>',5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[30]||(s[30]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L302-L314",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",f,[i("summary",null,[s[32]||(s[32]=i("a",{id:"PortfolioOptimisers.AdjustedRSquared",href:"#PortfolioOptimisers.AdjustedRSquared"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AdjustedRSquared")],-1)),s[33]||(s[33]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[35]||(s[35]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AdjustedRSquared </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractMaxValStepwiseRegressionCriteria</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Adjusted coefficient of determination (Adjusted R²) for stepwise regression in PortfolioOptimisers.jl.</p><p><code>AdjustedRSquared</code> is a maximisation-based criterion that adjusts R² for the number of predictors in the model, providing a more accurate measure of model quality when comparing models with different numbers of predictors.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractMaxValStepwiseRegressionCriteria"><code>AbstractMaxValStepwiseRegressionCriteria</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.RSquared"><code>RSquared</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.regression_criterion_func"><code>regression_criterion_func(::AdjustedRSquared)</code></a></p></li></ul>',5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[34]||(s[34]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L316-L328",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",_,[i("summary",null,[s[36]||(s[36]=i("a",{id:"PortfolioOptimisers.Regression",href:"#PortfolioOptimisers.Regression"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.Regression")],-1)),s[37]||(s[37]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[39]||(s[39]=r(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Regression{T1, T2, T3} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractRegressionResult</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    M</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Container type for regression results in PortfolioOptimisers.jl.</p><p><code>Regression</code> stores the results of a regression-based moment estimation, including the main coefficient matrix, an optional auxiliary matrix, and the intercept vector. This type is used as the standard output for regression estimators, enabling consistent downstream processing and analysis.</p><p><strong>Fields</strong></p><ul><li><p><code>M</code>: Main coefficient matrix (e.g., regression weights or loadings).</p></li><li><p><code>L</code>: Optional auxiliary matrix for recovering lost dimensions in dimensionality reduction regressions.</p></li><li><p><code>b</code>: Optional intercept vector.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Regression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; M</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, L</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractMatrix}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">           b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractVector}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><ul><li><p><code>!isempty(M)</code>.</p></li><li><p>If provided, <code>!isempty(b)</code>, and <code>length(b) == size(M, 1)</code>.</p></li><li><p>If provided, <code>!isempty(L)</code>, and <code>size(L, 1) == size(M, 1)</code>.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Regression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Regression</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Int64}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Int64}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Int64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionResult"><code>AbstractRegressionResult</code></a></li></ul>`,14)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[38]||(s[38]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L374-L417",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",C,[i("summary",null,[s[40]||(s[40]=i("a",{id:"PortfolioOptimisers.regression-Tuple{Regression, Vararg{Any}}",href:"#PortfolioOptimisers.regression-Tuple{Regression, Vararg{Any}}"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.regression")],-1)),s[41]||(s[41]=a()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[43]||(s[43]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">regression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(re</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Regression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the regression result object unchanged.</p><p>This method is a pass-through for <a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.Regression"><code>Regression</code></a> result objects, allowing generic code to call <code>regression</code> on a result and receive the same object. It enables a unified interface for both estimator and result types.</p><p><strong>Arguments</strong></p><ul><li><p><code>re</code>: A regression result object.</p></li><li><p><code>args...</code>: Additional arguments (ignored).</p></li></ul><p><strong>Returns</strong></p><ul><li>The input <code>re</code>, unchanged.</li></ul><p><strong>Related</strong></p><ul><li><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.Regression"><code>Regression</code></a></li></ul>',9)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[42]||(s[42]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L516-L535",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",A,[i("summary",null,[s[44]||(s[44]=i("a",{id:"PortfolioOptimisers.regression-Tuple{PortfolioOptimisers.AbstractRegressionEstimator, ReturnsResult}",href:"#PortfolioOptimisers.regression-Tuple{PortfolioOptimisers.AbstractRegressionEstimator, ReturnsResult}"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.regression")],-1)),s[45]||(s[45]=a()),t(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[47]||(s[47]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">regression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(re</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRegressionEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ReturnsResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute or extract a regression result from an estimator or result and a <a href="/PortfolioOptimisers.jl/previews/PR26/api/03_Preprocessing#PortfolioOptimisers.ReturnsResult"><code>ReturnsResult</code></a>.</p><p>This method dispatches to <code>regression(re, rd.X, rd.F)</code>, allowing both regression estimators and regression result objects to be used interchangeably in generic workflows. If <code>re</code> is an estimator, it computes the regression result using the data in <code>rd</code>. If <code>re</code> is already a result, it is returned unchanged.</p><p><strong>Arguments</strong></p><ul><li><p><code>re</code>: A regression estimator or result object.</p></li><li><p><code>rd</code>: A returns result object containing data matrices <code>X</code> and <code>F</code>.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Regression</code>: The computed or extracted regression result.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.Regression"><code>Regression</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/03_Preprocessing#PortfolioOptimisers.ReturnsResult"><code>ReturnsResult</code></a></p></li></ul>',9)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[46]||(s[46]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L539-L559",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",R,[i("summary",null,[s[48]||(s[48]=i("a",{id:"PortfolioOptimisers.AbstractRegressionEstimator",href:"#PortfolioOptimisers.AbstractRegressionEstimator"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractRegressionEstimator")],-1)),s[49]||(s[49]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[51]||(s[51]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractRegressionEstimator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for all regression estimator types in PortfolioOptimisers.jl.</p><p>All concrete types implementing regression estimation algorithms should subtype <code>AbstractRegressionEstimator</code>. This enables a consistent interface for regression-based moment estimation throughout the package.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/01_Base#PortfolioOptimisers.AbstractEstimator"><code>AbstractEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionAlgorithm"><code>AbstractRegressionAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionResult"><code>AbstractRegressionResult</code></a></p></li></ul>',5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[50]||(s[50]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L1-L13",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",F,[i("summary",null,[s[52]||(s[52]=i("a",{id:"PortfolioOptimisers.AbstractRegressionResult",href:"#PortfolioOptimisers.AbstractRegressionResult"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractRegressionResult")],-1)),s[53]||(s[53]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[55]||(s[55]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractRegressionResult </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractResult</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for all regression result types in PortfolioOptimisers.jl.</p><p>All concrete types representing the output of regression-based moment estimation should subtype <code>AbstractRegressionResult</code>. This enables a consistent interface for handling regression results, such as fitted parameters, rr, and intercepts, throughout the package.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/01_Base#PortfolioOptimisers.AbstractResult"><code>AbstractResult</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.Regression"><code>Regression</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionEstimator"><code>AbstractRegressionEstimator</code></a></p></li></ul>',5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[54]||(s[54]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L15-L27",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",P,[i("summary",null,[s[56]||(s[56]=i("a",{id:"PortfolioOptimisers.AbstractRegressionAlgorithm",href:"#PortfolioOptimisers.AbstractRegressionAlgorithm"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractRegressionAlgorithm")],-1)),s[57]||(s[57]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[59]||(s[59]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractRegressionAlgorithm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for all regression algorithm types in PortfolioOptimisers.jl.</p><p>All concrete types implementing specific regression algorithms should subtype <code>AbstractRegressionAlgorithm</code>. This enables flexible extension and dispatch of regression routines for moment estimation.</p><p>These types are used to specify the algorithm when constructing a regression estimator.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/01_Base#PortfolioOptimisers.AbstractEstimator"><code>AbstractEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionAlgorithm"><code>AbstractRegressionAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractStepwiseRegressionAlgorithm"><code>AbstractStepwiseRegressionAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractStepwiseRegressionCriterion"><code>AbstractStepwiseRegressionCriterion</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionTarget"><code>AbstractRegressionTarget</code></a></p></li></ul>',6)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[58]||(s[58]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L29-L45",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",j,[i("summary",null,[s[60]||(s[60]=i("a",{id:"PortfolioOptimisers.AbstractStepwiseRegressionAlgorithm",href:"#PortfolioOptimisers.AbstractStepwiseRegressionAlgorithm"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractStepwiseRegressionAlgorithm")],-1)),s[61]||(s[61]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[63]||(s[63]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractStepwiseRegressionAlgorithm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractRegressionAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for all stepwise regression algorithm types in PortfolioOptimisers.jl.</p><p>All concrete types implementing stepwise regression algorithms should subtype <code>AbstractStepwiseRegressionAlgorithm</code>. This enables modular extension and dispatch for stepwise regression routines, commonly used for variable selection and model refinement in regression-based moment estimation.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionAlgorithm"><code>AbstractRegressionAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractStepwiseRegressionCriterion"><code>AbstractStepwiseRegressionCriterion</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionTarget"><code>AbstractRegressionTarget</code></a></p></li></ul>',5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[62]||(s[62]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L47-L59",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",v,[i("summary",null,[s[64]||(s[64]=i("a",{id:"PortfolioOptimisers.AbstractStepwiseRegressionCriterion",href:"#PortfolioOptimisers.AbstractStepwiseRegressionCriterion"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractStepwiseRegressionCriterion")],-1)),s[65]||(s[65]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[67]||(s[67]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractStepwiseRegressionCriterion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractRegressionAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for all stepwise regression criterion types in PortfolioOptimisers.jl.</p><p>All concrete types representing criteria for stepwise regression algorithms should subtype <code>AbstractStepwiseRegressionCriterion</code>. These criteria are used to evaluate model quality and guide variable selection during stepwise regression, such as AIC, BIC, or R².</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractStepwiseRegressionAlgorithm"><code>AbstractStepwiseRegressionAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionTarget"><code>AbstractRegressionTarget</code></a></p></li></ul>',5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[66]||(s[66]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L61-L72",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",T,[i("summary",null,[s[68]||(s[68]=i("a",{id:"PortfolioOptimisers.AbstractRegressionTarget",href:"#PortfolioOptimisers.AbstractRegressionTarget"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractRegressionTarget")],-1)),s[69]||(s[69]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[71]||(s[71]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractRegressionTarget </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractRegressionAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for all regression target types in PortfolioOptimisers.jl.</p><p>All concrete types representing regression targets (such as linear or generalised linear models) should subtype <code>AbstractRegressionTarget</code>. This enables flexible specification and dispatch of regression targets when constructing regression estimators.</p><p><strong>Related</strong></p><ul><li><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractRegressionAlgorithm"><code>AbstractRegressionAlgorithm</code></a></li></ul>',5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[70]||(s[70]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L74-L84",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",O,[i("summary",null,[s[72]||(s[72]=i("a",{id:"PortfolioOptimisers.AbstractMinValStepwiseRegressionCriterion",href:"#PortfolioOptimisers.AbstractMinValStepwiseRegressionCriterion"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractMinValStepwiseRegressionCriterion")],-1)),s[73]||(s[73]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[75]||(s[75]=r(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractMinValStepwiseRegressionCriterion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              AbstractStepwiseRegressionCriterion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Abstract supertype for all stepwise regression criteria where lower values indicate better model fit in PortfolioOptimisers.jl.</p><p>All concrete types implementing minimisation-based stepwise regression criteria (such as AIC, AICC, or BIC) should subtype <code>AbstractMinValStepwiseRegressionCriterion</code>. These criteria are used to guide variable selection in stepwise regression algorithms by minimising the criterion value.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractStepwiseRegressionCriterion"><code>AbstractStepwiseRegressionCriterion</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AIC"><code>AIC</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AICC"><code>AICC</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.BIC"><code>BIC</code></a></p></li></ul>`,5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[74]||(s[74]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L224-L238",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",B,[i("summary",null,[s[76]||(s[76]=i("a",{id:"PortfolioOptimisers.AbstractMaxValStepwiseRegressionCriteria",href:"#PortfolioOptimisers.AbstractMaxValStepwiseRegressionCriteria"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractMaxValStepwiseRegressionCriteria")],-1)),s[77]||(s[77]=a()),t(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[79]||(s[79]=r(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractMaxValStepwiseRegressionCriteria </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              AbstractStepwiseRegressionCriterion </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Abstract supertype for all stepwise regression criteria where higher values indicate better model fit in PortfolioOptimisers.jl.</p><p>All concrete types implementing maximisation-based stepwise regression criteria (such as R² or Adjusted R²) should subtype <code>AbstractMaxValStepwiseRegressionCriteria</code>. These criteria are used to guide variable selection in stepwise regression algorithms by maximising the criterion value.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractStepwiseRegressionCriterion"><code>AbstractStepwiseRegressionCriterion</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.RSquared"><code>RSquared</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AdjustedRSquared"><code>AdjustedRSquared</code></a></p></li></ul>`,5)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[78]||(s[78]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L241-L254",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",M,[i("summary",null,[s[80]||(s[80]=i("a",{id:"PortfolioOptimisers.regression_view",href:"#PortfolioOptimisers.regression_view"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.regression_view")],-1)),s[81]||(s[81]=a()),t(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[84]||(s[84]=r(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">regression_view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(re</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Regression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return a view of a <a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.Regression"><code>Regression</code></a> result object, selecting only the rows indexed by <code>i</code>.</p><p>This function constructs a new <code>Regression</code> result, where the coefficient matrix <code>M</code>, optional auxiliary matrix <code>L</code>, and intercept vector <code>b</code> are restricted to the rows specified by the index vector <code>i</code>. This is useful for extracting or operating on a subset of regression results, such as for a subset of assets or features.</p><p><strong>Arguments</strong></p><ul><li><p><code>re</code>: A regression result object.</p></li><li><p><code>i</code>: Indices of the rows to select.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Regression</code>: A new regression result object with fields restricted to the selected rows.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> re </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Regression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Regression</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Int64}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Int64}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Int64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">regression_view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(re, [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Regression</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  M </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SubArray{Int64, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Matrix{Int64}, Tuple{Vector{Int64}, Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Slice{Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OneTo{Int64}}}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SubArray{Int64, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Matrix{Int64}, Tuple{Vector{Int64}, Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Slice{Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OneTo{Int64}}}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SubArray{Int64, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Vector{Int64}, Tuple{Vector{Int64}}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.Regression"><code>Regression</code></a></li></ul>`,11)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[82]||(s[82]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L453-L488",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[85]||(s[85]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">regression_view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(re</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:AbstractRegressionEstimator}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>No-op fallback for <code>regression_view</code> when the input is <code>nothing</code> or an <code>AbstractRegressionEstimator</code>.</p><p>This method returns the input <code>re</code> unchanged. It is used internally to allow generic code to call <code>regression_view</code> without needing to check for <code>nothing</code> or estimator types, ensuring graceful handling of missing or non-result regression objects.</p><p><strong>Arguments</strong></p><ul><li><p><code>re</code>: Either <code>nothing</code> or a regression estimator type.</p></li><li><p><code>args...</code>: Additional arguments (ignored).</p></li></ul><p><strong>Returns</strong></p><ul><li>The input <code>re</code>, unchanged.</li></ul><p><strong>Related</strong></p><ul><li><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.regression_view"><code>regression_view(::Regression, ::AbstractVector)</code></a></li></ul>',9)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[83]||(s[83]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L493-L512",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",w,[i("summary",null,[s[86]||(s[86]=i("a",{id:"PortfolioOptimisers.regression_criterion_func",href:"#PortfolioOptimisers.regression_criterion_func"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.regression_criterion_func")],-1)),s[87]||(s[87]=a()),t(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[89]||(s[89]=r('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">regression_criterion_func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractStepwiseRegressionCriterion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the function used to compute the value of a stepwise regression criterion.</p><p>This utility dispatches on the concrete criterion subtype of <a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AbstractStepwiseRegressionCriterion"><code>AbstractStepwiseRegressionCriterion</code></a>, returning the corresponding function from <a href="https://juliastats.org/GLM.jl/stable/#Methods-applied-to-fitted-models" target="_blank" rel="noreferrer"><code>GLM.jl</code></a>. Used internally by stepwise regression algorithms to evaluate model quality.</p><p><strong>Arguments</strong></p><ul><li><code>criterion</code>: A stepwise regression criterion type (e.g., <code>AIC()</code>, <code>BIC()</code>, <code>RSquared()</code>).</li></ul><p><strong>Returns</strong></p><ul><li><code>f::Function</code>: The function that computes the criterion value for a fitted model.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AIC"><code>AIC</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AICC"><code>AICC</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.BIC"><code>BIC</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.RSquared"><code>RSquared</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR26/api/09_Moments/18_Base_Regression#PortfolioOptimisers.AdjustedRSquared"><code>AdjustedRSquared</code></a></p></li></ul>',9)),t(e,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...s[88]||(s[88]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/9c5ddcee58814974757bb98635bd3cadbbf09726/src/08_Moments/18_Base_Regression.jl#L330-L352",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const q=o(h,[["render",S]]);export{N as __pageData,q as default};
