import{_ as h,C as p,c as o,o as r,j as i,a as l,aA as n,G as a,w as e}from"./chunks/framework.oP7yq7hW.js";const w=JSON.parse('{"title":"Weight Bounds Constraints","description":"","frontmatter":{},"headers":[],"relativePath":"api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration.md","filePath":"api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration.md","lastUpdated":null}'),k={name:"api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration.md"},d={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""};function C(b,s,f,B,_,m){const t=p("Badge");return r(),o("div",null,[s[42]||(s[42]=i("h1",{id:"Weight-Bounds-Constraints",tabindex:"-1"},[l("Weight Bounds Constraints "),i("a",{class:"header-anchor",href:"#Weight-Bounds-Constraints","aria-label":'Permalink to "Weight Bounds Constraints {#Weight-Bounds-Constraints}"'},"â€‹")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"PortfolioOptimisers.WeightBounds",href:"#PortfolioOptimisers.WeightBounds"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.WeightBounds")],-1)),s[1]||(s[1]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WeightBounds{T1, T2} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractConstraintResult</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Container for lower and upper portfolio weight bounds.</p><p><code>WeightBounds</code> stores the lower (<code>lb</code>) and upper (<code>ub</code>) bounds for portfolio weights, which can be scalars, vectors, or <code>nothing</code>. This type is used to represent weight constraints in portfolio optimisation problems, supporting both global and asset-specific bounds.</p><p><strong>Fields</strong></p><ul><li><p><code>lb</code>: Lower bound(s) for portfolio weights.</p></li><li><p><code>ub</code>: Upper bound(s) for portfolio weights.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WeightBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Real, &lt;:AbstractVector{&lt;:Real}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">             ub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Real, &lt;:AbstractVector{&lt;:Real}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Validation</strong></p><ul><li><code>all(lb .&lt;= ub)</code>.</li></ul><p><strong>Details</strong></p><ul><li><p>If <code>lb</code> or <code>ub</code> is <code>nothing</code>, it indicates no bound in that direction.</p></li><li><p>Supports scalar bounds (same for all assets) or vector bounds (asset-specific).</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> WeightBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeightBounds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> WeightBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeightBounds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBoundsEstimator"><code>WeightBoundsEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints"><code>weight_bounds_constraints</code></a></p></li></ul>`,15)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L34-L85",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",g,[i("summary",null,[s[4]||(s[4]=i("a",{id:"PortfolioOptimisers.UniformlyDistributedBounds",href:"#PortfolioOptimisers.UniformlyDistributedBounds"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.UniformlyDistributedBounds")],-1)),s[5]||(s[5]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> UniformlyDistributedBounds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CustomWeightBoundsConstraint</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Custom weight bounds constraint for uniformly distributing asset weights, <code>1/N</code> for lower bounds and <code>1</code> for upper bounds, where <code>N</code> is the number of assets.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sets </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; dict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nx&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_weight_bounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UniformlyDistributedBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sets)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3333333333333333</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.CustomWeightBoundsConstraint"><code>CustomWeightBoundsConstraint</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBoundsEstimator"><code>WeightBoundsEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li></ul>`,6)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L120-L141",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",E,[i("summary",null,[s[8]||(s[8]=i("a",{id:"PortfolioOptimisers.WeightBoundsEstimator",href:"#PortfolioOptimisers.WeightBoundsEstimator"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.WeightBoundsEstimator")],-1)),s[9]||(s[9]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WeightBoundsEstimator{T1, T2} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractConstraintEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Estimator for portfolio weight bounds constraints.</p><p><code>WeightBoundsEstimator</code> constructs lower (<code>lb</code>) and upper (<code>ub</code>) bounds for portfolio weights, supporting scalars, vectors, dictionaries, pairs, or custom constraint types. This estimator enables flexible specification of global, asset-specific, or algorithmic bounds for use in portfolio optimisation workflows.</p><p><strong>Fields</strong></p><ul><li><p><code>lb</code>: Lower bound(s) for portfolio weights.</p></li><li><p><code>ub</code>: Upper bound(s) for portfolio weights.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WeightBoundsEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      lb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{Nothing, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pair{&lt;:AbstractString, &lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                         &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pair{&lt;:AbstractString, &lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CustomWeightBoundsConstraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      ub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{Nothing, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pair{&lt;:AbstractString, &lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                         &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pair{&lt;:AbstractString, &lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CustomWeightBoundsConstraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Validation</strong></p><ul><li>If <code>lb</code> or <code>ub</code> is a dictionary or vector, it must be non-empty.</li></ul><p><strong>Details</strong></p><ul><li>If <code>lb</code> or <code>ub</code> is <code>nothing</code>, it indicates no bound in that direction.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> WeightBoundsEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeightBoundsEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> WeightBoundsEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                             ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeightBoundsEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Dict{String, Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Dict{String, Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> WeightBoundsEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UniformlyDistributedBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeightBoundsEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UniformlyDistributedBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.CustomWeightBoundsConstraint"><code>CustomWeightBoundsConstraint</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.UniformlyDistributedBounds"><code>UniformlyDistributedBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints"><code>weight_bounds_constraints</code></a></p></li></ul>`,15)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L143-L210",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",c,[i("summary",null,[s[12]||(s[12]=i("a",{id:"PortfolioOptimisers.weight_bounds_constraints",href:"#PortfolioOptimisers.weight_bounds_constraints"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.weight_bounds_constraints")],-1)),s[13]||(s[13]=l()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[18]||(s[18]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weight_bounds_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WeightBoundsEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; strict</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                          datatype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DataType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate portfolio weight bounds constraints from a <code>WeightBoundsEstimator</code> and asset set.</p><p><code>weight_bounds_constraints</code> constructs a <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a> object representing lower and upper portfolio weight bounds for the assets in <code>sets</code>, using the specifications in <code>wb</code>. Supports scalar, vector, dictionary, pair, or custom constraint types for flexible bound assignment.</p><p><strong>Arguments</strong></p><ul><li><p><code>wb</code>: <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBoundsEstimator"><code>WeightBoundsEstimator</code></a> specifying lower and upper bounds.</p></li><li><p><code>sets</code>: <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a> containing asset names or indices.</p></li><li><p><code>strict</code>: If <code>true</code>, enforces strict matching between assets and bounds (throws error on mismatch); if <code>false</code>, issues a warning.</p></li><li><p><code>datatype</code>: Output data type for bounds.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to bound extraction routines.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>wb::WeightBounds</code>: Object containing lower and upper bounds aligned with <code>sets</code>.</li></ul><p><strong>Details</strong></p><ul><li><p>Lower and upper bounds are extracted using <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.get_weight_bounds"><code>get_weight_bounds</code></a>, mapped to assets in <code>sets</code>.</p></li><li><p>Supports composable and asset-specific constraints.</p></li><li><p>If a bound is <code>nothing</code>, indicates no constraint in that direction.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sets </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; dict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nx&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> WeightBoundsEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> weight_bounds_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wb, sets)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeightBounds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBoundsEstimator"><code>WeightBoundsEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.get_weight_bounds"><code>get_weight_bounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a></p></li></ul>`,13)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[14]||(s[14]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L365-L412",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[19]||(s[19]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weight_bounds_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WeightBounds{&lt;:Any, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; scalar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                          N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Propagate or expand portfolio weight bounds constraints from a <code>WeightBounds</code> object.</p><p><code>weight_bounds_constraints</code> returns the input <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a> object unchanged if <code>scalar</code> is <code>true</code> or <code>N</code> is zero. Otherwise, it expands scalar or <code>nothing</code> bounds to vectors or ranges of length <code>N</code> using <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints_side"><code>weight_bounds_constraints_side</code></a>, ensuring per-asset constraints are properly propagated.</p><p><strong>Arguments</strong></p><ul><li><p><code>wb</code>: <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a> object containing lower and upper bounds.</p></li><li><p><code>args...</code>: Additional positional arguments (ignored).</p></li><li><p><code>scalar</code>: If <code>true</code>, treat bounds as scalar and return unchanged.</p></li><li><p><code>N</code>: Number of assets (length for expansion; if zero, treat as scalar).</p></li><li><p><code>kwargs...</code>: Additional keyword arguments (ignored).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>wb::WeightBounds</code>: Expanded or unchanged bounds object.</li></ul><p><strong>Details</strong></p><ul><li><p>If <code>scalar</code> is <code>true</code> or <code>N == 0</code>, returns <code>wb</code> unchanged.</p></li><li><p>Otherwise, expands <code>lb</code> and <code>ub</code> using <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints_side"><code>weight_bounds_constraints_side</code></a> to vectors of length <code>N</code>.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> weight_bounds_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WeightBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeightBounds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StepRangeLen{Float64, Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwicePrecision{Float64}, Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwicePrecision{Float64}, Int64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> StepRangeLen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StepRangeLen{Float64, Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwicePrecision{Float64}, Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwicePrecision{Float64}, Int64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> StepRangeLen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> weight_bounds_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WeightBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeightBounds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StepRangeLen{Float64, Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwicePrecision{Float64}, Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TwicePrecision{Float64}, Int64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> StepRangeLen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints_side"><code>weight_bounds_constraints_side</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBoundsEstimator"><code>WeightBoundsEstimator</code></a></p></li></ul>`,13)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[15]||(s[15]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L541-L587",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[20]||(s[20]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weight_bounds_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WeightBounds{&lt;:AbstractVector, &lt;:AbstractVector}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                          kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Propagate asset-specific portfolio weight bounds constraints from a <code>WeightBounds</code> object with vector bounds.</p><p><code>weight_bounds_constraints</code> returns the input <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a> object unchanged when both lower and upper bounds are provided as vectors. This method is used to propagate explicit per-asset bounds in constraint generation workflows, ensuring that asset-specific constraints are preserved.</p><p><strong>Arguments</strong></p><ul><li><p><code>wb</code>: <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a> object with vector lower and upper bounds.</p></li><li><p><code>args...</code>: Additional positional arguments (ignored).</p></li><li><p><code>kwargs...</code>: Additional keyword arguments (ignored).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>wb::WeightBounds</code>: The input bounds object, unchanged.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> weight_bounds_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WeightBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeightBounds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBoundsEstimator"><code>WeightBoundsEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints_side"><code>weight_bounds_constraints_side</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints"><code>weight_bounds_constraints</code></a></p></li></ul>`,11)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[16]||(s[16]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L596-L631",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[21]||(s[21]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weight_bounds_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; scalar</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                          kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate unconstrained portfolio weight bounds when no bounds are specified.</p><p><code>weight_bounds_constraints</code> returns a <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a> object with lower bounds set to <code>-Inf</code> and upper bounds set to <code>Inf</code> for all assets when <code>wb</code> is <code>nothing</code>. If <code>scalar</code> is <code>true</code> or <code>N</code> is zero, returns scalar bounds; otherwise, returns vectors of length <code>N</code> filled with <code>-Inf</code> and <code>Inf</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>wb::Nothing</code>: Indicates no constraint for portfolio weights.</p></li><li><p><code>args...</code>: Additional positional arguments (ignored).</p></li><li><p><code>scalar::Bool</code>: If <code>true</code>, return scalar bounds (<code>-Inf</code>, <code>Inf</code>).</p></li><li><p><code>N::Integer</code>: Number of assets (length for expansion; if zero, treat as scalar).</p></li><li><p><code>kwargs...</code>: Additional keyword arguments (ignored).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>wb::WeightBounds</code>: Object with unconstrained lower and upper bounds.</li></ul><p><strong>Details</strong></p><ul><li><p>If <code>scalar</code> is <code>true</code> or <code>N == 0</code>, returns <code>WeightBounds(-Inf, Inf)</code>.</p></li><li><p>Otherwise, returns <code>WeightBounds(fill(-Inf, N), fill(Inf, N))</code>.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> weight_bounds_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeightBounds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> weight_bounds_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; scalar </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WeightBounds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ub </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Inf</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBoundsEstimator"><code>WeightBoundsEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints_side"><code>weight_bounds_constraints_side</code></a></p></li></ul>`,13)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[17]||(s[17]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L636-L682",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",u,[i("summary",null,[s[22]||(s[22]=i("a",{id:"PortfolioOptimisers.CustomWeightBoundsConstraint",href:"#PortfolioOptimisers.CustomWeightBoundsConstraint"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.CustomWeightBoundsConstraint")],-1)),s[23]||(s[23]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[25]||(s[25]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CustomWeightBoundsConstraint </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractConstraintEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for custom portfolio weight bounds constraints.</p><p><code>CustomWeightBoundsConstraint</code> provides an interface for implementing user-defined or algorithmic portfolio weight bounds. Subtypes can encode advanced or non-standard weight constraints, such as scaled, grouped, or dynamically computed bounds, for use in portfolio optimisation workflows.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBoundsEstimator"><code>WeightBoundsEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.UniformlyDistributedBounds"><code>UniformlyDistributedBounds</code></a></p></li></ul>',5)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[24]||(s[24]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L104-L118",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",y,[i("summary",null,[s[26]||(s[26]=i("a",{id:"PortfolioOptimisers.get_weight_bounds",href:"#PortfolioOptimisers.get_weight_bounds"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.get_weight_bounds")],-1)),s[27]||(s[27]=l()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[31]||(s[31]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_weight_bounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Real, &lt;:AbstractVector{&lt;:Real}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts portfolio weight bounds from a scalar, vector, or <code>nothing</code>.</p><p><code>get_weight_bounds</code> returns the input value unchanged when the weight bounds are specified as a scalar, vector, or <code>nothing</code>. This method is used internally to propagate simple bound specifications in portfolio optimisation workflows.</p><p><strong>Arguments</strong></p><ul><li><p><code>wb</code>: Lower or upper bound(s) for portfolio weights.</p></li><li><p><code>args...</code>: Additional positional arguments (ignored).</p></li><li><p><code>kwargs...</code>: Additional keyword arguments (ignored).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>wb</code>: The input value, unchanged.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBoundsEstimator"><code>WeightBoundsEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints"><code>weight_bounds_constraints</code></a></p></li></ul>',9)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[28]||(s[28]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L257-L281",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[32]||(s[32]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_weight_bounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pair{&lt;:AbstractString, &lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                            &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:Pair{&lt;:AbstractString, &lt;:Real}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, lub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                  sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; strict</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, datatype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DataType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64)</span></span></code></pre></div><p>Extracts portfolio weight bounds from a dictionary, pair, or vector of pairs.</p><p><code>get_weight_bounds</code> converts asset-specific bound specifications into a vector of bounds aligned with the assets in <code>sets</code>. This method is used to map named or indexed bounds to the corresponding assets for portfolio optimisation.</p><p><strong>Arguments</strong></p><ul><li><p><code>wb</code>: Asset-specific bounds as a dictionary.</p></li><li><p><code>lub</code>: Boolean flag indicating whether the bounds are lower or upper.</p><ul><li><p><code>true</code>: lower bounds</p></li><li><p><code>false</code>: upper bounds.</p></li></ul></li><li><p><code>sets</code>: <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a> object containing asset names or indices.</p></li><li><p><code>strict</code>: If <code>true</code>, throws error enforcing strict matching between assets and bounds, else throws a warning.</p></li><li><p><code>datatype</code>: Output data type for bounds.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>wb::Vector{&lt;:Real}</code>: Vector of bounds aligned with the assets in <code>sets</code>.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBoundsEstimator"><code>WeightBoundsEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints"><code>weight_bounds_constraints</code></a></p></li></ul>`,9)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[29]||(s[29]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L286-L319",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[33]||(s[33]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_weight_bounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UniformlyDistributedBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                  datatype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DataType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts uniformly distributed portfolio weight bounds.</p><p><code>get_weight_bounds</code> returns a uniform bound for all assets in <code>sets</code> when using <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.UniformlyDistributedBounds"><code>UniformlyDistributedBounds</code></a>. For lower bounds (<code>lub = true</code>), it returns <code>1/N</code> where <code>N</code> is the number of assets; for upper bounds (<code>lub = false</code>), it returns <code>1</code> (or <code>one(datatype)</code>).</p><p><strong>Arguments</strong></p><ul><li><p><code>wb</code>: An instance of <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.UniformlyDistributedBounds"><code>UniformlyDistributedBounds</code></a>.</p></li><li><p><code>lub</code>: Boolean flag indicating whether the bounds are lower or upper.</p><ul><li><p><code>true</code>: lower bounds</p></li><li><p><code>false</code>: upper bounds.</p></li></ul></li><li><p><code>sets</code>: <a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a> object containing asset names or indices.</p></li><li><p><code>datatype</code>: Output data type for bounds.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments (ignored).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>wb::Real</code>: <code>1/N</code> for lower, <code>1</code> for upper as <code>datatype</code>.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.UniformlyDistributedBounds"><code>UniformlyDistributedBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBoundsEstimator"><code>WeightBoundsEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints"><code>weight_bounds_constraints</code></a></p></li></ul>`,9)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[30]||(s[30]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L327-L360",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",F,[i("summary",null,[s[34]||(s[34]=i("a",{id:"PortfolioOptimisers.weight_bounds_constraints_side",href:"#PortfolioOptimisers.weight_bounds_constraints_side"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.weight_bounds_constraints_side")],-1)),s[35]||(s[35]=l()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[39]||(s[39]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weight_bounds_constraints_side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate a vector of portfolio weight bounds when no constraint is specified.</p><p><code>weight_bounds_constraints_side</code> returns a vector of length <code>N</code> filled with the value <code>val</code> when the input bound is <code>nothing</code>. This is used to represent unconstrained portfolio weights (e.g., <code>-Inf</code> for lower bounds, <code>Inf</code> for upper bounds) in constraint generation routines.</p><p><strong>Arguments</strong></p><ul><li><p><code>::Nothing</code>: Indicates no constraint for this bound direction.</p></li><li><p><code>N</code>: Number of assets (length of the output vector).</p></li><li><p><code>val</code>: Value to fill (typically <code>-Inf</code> or <code>Inf</code>).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>wb::Vector{&lt;:Real}</code>: Vector of length <code>N</code> filled with <code>val</code>.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weight_bounds_constraints_side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints"><code>weight_bounds_constraints</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li></ul>`,11)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[36]||(s[36]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L422-L455",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[40]||(s[40]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weight_bounds_constraints_side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, N</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate a vector of portfolio weight bounds from a scalar bound.</p><p><code>weight_bounds_constraints_side</code> returns a vector of length <code>N</code> filled with <code>val</code> if <code>wb</code> is infinite, or a vector of length <code>N</code> with all elements equal to <code>wb</code> otherwise. This is used to propagate scalar portfolio weight bounds to all assets in constraint generation routines.</p><p><strong>Arguments</strong></p><ul><li><p><code>wb::Real</code>: Scalar bound for portfolio weights (can be finite or infinite).</p></li><li><p><code>N::Integer</code>: Number of assets (length of the output vector).</p></li><li><p><code>val::Real</code>: Value to fill if <code>wb</code> is infinite (typically <code>-Inf</code> or <code>Inf</code>).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>wb::Union{&lt;:Vector{&lt;:Real}, &lt;:StepRangeLen}</code>: Vector of length <code>N</code> filled with <code>wb</code> or <code>val</code>.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weight_bounds_constraints_side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">StepRangeLen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weight_bounds_constraints_side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Inf</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints"><code>weight_bounds_constraints</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints_side"><code>weight_bounds_constraints_side</code></a></p></li></ul>`,11)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[37]||(s[37]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L459-L496",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[41]||(s[41]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weight_bounds_constraints_side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(wb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Propagate asset-specific portfolio weight bounds from a vector.</p><p><code>weight_bounds_constraints_side</code> returns the input vector <code>wb</code> unchanged when asset-specific bounds are provided as a vector. This method is used to propagate explicit per-asset bounds in constraint generation routines.</p><p><strong>Arguments</strong></p><ul><li><p><code>wb</code>: Vector of bounds for portfolio weights (one per asset).</p></li><li><p><code>args...</code>: Additional positional arguments (ignored).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>wb::AbstractVector</code>: The input vector, unchanged.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PortfolioOptimisers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">weight_bounds_constraints_side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.3</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints"><code>weight_bounds_constraints</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.WeightBounds"><code>WeightBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR22/api/12_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.weight_bounds_constraints_side"><code>weight_bounds_constraints_side</code></a></p></li></ul>`,11)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[38]||(s[38]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/49e3d3d0307386e0a1480471e8ee1b4d815b12ac/src/13_ConstraintGeneration/04_WeightBoundsConstraintGeneration.jl#L504-L537",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const P=h(k,[["render",C]]);export{w as __pageData,P as default};
