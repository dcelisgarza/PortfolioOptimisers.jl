import{_ as o,C as r,c as p,o as c,j as s,a as e,aA as n,G as t,w as l}from"./chunks/framework.dDzCSlLk.js";const b=JSON.parse('{"title":"Distance","description":"","frontmatter":{},"headers":[],"relativePath":"api/08_Distance/2_Distance.md","filePath":"api/08_Distance/2_Distance.md","lastUpdated":null}'),h={name:"api/08_Distance/2_Distance.md"},d={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""};function u(y,i,_,C,P,F){const a=r("Badge");return c(),p("div",null,[i[28]||(i[28]=s("h1",{id:"Distance",tabindex:"-1"},[e("Distance "),s("a",{class:"header-anchor",href:"#Distance","aria-label":'Permalink to "Distance {#Distance}"'},"â€‹")],-1)),s("details",d,[s("summary",null,[i[0]||(i[0]=s("a",{id:"PortfolioOptimisers.Distance",href:"#PortfolioOptimisers.Distance"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.Distance")],-1)),i[1]||(i[1]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[3]||(i[3]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Distance{T1} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDistanceEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Distance estimator for portfolio optimization.</p><p><strong>Fields</strong></p><ul><li><code>alg</code>: The distance algorithm.</li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDistanceAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SimpleDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Distance</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SimpleDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.AbstractDistanceEstimator"><code>AbstractDistanceEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.AbstractDistanceAlgorithm"><code>AbstractDistanceAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleDistance"><code>SimpleDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleAbsoluteDistance"><code>SimpleAbsoluteDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CorrelationDistance"><code>CorrelationDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.VariationInfoDistance"><code>VariationInfoDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#PortfolioOptimisers.distance-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>distance</code></a></p></li></ul>`,11)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[2]||(i[2]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/7084dc3003c5d986e1a00534b7583e70c294da20/src/8_Distance/2_Distance.jl#L1-L41",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",k,[s("summary",null,[i[4]||(i[4]=s("a",{id:"PortfolioOptimisers.distance-Tuple{Distance{<:SimpleDistance}, CovarianceEstimator, AbstractMatrix}",href:"#PortfolioOptimisers.distance-Tuple{Distance{<:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.distance")],-1)),i[5]||(i[5]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[7]||(i[7]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleAbsoluteDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                              &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CorrelationDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CanonicalDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         ce</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">StatsBase.CovarianceEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This method computes the correlation matrix using the provided covariance estimator <code>ce</code> and data matrix <code>X</code>, which is used to compute the distance matrix based on the specified distance algorithm in <code>de</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>de</code>: Distance estimator.</p><ul><li><p><code>de::Distance{&lt;:SimpleDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleDistance"><code>SimpleDistance</code></a> algorithm.</p></li><li><p><code>de::Distance{&lt;:SimpleAbsoluteDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleAbsoluteDistance"><code>SimpleAbsoluteDistance</code></a> algorithm.</p></li><li><p><code>de::Distance{&lt;:LogDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a> algorithm.</p></li><li><p><code>de::Distance{&lt;:CorrelationDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CorrelationDistance"><code>CorrelationDistance</code></a> algorithm.</p></li><li><p><code>de::Distance{&lt;:CanonicalDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a> algorithm.</p></li></ul></li><li><p><code>ce</code>: Covariance estimator.</p></li><li><p><code>X</code>: Data matrix (observations Ã— features).</p></li><li><p><code>dims</code>: Dimension along which to compute the correlation.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the correlation computation.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>dist::Matrix{&lt;:Real}</code>: Matrix of pairwise distances.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#Distance"><code>Distance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleDistance"><code>SimpleDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleAbsoluteDistance"><code>SimpleAbsoluteDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CorrelationDistance"><code>CorrelationDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#PortfolioOptimisers.cor_and_dist-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>cor_and_dist</code></a></p></li></ul>`,8)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[6]||(i[6]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/7084dc3003c5d986e1a00534b7583e70c294da20/src/8_Distance/2_Distance.jl#L52-L89",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",g,[s("summary",null,[i[8]||(i[8]=s("a",{id:"PortfolioOptimisers.distance-Tuple{Distance{<:LogDistance}, Union{LTDCovariance, PortfolioOptimisersCovariance{<:LTDCovariance}}, AbstractMatrix}",href:"#PortfolioOptimisers.distance-Tuple{Distance{<:LogDistance}, Union{LTDCovariance, PortfolioOptimisersCovariance{<:LTDCovariance}}, AbstractMatrix}"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.distance")],-1)),i[9]||(i[9]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[11]||(i[11]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distance{&lt;:LogDistance}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         ce</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LTDCovariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PortfolioOptimisersCovariance{&lt;:LTDCovariance, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the log-distance matrix from a Lower Tail Dependence (LTD) covariance estimator and data matrix.</p><p><strong>Arguments</strong></p><ul><li><p><code>::Distance{&lt;:LogDistance}</code>: Distance estimator with <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a> algorithm.</p></li><li><p><code>ce</code>: LTD covariance estimator or a PortfolioOptimisersCovariance wrapping an LTD estimator.</p></li><li><p><code>X</code>: Data matrix (observations Ã— features).</p></li><li><p><code>dims</code>: Dimension along which to compute the correlation.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the correlation computation.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>dist::Matrix{&lt;:Real}</code>: Matrix of pairwise log-distances.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#Distance"><code>Distance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#PortfolioOptimisers.cor_and_dist-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>cor_and_dist</code></a></p></li></ul>`,8)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[10]||(i[10]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/7084dc3003c5d986e1a00534b7583e70c294da20/src/8_Distance/2_Distance.jl#L116-L143",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",D,[s("summary",null,[i[12]||(i[12]=s("a",{id:"PortfolioOptimisers.distance-Tuple{Distance{<:CanonicalDistance}, MutualInfoCovariance, AbstractMatrix}",href:"#PortfolioOptimisers.distance-Tuple{Distance{<:CanonicalDistance}, MutualInfoCovariance, AbstractMatrix}"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.distance")],-1)),i[13]||(i[13]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[15]||(i[15]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distance{&lt;:CanonicalDistance}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         ce</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MutualInfoCovariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PortfolioOptimisersCovariance{&lt;:MutualInfoCovariance, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LTDCovariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PortfolioOptimisersCovariance{&lt;:LTDCovariance, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DistanceCovariance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PortfolioOptimisersCovariance{&lt;:DistanceCovariance, &lt;:Any}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the canonical distance matrix using the covariance estimator and data matrix. The method selects the appropriate distance algorithm based on the type of covariance estimator provided (see <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a>).</p><p><strong>Arguments</strong></p><ul><li><p><code>::Distance{&lt;:CanonicalDistance}</code>: Distance estimator using the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a> algorithm.</p></li><li><p><code>ce::MutualInfoCovariance</code>: Mutual information covariance estimator.</p></li><li><p><code>X</code>: Data matrix (observations Ã— features).</p></li><li><p><code>dims</code>: Dimension along which to compute the distance.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>dist::Matrix{&lt;:Real}</code>: Matrix of pairwise canonical distances.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#Distance"><code>Distance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/07_Moments/11_MutualInfoCovariance#PortfolioOptimisers.MutualInfoCovariance"><code>MutualInfoCovariance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/07_Moments/08_LTDCovariance#PortfolioOptimisers.LTDCovariance"><code>LTDCovariance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/07_Moments/07_DistanceCovariance#PortfolioOptimisers.DistanceCovariance"><code>DistanceCovariance</code></a></p></li></ul>`,8)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[14]||(i[14]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/7084dc3003c5d986e1a00534b7583e70c294da20/src/8_Distance/2_Distance.jl#L152-L184",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",m,[s("summary",null,[i[16]||(i[16]=s("a",{id:"PortfolioOptimisers.distance-Tuple{Distance{<:VariationInfoDistance}, Any, AbstractMatrix}",href:"#PortfolioOptimisers.distance-Tuple{Distance{<:VariationInfoDistance}, Any, AbstractMatrix}"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.distance")],-1)),i[17]||(i[17]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[19]||(i[19]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distance{&lt;:VariationInfoDistance}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the variation of information (VI) distance matrix from a data matrix.</p><p><strong>Arguments</strong></p><ul><li><p><code>de::Distance{&lt;:VariationInfoDistance}</code>: Distance estimator with <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.VariationInfoDistance"><code>VariationInfoDistance</code></a> algorithm.</p></li><li><p><code>::Any</code>: Covariance estimator placeholder for API compatibility (ignored).</p></li><li><p><code>X</code>: Data matrix (observations Ã— features).</p></li><li><p><code>dims</code>: Dimension along which to compute the distance. If <code>2</code>, the data is transposed.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments (ignored).</p></li></ul><p><strong>Validation</strong></p><ul><li><code>dims</code> is either <code>1</code> or <code>2</code>.</li></ul><p><strong>Returns</strong></p><ul><li><code>dist::Matrix{&lt;:Real}</code>: Matrix of pairwise variation of information distances.</li></ul><p><strong>Details</strong></p><ul><li><p>The number of bins and normalisation are taken from the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.VariationInfoDistance"><code>VariationInfoDistance</code></a> algorithm fields.</p></li><li><p>If <code>dims == 2</code>, the data matrix is transposed before computation.</p></li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#Distance"><code>Distance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.VariationInfoDistance"><code>VariationInfoDistance</code></a></p></li></ul>`,12)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[18]||(i[18]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/7084dc3003c5d986e1a00534b7583e70c294da20/src/8_Distance/2_Distance.jl#L213-L246",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",E,[s("summary",null,[i[20]||(i[20]=s("a",{id:"PortfolioOptimisers.distance-Tuple{Distance{<:SimpleDistance}, AbstractMatrix, Vararg{Any}}",href:"#PortfolioOptimisers.distance-Tuple{Distance{<:SimpleDistance}, AbstractMatrix, Vararg{Any}}"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.distance")],-1)),i[21]||(i[21]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[23]||(i[23]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleAbsoluteDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                            &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CorrelationDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CanonicalDistance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         rho</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the distance matrix from a correlation or covariance matrix.</p><p>If the input <code>rho</code> is a covariance matrix, it is converted to a correlation matrix which is used to compute the distance matrix using the specified distance algorithm in <code>de</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>de</code>: Distance estimator.</p><ul><li><p><code>de::Distance{&lt;:SimpleDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleDistance"><code>SimpleDistance</code></a> algorithm.</p></li><li><p><code>de::Distance{&lt;:SimpleAbsoluteDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleAbsoluteDistance"><code>SimpleAbsoluteDistance</code></a> algorithm.</p></li><li><p><code>de::Distance{&lt;:LogDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a> algorithm.</p></li><li><p><code>de::Distance{&lt;:CorrelationDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CorrelationDistance"><code>CorrelationDistance</code></a> algorithm.</p></li><li><p><code>de::Distance{&lt;:CanonicalDistance}</code>: Use the <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a> algorithm.</p></li></ul></li><li><p><code>rho</code>: Correlation or covariance matrix.</p></li><li><p><code>args...</code>: Additional arguments (ignored).</p></li><li><p><code>kwargs...</code>: Additional keyword arguments.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>dist::Matrix{&lt;:Real}</code>: Matrix of pairwise Euclidean distances.</li></ul><p><strong>Details</strong></p><ul><li>If <code>rho</code> is a covariance matrix, it is converted to a correlation matrix using <code>StatsBase.cov2cor</code>.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#Distance"><code>Distance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleDistance"><code>SimpleDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.SimpleAbsoluteDistance"><code>SimpleAbsoluteDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.LogDistance"><code>LogDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CorrelationDistance"><code>CorrelationDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/1_Base_Distance#PortfolioOptimisers.CanonicalDistance"><code>CanonicalDistance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#PortfolioOptimisers.cor_and_dist-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>cor_and_dist</code></a></p></li></ul>`,11)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[22]||(i[22]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/7084dc3003c5d986e1a00534b7583e70c294da20/src/8_Distance/2_Distance.jl#L256-L298",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",f,[s("summary",null,[i[24]||(i[24]=s("a",{id:"PortfolioOptimisers.cor_and_dist-Tuple{Distance{<:SimpleDistance}, CovarianceEstimator, AbstractMatrix}",href:"#PortfolioOptimisers.cor_and_dist-Tuple{Distance{<:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"},[s("span",{class:"jlbinding"},"PortfolioOptimisers.cor_and_dist")],-1)),i[25]||(i[25]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[27]||(i[27]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cor_and_dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ce</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">StatsBase.CovarianceEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">             dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute and return the correlation and distance matrices. The distance matrix depends on the combination of distance and covariance estimators (see <a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#PortfolioOptimisers.distance-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>distance</code></a>).</p><p><strong>Arguments</strong></p><ul><li><p><code>de</code>: Distance estimator.</p></li><li><p><code>ce</code>: Covariance estimator.</p></li><li><p><code>X</code>: Data matrix (observations Ã— features).</p></li><li><p><code>dims</code>: Dimension along which to compute the correlation.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the correlation computation.</p></li></ul><p><strong>Validation</strong></p><ul><li><code>dims</code> is either <code>1</code> or <code>2</code>.</li></ul><p><strong>Returns</strong></p><ul><li><code>(rho::Matrix{&lt;:Real}, dist::Matrix{&lt;:Real})</code>: Tuple of correlation matrix and distance matrix.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#Distance"><code>Distance</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR16/api/08_Distance/2_Distance#PortfolioOptimisers.distance-Tuple{Distance{&lt;:SimpleDistance}, CovarianceEstimator, AbstractMatrix}"><code>distance</code></a></p></li></ul>`,10)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...i[26]||(i[26]=[s("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/7084dc3003c5d986e1a00534b7583e70c294da20/src/8_Distance/2_Distance.jl#L344-L372",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const A=o(h,[["render",u]]);export{b as __pageData,A as default};
