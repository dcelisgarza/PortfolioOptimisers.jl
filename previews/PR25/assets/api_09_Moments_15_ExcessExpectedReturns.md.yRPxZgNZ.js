import{_ as r,C as l,c as d,o as h,j as e,a,aA as n,G as t,w as p}from"./chunks/framework.DqWX5kDR.js";const f=JSON.parse('{"title":"Excess expected returns","description":"","frontmatter":{},"headers":[],"relativePath":"api/09_Moments/15_ExcessExpectedReturns.md","filePath":"api/09_Moments/15_ExcessExpectedReturns.md","lastUpdated":null}'),o={name:"api/09_Moments/15_ExcessExpectedReturns.md"},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""};function E(u,s,g,x,m,y){const i=l("Badge");return h(),d("div",null,[s[8]||(s[8]=e("h1",{id:"Excess-expected-returns",tabindex:"-1"},[a("Excess expected returns "),e("a",{class:"header-anchor",href:"#Excess-expected-returns","aria-label":'Permalink to "Excess expected returns {#Excess-expected-returns}"'},"​")],-1)),e("details",k,[e("summary",null,[s[0]||(s[0]=e("a",{id:"PortfolioOptimisers.ExcessExpectedReturns",href:"#PortfolioOptimisers.ExcessExpectedReturns"},[e("span",{class:"jlbinding"},"PortfolioOptimisers.ExcessExpectedReturns")],-1)),s[1]||(s[1]=a()),t(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ExcessExpectedReturns{T1, T2} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractShrunkExpectedReturnsEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    me</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Container type for excess expected returns estimators.</p><p><code>ExcessExpectedReturns</code> encapsulates a mean estimator and a risk-free rate for computing excess expected returns. This enables modular workflows for estimating expected returns above a specified risk-free rate.</p><p><strong>Fields</strong></p><ul><li><p><code>me</code>: Mean estimator for expected returns.</p></li><li><p><code>rf</code>: Risk-free rate to subtract from expected returns.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExcessExpectedReturns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; me</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractExpectedReturnsEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SimpleExpectedReturns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      rf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ExcessExpectedReturns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ExcessExpectedReturns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  me </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SimpleExpectedReturns</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   w </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  rf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR25/api/09_Moments/13_ShrunkExpectedReturns#PortfolioOptimisers.AbstractShrunkExpectedReturnsEstimator"><code>AbstractShrunkExpectedReturnsEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR25/api/09_Moments/01_Base_Moments#PortfolioOptimisers.AbstractExpectedReturnsEstimator"><code>AbstractExpectedReturnsEstimator</code></a></p></li></ul>`,12)),t(i,{type:"info",class:"source-link",text:"source"},{default:p(()=>[...s[2]||(s[2]=[e("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/a5f926b7033301995b177e58d80cbdd1cd1951db/src/08_Moments/15_ExcessExpectedReturns.jl#L1-L37",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),e("details",c,[e("summary",null,[s[4]||(s[4]=e("a",{id:"Statistics.mean-Tuple{ExcessExpectedReturns, AbstractMatrix}",href:"#Statistics.mean-Tuple{ExcessExpectedReturns, AbstractMatrix}"},[e("span",{class:"jlbinding"},"Statistics.mean")],-1)),s[5]||(s[5]=a()),t(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[7]||(s[7]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(me</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExcessExpectedReturns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute excess expected returns by subtracting the risk-free rate.</p><p>This method applies the mean estimator to the data and subtracts the risk-free rate from the resulting expected returns.</p><p><strong>Arguments</strong></p><ul><li><p><code>me</code>: Excess expected returns estimator.</p></li><li><p><code>X</code>: Data matrix (observations × assets).</p></li><li><p><code>dims</code>: Dimension along which to compute the mean.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments passed to the mean estimator.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>mu::AbstractArray</code>: Excess expected returns vector.</li></ul><p><strong>Related</strong></p><ul><li><a href="/PortfolioOptimisers.jl/previews/PR25/api/09_Moments/15_ExcessExpectedReturns#PortfolioOptimisers.ExcessExpectedReturns"><code>ExcessExpectedReturns</code></a></li></ul>',9)),t(i,{type:"info",class:"source-link",text:"source"},{default:p(()=>[...s[6]||(s[6]=[e("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/a5f926b7033301995b177e58d80cbdd1cd1951db/src/08_Moments/15_ExcessExpectedReturns.jl#L53-L74",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const F=r(o,[["render",E]]);export{f as __pageData,F as default};
