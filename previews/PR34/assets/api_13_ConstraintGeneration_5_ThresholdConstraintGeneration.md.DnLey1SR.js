import{_ as h,C as r,c as o,o as p,j as i,a as l,aA as n,G as a,w as e}from"./chunks/framework.Cs8f60z-.js";const B=JSON.parse('{"title":"Buy-in Threshold Constraints","description":"","frontmatter":{},"headers":[],"relativePath":"api/13_ConstraintGeneration/5_ThresholdConstraintGeneration.md","filePath":"api/13_ConstraintGeneration/5_ThresholdConstraintGeneration.md","lastUpdated":null}'),k={name:"api/13_ConstraintGeneration/5_ThresholdConstraintGeneration.md"},d={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""};function c(y,s,u,C,F,f){const t=r("Badge");return p(),o("div",null,[s[18]||(s[18]=i("h1",{id:"Buy-in-Threshold-Constraints",tabindex:"-1"},[l("Buy-in Threshold Constraints "),i("a",{class:"header-anchor",href:"#Buy-in-Threshold-Constraints","aria-label":'Permalink to "Buy-in Threshold Constraints {#Buy-in-Threshold-Constraints}"'},"​")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"PortfolioOptimisers.BuyInThresholdEstimator",href:"#PortfolioOptimisers.BuyInThresholdEstimator"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.BuyInThresholdEstimator")],-1)),s[1]||(s[1]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BuyInThresholdEstimator{T1} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractConstraintEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Estimator for buy-in threshold portfolio constraints.</p><p><code>BuyInThresholdEstimator</code> specifies a minimum allocation threshold for each asset in a portfolio. Only assets with weights above the threshold are allocated nonzero weight. The estimator supports asset-specific thresholds via dictionaries, pairs, or vectors of pairs, and validates input for non-emptiness.</p><p><strong>Fields</strong></p><ul><li><code>val</code>: Asset-specific threshold values, as a dictionary, pair, or vector of pairs.</li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BuyInThresholdEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                        val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Pair{&lt;:AbstractString, &lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                   &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:Pair{&lt;:AbstractString, &lt;:Real}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><strong>Validation</strong></p><ul><li>If <code>val</code> is a <code>AbstractDict</code> or <code>AbstractVector</code>, <code>!isempty(val)</code>.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BuyInThresholdEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BuyInThresholdEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  val ┴ Dict{String, Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BuyInThresholdEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BuyInThresholdEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  val ┴ Vector{Pair{String, Float64}}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThreshold"><code>BuyInThreshold</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.threshold_constraints"><code>threshold_constraints</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/1_Base_ConstraintGeneration#PortfolioOptimisers.AbstractConstraintEstimator"><code>AbstractConstraintEstimator</code></a></p></li></ul>`,13)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/2f3164224fe291b85afb94e99a31e825013ad15a/src/13_ConstraintGeneration/05_ThresholdConstraintGeneration.jl#L1-L41",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",E,[i("summary",null,[s[4]||(s[4]=i("a",{id:"PortfolioOptimisers.BuyInThreshold",href:"#PortfolioOptimisers.BuyInThreshold"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.BuyInThreshold")],-1)),s[5]||(s[5]=l()),a(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BuyInThreshold{T1} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractConstraintResult</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>Container for buy-in threshold portfolio constraints.</p><p><code>BuyInThreshold</code> stores the minimum allocation threshold(s) for assets in a portfolio. The threshold can be specified as a scalar (applied to all assets) or as a vector of per-asset values. Input validation ensures all thresholds are finite and non-negative.</p><p><strong>Fields</strong></p><ul><li><code>val</code>: Scalar or vector of threshold values for portfolio weights.</li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BuyInThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{&lt;:Real, &lt;:AbstractVector{&lt;:Real}}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Validation</strong></p><ul><li><code>val</code> is validated with <a href="/PortfolioOptimisers.jl/previews/PR34/api/02_Tools#PortfolioOptimisers.assert_nonneg_finite_val"><code>assert_nonneg_finite_val</code></a>.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BuyInThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BuyInThreshold</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  val ┴ Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BuyInThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BuyInThreshold</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  val ┴ Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThresholdEstimator"><code>BuyInThresholdEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.threshold_constraints"><code>threshold_constraints</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/1_Base_ConstraintGeneration#PortfolioOptimisers.AbstractConstraintResult"><code>AbstractConstraintResult</code></a></p></li></ul>`,13)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/2f3164224fe291b85afb94e99a31e825013ad15a/src/13_ConstraintGeneration/05_ThresholdConstraintGeneration.jl#L61-L99",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",g,[i("summary",null,[s[8]||(s[8]=i("a",{id:"PortfolioOptimisers.threshold_constraints",href:"#PortfolioOptimisers.threshold_constraints"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.threshold_constraints")],-1)),s[9]||(s[9]=l()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[14]||(s[14]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">threshold_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:BuyInThreshold}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Propagate or pass through buy-in threshold portfolio constraints.</p><p><code>threshold_constraints</code> returns the input <a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThreshold"><code>BuyInThreshold</code></a> object or <code>nothing</code> unchanged. This method is used to propagate already constructed buy-in threshold constraints, enabling composability and uniform interface handling in constraint generation workflows.</p><p><strong>Arguments</strong></p><ul><li><p><code>t</code>: An existing <a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThreshold"><code>BuyInThreshold</code></a> object or <code>nothing</code>.</p></li><li><p><code>args...</code>: Additional positional arguments (ignored).</p></li><li><p><code>kwargs...</code>: Additional keyword arguments (ignored).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>bt::Union{Nothing, &lt;:BuyInThreshold}</code>: The input constraint object, unchanged.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> threshold_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BuyInThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BuyInThreshold</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  val ┴ Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> threshold_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThresholdEstimator"><code>BuyInThresholdEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThreshold"><code>BuyInThreshold</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.threshold_constraints"><code>threshold_constraints</code></a></p></li></ul>`,11)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/2f3164224fe291b85afb94e99a31e825013ad15a/src/13_ConstraintGeneration/05_ThresholdConstraintGeneration.jl#L121-L154",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[15]||(s[15]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">threshold_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BuyInThresholdEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      datatype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DataType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64, strict</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate buy-in threshold portfolio constraints from a <code>BuyInThresholdEstimator</code> and asset set.</p><p><code>threshold_constraints</code> constructs a <a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThreshold"><code>BuyInThreshold</code></a> object representing minimum allocation thresholds for the assets in <code>sets</code>, using the specifications in <code>t</code>. Supports scalar, vector, dictionary, pair, or custom threshold types for flexible assignment and validation.</p><p><strong>Arguments</strong></p><ul><li><p><code>t</code>: <a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThresholdEstimator"><code>BuyInThresholdEstimator</code></a> specifying asset-specific threshold values.</p></li><li><p><code>sets</code>: <a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a> containing asset names or indices.</p></li><li><p><code>datatype</code>: Output data type for thresholds.</p></li><li><p><code>strict</code>: If <code>true</code>, enforces strict matching between assets and thresholds (throws error on mismatch); if <code>false</code>, issues a warning.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>bt::BuyInThreshold</code>: Object containing threshold values aligned with <code>sets</code>.</li></ul><p><strong>Details</strong></p><ul><li><p>Thresholds are extracted and mapped to assets using <code>estimator_to_val</code>.</p></li><li><p>If a threshold is missing for an asset, assigns zero (no threshold) unless <code>strict</code> is <code>true</code>.</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sets </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; dict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nx&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> BuyInThresholdEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> threshold_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t, sets)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BuyInThreshold</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  val ┴ Vector{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThresholdEstimator"><code>BuyInThresholdEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThreshold"><code>BuyInThreshold</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.threshold_constraints"><code>threshold_constraints</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a></p></li></ul>`,13)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[11]||(s[11]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/2f3164224fe291b85afb94e99a31e825013ad15a/src/13_ConstraintGeneration/05_ThresholdConstraintGeneration.jl#L158-L200",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[16]||(s[16]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">threshold_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bounds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UniformlyDistributedBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Generate uniform buy-in threshold portfolio constraints for all assets.</p><p><code>threshold_constraints</code> constructs a <a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThreshold"><code>BuyInThreshold</code></a> object with a uniform threshold value for each asset in <code>sets</code>, using <a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.UniformlyDistributedBounds"><code>UniformlyDistributedBounds</code></a>. The threshold is set to <code>1/N</code>, where <code>N</code> is the number of assets, ensuring equal minimum allocation across all assets.</p><p><strong>Arguments</strong></p><ul><li><p><code>bounds</code>: <a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.UniformlyDistributedBounds"><code>UniformlyDistributedBounds</code></a> specifying uniform threshold logic.</p></li><li><p><code>sets</code>: <a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a> containing asset names or indices.</p></li><li><p><code>kwargs...</code>: Additional keyword arguments (ignored).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>BuyInThreshold</code>: Object with uniform threshold values for all assets.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sets </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; dict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nx&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;B&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> threshold_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UniformlyDistributedBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), sets)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BuyInThreshold</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  val ┴ Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.3333333333333333</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThresholdEstimator"><code>BuyInThresholdEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.BuyInThreshold"><code>BuyInThreshold</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/4_WeightBoundsConstraintGeneration#PortfolioOptimisers.UniformlyDistributedBounds"><code>UniformlyDistributedBounds</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.threshold_constraints"><code>threshold_constraints</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/2_LinearConstraintGeneration#PortfolioOptimisers.AssetSets"><code>AssetSets</code></a></p></li></ul>`,11)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[12]||(s[12]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/2f3164224fe291b85afb94e99a31e825013ad15a/src/13_ConstraintGeneration/05_ThresholdConstraintGeneration.jl#L207-L241",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1}),s[17]||(s[17]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">threshold_constraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{Nothing, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BuyInThresholdEstimator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                                &lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">BuyInThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}}, sets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AssetSets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Broadcasts <a href="/PortfolioOptimisers.jl/previews/PR34/api/13_ConstraintGeneration/5_ThresholdConstraintGeneration#PortfolioOptimisers.threshold_constraints"><code>threshold_constraints</code></a> over the vector.</p><p>Provides a uniform interface for processing multiple constraint estimators simultaneously.</p>`,3)),a(t,{type:"info",class:"source-link",text:"source"},{default:e(()=>[...s[13]||(s[13]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/2f3164224fe291b85afb94e99a31e825013ad15a/src/13_ConstraintGeneration/05_ThresholdConstraintGeneration.jl#L246-L254",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const _=h(k,[["render",c]]);export{B as __pageData,_ as default};
