import{_ as p,C as h,c as o,o as r,j as i,a as t,aA as l,G as e,w as n}from"./chunks/framework.R0IdGF5w.js";const B=JSON.parse('{"title":"Denoise","description":"","frontmatter":{},"headers":[],"relativePath":"api/04_Denoise.md","filePath":"api/04_Denoise.md","lastUpdated":null}'),k={name:"api/04_Denoise.md"},d={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""};function b(A,s,_,j,P,v){const a=h("Badge");return r(),o("div",null,[s[44]||(s[44]=i("h1",{id:"Denoise",tabindex:"-1"},[t("Denoise "),i("a",{class:"header-anchor",href:"#Denoise","aria-label":'Permalink to "Denoise {#Denoise}"'},"​")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"PortfolioOptimisers.SpectralDenoise",href:"#PortfolioOptimisers.SpectralDenoise"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.SpectralDenoise")],-1)),s[1]||(s[1]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SpectralDenoise </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDenoiseAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>A denoising algorithm that sets the smallest <code>num_factors</code> eigenvalues of a covariance or correlation matrix to zero, effectively removing the principal components relating to random noise according to random matrix theory-based approaches.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SpectralDenoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpectralDenoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.AbstractDenoiseAlgorithm"><code>AbstractDenoiseAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise!"><code>denoise!</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#Denoise"><code>Denoise</code></a></p></li></ul>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e6853fb84a1513f97038b084a10864f8468cc69c/src/4_Denoise.jl#L37-L56",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",g,[i("summary",null,[s[4]||(s[4]=i("a",{id:"PortfolioOptimisers.FixedDenoise",href:"#PortfolioOptimisers.FixedDenoise"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.FixedDenoise")],-1)),s[5]||(s[5]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FixedDenoise </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDenoiseAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>A denoising algorithm that replaces the smallest <code>num_factors</code> eigenvalues of a covariance or correlation matrix with their average, effectively averaging the principal components relating to random noise according to random matrix theory-based approaches.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FixedDenoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FixedDenoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.AbstractDenoiseAlgorithm"><code>AbstractDenoiseAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise!"><code>denoise!</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#Denoise"><code>Denoise</code></a></p></li></ul>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e6853fb84a1513f97038b084a10864f8468cc69c/src/4_Denoise.jl#L59-L78",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",c,[i("summary",null,[s[8]||(s[8]=i("a",{id:"PortfolioOptimisers.ShrunkDenoise",href:"#PortfolioOptimisers.ShrunkDenoise"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.ShrunkDenoise")],-1)),s[9]||(s[9]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[11]||(s[11]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ShrunkDenoise{T1} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDenoiseAlgorithm</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>A denoising algorithm that shrinks the smallest <code>num_factors</code> eigenvalues of a covariance or correlation matrix towards their diagonal, controlled by the shrinkage parameter <code>alpha</code>. This approach interpolates between no shrinkage (<code>alpha = 0</code>) and full shrinkage (<code>alpha = 1</code>), providing a flexible way to regularize noisy eigenvalues.</p><p><strong>Fields</strong></p><ul><li><code>alpha</code>: The shrinkage parameter controlling the degree of shrinkage applied to the smallest eigenvalues.</li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ShrunkDenoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; alpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Validation</strong></p><ul><li><code>0 &lt;= alpha &lt;= 1</code>.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ShrunkDenoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; alpha </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ShrunkDenoise</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  alpha </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.AbstractDenoiseAlgorithm"><code>AbstractDenoiseAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise!"><code>denoise!</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#Denoise"><code>Denoise</code></a></p></li></ul>`,13)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e6853fb84a1513f97038b084a10864f8468cc69c/src/4_Denoise.jl#L81-L119",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",E,[i("summary",null,[s[12]||(s[12]=i("a",{id:"PortfolioOptimisers.Denoise",href:"#PortfolioOptimisers.Denoise"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.Denoise")],-1)),s[13]||(s[13]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[15]||(s[15]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Denoise{T1, T2, T3, T4, T5, T6} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDenoiseEstimator</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    kernel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T6</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>A flexible container type for configuring and applying denoising algorithms to covariance or correlation matrices in PortfolioOptimisers.jl.</p><p><code>Denoise</code> encapsulates all parameters required for matrix denoising, including the kernel and its arguments for spectral density estimation, the denoising algorithm, and matrix dimensions. It is the standard estimator type for denoising routines and supports a variety of algorithms (<a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.SpectralDenoise"><code>SpectralDenoise</code></a>, <a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.FixedDenoise"><code>FixedDenoise</code></a>, <a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.ShrunkDenoise"><code>ShrunkDenoise</code></a>).</p><p><strong>Fields</strong></p><ul><li><p><code>alg</code>: Denoising algorithm (<a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.SpectralDenoise"><code>SpectralDenoise</code></a>, <a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.FixedDenoise"><code>FixedDenoise</code></a>, <a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.ShrunkDenoise"><code>ShrunkDenoise</code></a>).</p></li><li><p><code>args</code>: Positional arguments for the univariate <a href="https://github.com/JuliaNLSolvers/Optim.jl" target="_blank" rel="noreferrer">Optim.optimize</a>.</p></li><li><p><code>kwargs</code>: Keyword arguments for the univariate <a href="https://github.com/JuliaNLSolvers/Optim.jl" target="_blank" rel="noreferrer">Optim.optimize</a>.</p></li><li><p><code>kernel</code>: Kernel function for <a href="https://github.com/joshday/AverageShiftedHistograms.jl" target="_blank" rel="noreferrer">AverageShiftedHistograms.ash</a>.</p></li><li><p><code>m</code>: Number of adjacent histograms to smooth over in <a href="https://github.com/joshday/AverageShiftedHistograms.jl" target="_blank" rel="noreferrer">AverageShiftedHistograms.ash</a>.</p></li><li><p><code>n</code>: Number of points in the range of eigenvalues used in the average shifted histogram density estimation.</p></li></ul><p><strong>Constructor</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Denoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDenoiseAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ShrunkDenoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kernel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AverageShiftedHistograms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Kernels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gaussian,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (), kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (;))</span></span></code></pre></div><p>Keyword arguments correspond to the fields above.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> de </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Denoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Denoise</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ShrunkDenoise</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   alpha </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Float64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Tuple{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  kwargs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  kernel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AverageShiftedHistograms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Kernels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gaussian)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AverageShiftedHistograms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Kernels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gaussian</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> de </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Denoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SpectralDenoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Denoise</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     alg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SpectralDenoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    args </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Tuple{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  kwargs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  kernel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AverageShiftedHistograms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Kernels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gaussian)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AverageShiftedHistograms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Kernels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gaussian</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       n </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Int64</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 500</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.AbstractDenoiseEstimator"><code>AbstractDenoiseEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.SpectralDenoise"><code>SpectralDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.FixedDenoise"><code>FixedDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.ShrunkDenoise"><code>ShrunkDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise!"><code>denoise!</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise"><code>denoise</code></a></p></li></ul>`,12)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[14]||(s[14]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e6853fb84a1513f97038b084a10864f8468cc69c/src/4_Denoise.jl#L134-L200",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",y,[i("summary",null,[s[16]||(s[16]=i("a",{id:"PortfolioOptimisers.denoise!",href:"#PortfolioOptimisers.denoise!"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.denoise!")],-1)),s[17]||(s[17]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[19]||(s[19]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">denoise!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Denoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; pdm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Posdef}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Posdef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">denoise!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>In-place denoising of a covariance or correlation matrix using a <a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#Denoise"><code>Denoise</code></a> estimator.</p><p>For covariance matrices, the function internally converts to a correlation matrix, applies the algorithm, and then rescales back to covariance.</p><p><strong>Arguments</strong></p><ul><li><p><code>de</code>: The estimator specifying the denoising algorithm.</p><ul><li><p><code>de::Denoise</code>: The specified denoising algorithm is applied to <code>X</code> in-place.</p></li><li><p><code>de::Nothing</code>: No-op.</p></li></ul></li><li><p><code>X</code>: The covariance or correlation matrix to be denoised (modified in-place).</p></li><li><p><code>q</code>: The effective sample ratio (e.g., <code>n_obs / n_assets</code>), used for spectral thresholding.</p></li><li><p><code>pdm</code>: Optional Positive definite matrix estimator. If provided, ensures the output is positive definite.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>nothing</code>. The input matrix <code>X</code> is modified in-place.</li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StableRNGs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rng </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> StableRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123456789</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rng, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.29494</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.0765</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.73334</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.01524</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.77493</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.0765</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   2.46967</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.39953</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.97242</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.07886</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.73334</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.39953</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.90712</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.17071</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.30459</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.01524</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.97242</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.17071</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.24818</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.87091</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.77493</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.07886</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.30459</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.87091</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.44414</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> denoise!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Denoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), X, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">×</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Matrix{Float64}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.29494</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.28883</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.70633</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.12343</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.17377</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.28883</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.46967</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.59575</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.98583</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.0329</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.70633</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.59575</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.90712</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.48044</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.51553</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.12343</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.98583</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.48044</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.24818</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.886</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.17377</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2.0329</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1.51553</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1.886</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    2.44414</span></span></code></pre></div><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise"><code>denoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#Denoise"><code>Denoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.SpectralDenoise"><code>SpectralDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.FixedDenoise"><code>FixedDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.ShrunkDenoise"><code>ShrunkDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/03_PosdefMatrix#PortfolioOptimisers.posdef!"><code>posdef!</code></a></p></li></ul>`,11)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[18]||(s[18]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e6853fb84a1513f97038b084a10864f8468cc69c/src/4_Denoise.jl#L374-L435",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",F,[i("summary",null,[s[20]||(s[20]=i("a",{id:"PortfolioOptimisers.denoise",href:"#PortfolioOptimisers.denoise"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.denoise")],-1)),s[21]||(s[21]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[23]||(s[23]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">denoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(de</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Denoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; pdm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Nothing, &lt;:Posdef}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Posdef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">denoise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Out-of-place version of <a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise!"><code>denoise!</code></a>.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise!"><code>denoise!</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#Denoise"><code>Denoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.SpectralDenoise"><code>SpectralDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.FixedDenoise"><code>FixedDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.ShrunkDenoise"><code>ShrunkDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/03_PosdefMatrix#PortfolioOptimisers.posdef"><code>posdef</code></a></p></li></ul>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[22]||(s[22]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e6853fb84a1513f97038b084a10864f8468cc69c/src/4_Denoise.jl#L460-L476",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",m,[i("summary",null,[s[24]||(s[24]=i("a",{id:"PortfolioOptimisers.AbstractDenoiseEstimator",href:"#PortfolioOptimisers.AbstractDenoiseEstimator"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractDenoiseEstimator")],-1)),s[25]||(s[25]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[27]||(s[27]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractDenoiseEstimator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractEstimator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for all denoising estimator types in PortfolioOptimisers.jl.</p><p>All concrete types that implement denoising of covariance or correlation matrices (e.g., via spectral, fixed, or shrinkage methods) should subtype <code>AbstractDenoiseEstimator</code>. This enables a consistent interface for denoising routines throughout the package.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/stable/api/01_Base#PortfolioOptimisers.AbstractEstimator"><code>AbstractEstimator</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#Denoise"><code>Denoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise!"><code>denoise!</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise"><code>denoise</code></a></p></li></ul>',5)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[26]||(s[26]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e6853fb84a1513f97038b084a10864f8468cc69c/src/4_Denoise.jl#L1-L16",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",u,[i("summary",null,[s[28]||(s[28]=i("a",{id:"PortfolioOptimisers.AbstractDenoiseAlgorithm",href:"#PortfolioOptimisers.AbstractDenoiseAlgorithm"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.AbstractDenoiseAlgorithm")],-1)),s[29]||(s[29]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[31]||(s[31]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractDenoiseAlgorithm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractAlgorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Abstract supertype for all denoising algorithm types in PortfolioOptimisers.jl.</p><p>All concrete types that implement a specific denoising algorithm (e.g., spectral, fixed, shrinkage) should subtype <code>AbstractDenoiseAlgorithm</code>. This enables flexible extension and dispatch of denoising routines.</p><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/stable/api/01_Base#PortfolioOptimisers.AbstractAlgorithm"><code>AbstractAlgorithm</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.SpectralDenoise"><code>SpectralDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.FixedDenoise"><code>FixedDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.ShrunkDenoise"><code>ShrunkDenoise</code></a></p></li></ul>',5)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[30]||(s[30]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e6853fb84a1513f97038b084a10864f8468cc69c/src/4_Denoise.jl#L19-L34",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",f,[i("summary",null,[s[32]||(s[32]=i("a",{id:"PortfolioOptimisers.errPDF",href:"#PortfolioOptimisers.errPDF"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.errPDF")],-1)),s[33]||(s[33]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[35]||(s[35]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">errPDF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vals</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       kernel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AverageShiftedHistograms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Kernels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gaussian, m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the sum of squared errors (SSE) between the theoretical Marčenko–Pastur (MP) eigenvalue density and the empirical eigenvalue density estimated from observed eigenvalues.</p><p>This function is used internally to fit the MP distribution to the observed spectrum, as part of the denoising procedure.</p><p><strong>Arguments</strong></p><ul><li><p><code>x</code>: Scale parameter for the MP distribution <code>[0, 1]</code>.</p></li><li><p><code>vals</code>: Observed eigenvalues.</p></li><li><p><code>q</code>: Effective sample ratio (e.g., <code>n_obs / n_assets</code>).</p></li><li><p><code>kernel</code>: Kernel function for <a href="https://github.com/joshday/AverageShiftedHistograms.jl" target="_blank" rel="noreferrer">AverageShiftedHistograms.ash</a>.</p></li><li><p><code>m</code>: Number of adjacent histograms to smooth over.</p></li><li><p><code>n</code>: Number of points in the range of eigenvalues for density estimation.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>sse::Real</code>: The sum of squared errors between the empirical and theoretical densities.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.find_max_eval"><code>find_max_eval</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#Denoise"><code>Denoise</code></a></p></li></ul>`,9)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[34]||(s[34]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e6853fb84a1513f97038b084a10864f8468cc69c/src/4_Denoise.jl#L289-L317",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",C,[i("summary",null,[s[36]||(s[36]=i("a",{id:"PortfolioOptimisers.find_max_eval",href:"#PortfolioOptimisers.find_max_eval"},[i("span",{class:"jlbinding"},"PortfolioOptimisers.find_max_eval")],-1)),s[37]||(s[37]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[39]||(s[39]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">find_max_eval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vals</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              kernel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Any</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AverageShiftedHistograms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Kernels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gaussian, m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (), kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (;))</span></span></code></pre></div><p>Estimate the upper edge of the Marčenko–Pastur (MP) distribution for a set of eigenvalues, used to separate signal from noise in random matrix denoising.</p><p>This function fits the MP distribution to the observed spectrum by minimizing the sum of squared errors between the empirical and theoretical densities, and returns the estimated maximum eigenvalue for noise.</p><p><strong>Arguments</strong></p><ul><li><p><code>vals</code>: Observed eigenvalues (typically sorted in ascending order).</p></li><li><p><code>q</code>: Effective sample ratio (e.g., <code>n_obs / n_assets</code>).</p></li><li><p><code>kernel</code>: Kernel function for <a href="https://github.com/joshday/AverageShiftedHistograms.jl" target="_blank" rel="noreferrer">AverageShiftedHistograms.ash</a>.</p></li><li><p><code>m</code>: Number of adjacent histograms to smooth over.</p></li><li><p><code>n</code>: Number of points in the range of eigenvalues for density estimation.</p></li><li><p><code>args</code>: Additional positional arguments for <a href="https://github.com/JuliaNLSolvers/Optim.jl" target="_blank" rel="noreferrer">Optim.optimize</a>.</p></li><li><p><code>kwargs</code>: Additional keyword arguments for <a href="https://github.com/JuliaNLSolvers/Optim.jl" target="_blank" rel="noreferrer">Optim.optimize</a>.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>(e_max::Real, x::Real)</code>: Tuple containing the estimated upper edge of the noise eigenvalue spectrum (<code>e_max</code>) and the fitted scale parameter (<code>x</code>).</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.errPDF"><code>errPDF</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#Denoise"><code>Denoise</code></a></p></li></ul>`,9)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[38]||(s[38]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e6853fb84a1513f97038b084a10864f8468cc69c/src/4_Denoise.jl#L333-L362",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",D,[i("summary",null,[s[40]||(s[40]=i("a",{id:"PortfolioOptimisers._denoise!",href:"#PortfolioOptimisers._denoise!"},[i("span",{class:"jlbinding"},"PortfolioOptimisers._denoise!")],-1)),s[41]||(s[41]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[43]||(s[43]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_denoise!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(alg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDenoiseAlgorithm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, X</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vals</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          vecs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, num_factors</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>In-place denoising of a covariance or correlation matrix using a specific denoising algorithm.</p><p>These methods are called internally by <a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise!"><code>denoise!</code></a> and <a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise"><code>denoise</code></a> when a <a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#Denoise"><code>Denoise</code></a> estimator is used, and should not typically be called directly.</p><p><strong>Arguments</strong></p><ul><li><p><code>alg::AbstractDenoiseAlgorithm</code>: The denoising algorithm to apply.</p><ul><li><p><code>alg::SpectralDenoise</code>: Sets the smallest <code>num_factors</code> eigenvalues to zero.</p></li><li><p><code>alg::FixedDenoise</code>: Replaces the smallest <code>num_factors</code> eigenvalues with their average.</p></li><li><p><code>alg::ShrunkDenoise</code>: Shrinks the smallest <code>num_factors</code> eigenvalues towards the diagonal, controlled by <code>alg.alpha</code>.</p></li></ul></li><li><p><code>X</code>: The matrix to be denoised (modified in-place).</p></li><li><p><code>vals</code>: Eigenvalues of <code>X</code>, sorted in ascending order.</p></li><li><p><code>vecs</code>: Corresponding eigenvectors of <code>X</code>.</p></li><li><p><code>num_factors</code>: Number of eigenvalues to treat as noise.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>nothing</code>. The input matrix <code>X</code> is modified in-place.</li></ul><p><strong>Related</strong></p><ul><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.denoise!"><code>denoise!</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#Denoise"><code>Denoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.SpectralDenoise"><code>SpectralDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.FixedDenoise"><code>FixedDenoise</code></a></p></li><li><p><a href="/PortfolioOptimisers.jl/stable/api/04_Denoise#PortfolioOptimisers.ShrunkDenoise"><code>ShrunkDenoise</code></a></p></li></ul>`,9)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[42]||(s[42]=[i("a",{href:"https://github.com/dcelisgarza/PortfolioOptimisers.jl/blob/e6853fb84a1513f97038b084a10864f8468cc69c/src/4_Denoise.jl#L223-L257",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const T=p(k,[["render",b]]);export{B as __pageData,T as default};
